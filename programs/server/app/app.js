var require = meteorInstall({"lib":{"1_collections":{"beta_users.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_collections/beta_users.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 18/07/2014.                                                                              //
 */                                                                                                                    //
BetaUsers = new Meteor.Collection('betaUsers');                                                                        // 4
BetaUsers.deny({ update: function () {                                                                                 // 5
    function update() {                                                                                                // 5
      return false;                                                                                                    // 5
    }                                                                                                                  // 5
                                                                                                                       //
    return update;                                                                                                     // 5
  }() });                                                                                                              // 5
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"buzzy_log.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_collections/buzzy_log.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 22/02/2016.                                                                              //
 */                                                                                                                    //
if (Meteor.isClient) {                                                                                                 // 4
    BuzzyLogData = new Mongo.Collection(null);                                                                         // 5
                                                                                                                       //
    BuzzyLogData.clearLog = function (resourceID) {                                                                    // 8
        BuzzyLogData.remove({ resourceID: resourceID });                                                               // 9
    };                                                                                                                 // 10
}                                                                                                                      // 14
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"errors.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_collections/errors.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 12/05/2014.                                                                              //
 */                                                                                                                    //
                                                                                                                       //
if (Meteor.isClient) {                                                                                                 // 5
    Errors = new Mongo.Collection(null);                                                                               // 6
                                                                                                                       //
    Errors.clearErrors = function () {                                                                                 // 9
        Errors.remove({ seen: true });                                                                                 // 10
    };                                                                                                                 // 11
    Errors.clearAllErrors = function () {                                                                              // 12
        Errors.remove({});                                                                                             // 13
    };                                                                                                                 // 14
}                                                                                                                      // 17
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"legacy_stubs.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_collections/legacy_stubs.js                                                                                   //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 8/10/2016.                                                                               //
 */                                                                                                                    //
Images = new Meteor.Collection(null);                                                                                  // 4
Attachements = new Meteor.Collection(null);                                                                            // 5
Avatars = new Meteor.Collection(null);                                                                                 // 6
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"user_tags_resource.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_collections/user_tags_resource.js                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 7/07/2014.                                                                               //
 */                                                                                                                    //
UserTagsResources = new Meteor.Collection('userTagsResources');                                                        // 4
                                                                                                                       //
UserTagsResources.allow({                                                                                              // 7
    update: Resources.ownsDocument,                                                                                    // 8
    remove: Resources.ownsDocument,                                                                                    // 9
    insert: Meteor.user                                                                                                // 10
});                                                                                                                    // 7
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"1_global":{"1_config.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_global/1_config.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 20/11/2014.                                                                              //
 */                                                                                                                    //
//FS.debug = true;                                                                                                     // 4
Accounts.oauth.registerService('microsoft');                                                                           // 5
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"2_globals.js":["currency-symbol-map",function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_global/2_globals.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 13/06/2014.                                                                              //
 */                                                                                                                    //
// The application                                                                                                     // 4
                                                                                                                       //
CURRENCY_SYMBOL_MAP = require('currency-symbol-map');                                                                  // 6
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"avatar.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_global/avatar.js                                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 5/12/2014.                                                                               //
 */                                                                                                                    //
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 5
    if (Meteor.isClient) {                                                                                             // 6
        Avatar.setOptions({                                                                                            // 7
            //emailHashProperty: 'email_hash',                                                                         // 8
            fallbackType: "default image",                                                                             // 9
            defaultType: "intials",                                                                                    // 10
            defaultImageUrl: 'https://buzzy.buzz/assets/img/avatar.png',                                               // 11
            //gravatarDefault: 'identicon'                                                                             // 12
            //serverBaseUrl: 'http://example.com'                                                                      // 13
            generateCSS: false                                                                                         // 14
        });                                                                                                            // 7
    }                                                                                                                  // 16
});                                                                                                                    // 21
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"counter.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_global/counter.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 18/02/2016.                                                                              //
 */                                                                                                                    //
if (Meteor.isClient) {                                                                                                 // 4
    Counter = {};                                                                                                      // 5
    Counter.collection = new Meteor.Collection('counters-collection');                                                 // 6
                                                                                                                       //
    Counter.get = function (name) {                                                                                    // 8
        var doc = Counter.collection.findOne(name);                                                                    // 9
        if (doc) {                                                                                                     // 10
            return doc.count;                                                                                          // 11
        } else {                                                                                                       // 12
            return 0;                                                                                                  // 13
        }                                                                                                              // 14
    };                                                                                                                 // 15
}                                                                                                                      // 16
                                                                                                                       //
if (Meteor.isServer) {                                                                                                 // 18
                                                                                                                       //
    Counter = function Counter(name, cursor, interval) {                                                               // 20
        this.name = name;                                                                                              // 21
        this.cursor = cursor;                                                                                          // 22
        this.interval = interval || 1000 * 10;                                                                         // 23
        this._collectionName = 'counters-collection';                                                                  // 24
    };                                                                                                                 // 25
                                                                                                                       //
    // every cursor must provide a collection name via this method                                                     // 27
    Counter.prototype._getCollectionName = function () {                                                               // 28
        return "counter-" + this._collectionName;                                                                      // 29
    };                                                                                                                 // 30
                                                                                                                       //
    // the api to publish                                                                                              // 32
    Counter.prototype._publishCursor = function (sub) {                                                                // 33
                                                                                                                       //
        var self = this;                                                                                               // 35
                                                                                                                       //
        var count = self.cursor.count();                                                                               // 37
        sub.added(self._collectionName, self.name, { count: count });                                                  // 38
                                                                                                                       //
        var handler = Meteor.setInterval(function () {                                                                 // 40
            var count = self.cursor.count();                                                                           // 41
            sub.changed(self._collectionName, self.name, { count: count });                                            // 42
        }, self.interval);                                                                                             // 43
                                                                                                                       //
        sub.onStop(function () {                                                                                       // 45
            Meteor.clearTimeout(handler);                                                                              // 46
        });                                                                                                            // 47
    };                                                                                                                 // 48
}                                                                                                                      // 49
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"push.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_global/push.js                                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 28/12/2014.                                                                              //
 */                                                                                                                    //
Push.allow({                                                                                                           // 4
    send: function () {                                                                                                // 5
        function send(userId, notification) {                                                                          // 5
            // Allow all users to send to everybody - For test only!                                                   // 6
            return true;                                                                                               // 7
        }                                                                                                              // 8
                                                                                                                       //
        return send;                                                                                                   // 5
    }()                                                                                                                // 5
});                                                                                                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"saml2.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/1_global/saml2.js                                                                                               //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 26/05/2016.                                                                              //
 */                                                                                                                    //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"3_methods":{"comments.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/3_methods/comments.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 15/07/15.                                                                                //
 */                                                                                                                    //
                                                                                                                       //
Meteor.methods({                                                                                                       // 5
    // LOOK AT ADDING OPTIONAL USER ID PARAM FOR SERVER SIDE ROUTE - could check for a token or something              // 6
                                                                                                                       //
    addComment: function () {                                                                                          // 8
        function addComment(commentAttributes, topLevelParentID, truncatedComment, truncatedText, optCommentExtraContent, optMeteorUserID, optCommentID, optUserToken) {
                                                                                                                       //
            var user = BuzzyGlobal.getCurrentUser(optUserToken);                                                       // 10
                                                                                                                       //
            var resource = Resources.findOne(commentAttributes.resourceParentID);                                      // 13
            if (!resource) {                                                                                           // 14
                BuzzyGlobal.throwError("Invalid Resource ID");                                                         // 15
                return;                                                                                                // 16
            }                                                                                                          // 17
            var newCommentID = typeof optCommentID !== "undefined" && optCommentID !== null ? optCommentID : new Meteor.Collection.ObjectID()._str;
            if (!newCommentID) {                                                                                       // 19
                BuzzyGlobal.throwError("Invalid Comment ID");                                                          // 20
            }                                                                                                          // 21
            // ensure the user is logged in                                                                            // 22
            if (!user) {                                                                                               // 23
                if (typeof optMeteorUserID === "undefined") {                                                          // 24
                    throw new Meteor.Error(411, "You need to login to make comments");                                 // 25
                } else {                                                                                               // 26
                    user = Users.findOne(optMeteorUserID);                                                             // 27
                    if (!user) {                                                                                       // 28
                        throw new Meteor.Error(411, "Error getting user information");                                 // 29
                    }                                                                                                  // 30
                }                                                                                                      // 31
            };                                                                                                         // 33
                                                                                                                       //
            if (resource.isStarterTemplate) {                                                                          // 35
                BuzzyGlobal.throwError("Sorry, you can't comment on a template. Please create a new buzz using the template and invite someone and comment from there.");
                return;                                                                                                // 37
            }                                                                                                          // 38
                                                                                                                       //
            if (!commentAttributes.message && typeof optCommentExtraContent === "undefined") {                         // 41
                throw new Meteor.Error(411, 'Please write some content');                                              // 42
            };                                                                                                         // 43
            if (!resource) {                                                                                           // 44
                throw new Meteor.Error(411, 'You must comment on something');                                          // 45
            };                                                                                                         // 46
            if (!Resources.canView(user._id, resource)) {                                                              // 47
                BuzzyGlobal.throwError("Sorry you cannot comment in this buzz.");                                      // 48
            }                                                                                                          // 49
            var status = "";                                                                                           // 50
            if (resource.commentsApprovalRequired && !BuzzyGlobal.gIsCommentModerator(user._id, topLevelParentID) && (typeof commentAttributes.toUsers === "undefined" || commentAttributes.toUsers === null || commentAttributes.toUsers && commentAttributes.toUsers.length === 0)) {
                status = BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL;                                                  // 52
            } else {                                                                                                   // 53
                status = BuzzyGlobal.gCOMMENTSTATUS.LIVE;                                                              // 54
            }                                                                                                          // 55
                                                                                                                       //
            var submittedDate;                                                                                         // 57
            if (Meteor.isClient) {                                                                                     // 58
                submittedDate = TimeSync.serverTime();                                                                 // 59
            } else {                                                                                                   // 60
                submittedDate = new Date().getTime();                                                                  // 61
            }                                                                                                          // 62
            if (typeof commentAttributes.toUsers !== "undefined" && commentAttributes.toUsers) {                       // 63
                commentAttributes.toUsers.push(user._id);                                                              // 64
            }                                                                                                          // 65
            var comment = _.extend(_.pick(commentAttributes, 'resourceParentID', 'message', 'topLevelParentID', 'toUsers', 'watsonContext'), {
                userID: user._id,                                                                                      // 67
                author: BuzzyGlobal.gGetUserNameByID(user._id),                                                        // 68
                type: 'comment',                                                                                       // 69
                submitted: submittedDate,                                                                              // 70
                status: status,                                                                                        // 71
                _id: newCommentID                                                                                      // 72
            });                                                                                                        // 66
            if (typeof optCommentExtraContent != "undefined") {                                                        // 74
                comment.extraContent = optCommentExtraContent;                                                         // 75
            }                                                                                                          // 76
                                                                                                                       //
            if (Meteor.isServer) {                                                                                     // 78
                comment.message = sanitizeHtml(comment.message);                                                       // 79
            }                                                                                                          // 80
            comment._id = Comments.insert(comment, function (error) {                                                  // 81
                if (!error) {                                                                                          // 82
                                                                                                                       //
                    if (Meteor.isServer) {                                                                             // 84
                        if (comment.status === BuzzyGlobal.gCOMMENTSTATUS.LIVE) {                                      // 85
                            if (resource.status === BuzzyGlobal.gRESOURCE_STATUS.PUBLISHED) {                          // 86
                                Meteor.call("createCommentNotification", comment, topLevelParentID, comment.resourceParentID, truncatedText);
                                Meteor.call('sendCommentToWatson', comment);                                           // 88
                            } else {                                                                                   // 89
                                Meteor.call("createCommentNotificationAuthorsAndOwners", comment, topLevelParentID, comment.resourceParentID, truncatedText);
                            }                                                                                          // 91
                        } else if (comment.status === BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL) {                   // 93
                            Meteor.call("createCommentNotificationAuthorsAndOwners", comment, topLevelParentID, comment.resourceParentID, truncatedText);
                        }                                                                                              // 95
                                                                                                                       //
                        Meteor.call("updateUpdatedDate", topLevelParentID);                                            // 98
                    }                                                                                                  // 99
                }                                                                                                      // 102
            });                                                                                                        // 103
            // now create a notification, informing the user that there's been a comment                               // 104
                                                                                                                       //
            return comment._id;                                                                                        // 106
        }                                                                                                              // 108
                                                                                                                       //
        return addComment;                                                                                             // 8
    }(),                                                                                                               // 8
    sendCommentToAll: function () {                                                                                    // 109
        function sendCommentToAll(commentID) {                                                                         // 109
            if (commentID) {                                                                                           // 110
                var comment = Comments.findOne({ _id: commentID });                                                    // 111
                if (!comment) {                                                                                        // 112
                    BuzzyGlobal.throwError("Can't find comment!");                                                     // 113
                }                                                                                                      // 114
                var resource = Resources.findOne({ _id: comment.topLevelParentID });                                   // 115
                var toUsers = null;                                                                                    // 116
                if (resource.commentsApprovalRequired && !BuzzyGlobal.gIsCommentModerator(Meteor.userId(), comment.topLevelParentID)) {
                    comment.status = BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL;                                      // 118
                    toUsers = comment.toUsers;                                                                         // 119
                }                                                                                                      // 120
                if (comment.toUsers.indexOf(Meteor.userId()) !== -1) {                                                 // 121
                    Comments.update({ _id: commentID }, { $set: { toUsers: toUsers, status: comment.status } }, function (err) {
                        if (err) {                                                                                     // 126
                            BuzzyGlobal.throwError(err);                                                               // 127
                        } else {                                                                                       // 128
                            var truncatedText = comment.message.substring(0, BuzzyGlobal.gTRUNCATE_COMMENT_TEXT);      // 129
                            var updatedComment = Comments.findOne({ _id: commentID });                                 // 130
                            Meteor.call("createCommentNotification", updatedComment, updatedComment.topLevelParentID, updatedComment.resourceParentID, truncatedText, comment.toUsers);
                        }                                                                                              // 132
                    });                                                                                                // 133
                }                                                                                                      // 135
            }                                                                                                          // 136
        }                                                                                                              // 138
                                                                                                                       //
        return sendCommentToAll;                                                                                       // 109
    }()                                                                                                                // 109
});                                                                                                                    // 5
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"notifications.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/3_methods/notifications.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 15/07/15.                                                                                //
 */                                                                                                                    //
createCustomNotification = function createCustomNotification(resource, action, message, recipients) {                  // 4
                                                                                                                       //
    //var resource = Resources.findOne(comment.resourceParentID);                                                      // 6
    //var resource = Resources.findOne(parentResourceID);// come back to look at children notifications later, for now do for parent
    var emailRecipients = [];                                                                                          // 8
    var user = Meteor.user();                                                                                          // 9
                                                                                                                       //
    for (i in meteorBabelHelpers.sanitizeForInObject(recipients)) {                                                    // 11
        var toUser = BuzzyGlobal.gGetUserforEmail(recipients[i]);                                                      // 12
                                                                                                                       //
        var activity = {                                                                                               // 15
            "actor": {                                                                                                 // 16
                "objectType": "person",                                                                                // 17
                "displayName": BuzzyGlobal.gGetUserName(user)                                                          // 18
            },                                                                                                         // 16
            "verb": action.type,                                                                                       // 20
            "object": {                                                                                                // 21
                "objectType": "note",                                                                                  // 22
                "content": message                                                                                     // 23
            },                                                                                                         // 21
            "target": {                                                                                                // 25
                "objectType": "person",                                                                                // 26
                "displayName": BuzzyGlobal.gGetUserName(toUser)                                                        // 27
            }                                                                                                          // 25
        };                                                                                                             // 15
                                                                                                                       //
        if (toUser && typeof toUser._id !== "undefined") {                                                             // 31
            Notifications.insert({                                                                                     // 32
                forUserID: toUser._id,                                                                                 // 33
                byUserID: user._id,                                                                                    // 34
                activity: activity,                                                                                    // 35
                target: resource._id,                                                                                  // 36
                //resourceID: resource._id,                                                                            // 37
                resourceID: resource._id, // insert for parent not actual resource ID, may need to come back to this   // 38
                commentID: null,                                                                                       // 39
                commenterName: user.profile.name,                                                                      // 40
                read: false,                                                                                           // 41
                submitted: new Date().getTime()                                                                        // 42
            });                                                                                                        // 32
                                                                                                                       //
            console.log({                                                                                              // 45
                from: activity.actor.displayName,                                                                      // 46
                title: "Some title",                                                                                   // 47
                text: activity.verb + activity.target.displayName,                                                     // 48
                badge: Meteor.call("gNotificationsUnreadForUserID", toUser._id), // get notifications count for user   // 49
                sound: 'yes',                                                                                          // 50
                query: {                                                                                               // 51
                    userId: toUser._id                                                                                 // 52
                } });                                                                                                  // 51
                                                                                                                       //
            Push.send({                                                                                                // 55
                from: activity.actor.displayName,                                                                      // 56
                title: "Some title",                                                                                   // 57
                text: activity.verb + activity.target.displayName,                                                     // 58
                badge: Meteor.call("gNotificationsUnreadForUserID", toUser._id), // get notifications count for user   // 59
                sound: 'yes',                                                                                          // 60
                query: {                                                                                               // 61
                    userId: toUser._id                                                                                 // 62
                }                                                                                                      // 61
                                                                                                                       //
            });                                                                                                        // 55
        } else {                                                                                                       // 67
            if (typeof toUser._id !== "undefined") {                                                                   // 68
                emailRecipients.push(recipients[i]);                                                                   // 69
            }                                                                                                          // 70
        }                                                                                                              // 73
        /*  if (emailRecipients) {                                                                                     // 74
         //console.log("about to call sendEmailNotifications:" + emailRecipients + " url: " + Meteor.absoluteUrl());   //
         Meteor.call('sendExternalEmailNotifications', emailRecipients, message, resource._id, function (error, id) {  //
         if (error) {                                                                                                  //
         // display the error to the user                                                                              //
         BuzzyGlobal.throwError(error.reason);                                                                         //
         }                                                                                                             //
         });                                                                                                           //
          }*/                                                                                                          //
        return;                                                                                                        // 84
    }                                                                                                                  // 87
};                                                                                                                     // 91
                                                                                                                       //
createContactNotification = function createContactNotification(targetUserID) {                                         // 93
                                                                                                                       //
    //var resource = Resources.findOne(comment.resourceParentID);                                                      // 95
    //var resource = Resources.findOne(parentResourceID);// come back to look at children notifications later, for now do for parent
    var emailRecipients = [];                                                                                          // 97
    var user = Meteor.user();                                                                                          // 98
    if (!user) {                                                                                                       // 99
        BuzzyGlobal.throwError("No user found");                                                                       // 100
    }                                                                                                                  // 101
                                                                                                                       //
    var activity = {                                                                                                   // 104
        "actor": {                                                                                                     // 105
            "objectType": "person",                                                                                    // 106
            "displayName": BuzzyGlobal.gGetUserName(user)                                                              // 107
        },                                                                                                             // 105
        "verb": "request-contact",                                                                                     // 109
        "object": {                                                                                                    // 110
            "objectType": "person",                                                                                    // 111
            "displayName": BuzzyGlobal.gGetUserNameByID(targetUserID),                                                 // 112
            "objectUserID": targetUserID                                                                               // 113
        }                                                                                                              // 110
    };                                                                                                                 // 104
                                                                                                                       //
    if (targetUserID) {                                                                                                // 120
        Notifications.insert({                                                                                         // 121
            forUserID: targetUserID,                                                                                   // 122
            byUserID: user._id,                                                                                        // 123
            activity: activity,                                                                                        // 124
            target: null,                                                                                              // 125
            //resourceID: resource._id,                                                                                // 126
            resourceID: null, // insert for parent not actual resource ID, may need to come back to this               // 127
            commentID: null,                                                                                           // 128
            commenterName: user.profile.name,                                                                          // 129
            read: false,                                                                                               // 130
            submitted: new Date().getTime()                                                                            // 131
        });                                                                                                            // 121
                                                                                                                       //
        Notifications.insert({                                                                                         // 134
            forUserID: user._id,                                                                                       // 135
            byUserID: user._id,                                                                                        // 136
            activity: activity,                                                                                        // 137
            target: null,                                                                                              // 138
            //resourceID: resource._id,                                                                                // 139
            resourceID: null, // insert for parent not actual resource ID, may need to come back to this               // 140
            commentID: null,                                                                                           // 141
            commenterName: user.profile.name,                                                                          // 142
            read: true,                                                                                                // 143
            submitted: new Date().getTime()                                                                            // 144
        });                                                                                                            // 134
    }                                                                                                                  // 147
                                                                                                                       //
    return;                                                                                                            // 151
};                                                                                                                     // 155
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"resourceFollowers.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/3_methods/resourceFollowers.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 15/07/15.                                                                                //
 */                                                                                                                    //
Meteor.methods({                                                                                                       // 4
    unfollowResourceByEmail: function () {                                                                             // 5
        function unfollowResourceByEmail(userEmail, resourceID) {                                                      // 5
            // need to add some token as well.                                                                         // 6
            if (userEmail && resourceID) {                                                                             // 7
                var follower = BuzzyGlobal.gGetUserforEmail(userEmail);                                                // 8
                if (typeof follower !== "undefined") {                                                                 // 9
                    if (Resources.resourceIsFollowed(follower._id, resourceID)) {                                      // 10
                        console.log("removing follower:resource " + follower._id + ":" + resourceID);                  // 11
                        var resourceFollower = ResourceFollowers.remove({ $and: [{ resourceID: resourceID }, { userID: follower._id }] }, function (error) {
                            if (error) {                                                                               // 13
                                throw new Meteor.Error(422, error.reason);                                             // 14
                            } else {                                                                                   // 15
                                ResourceFollowers.updateResourceFollowersCount(resourceID);                            // 16
                            }                                                                                          // 17
                        });                                                                                            // 18
                    }                                                                                                  // 20
                } else {                                                                                               // 21
                    BuzzyGlobal.throwError("invalid user");                                                            // 22
                }                                                                                                      // 23
            } else {                                                                                                   // 25
                BuzzyGlobal.throwError("invalid params");                                                              // 26
            }                                                                                                          // 27
        }                                                                                                              // 30
                                                                                                                       //
        return unfollowResourceByEmail;                                                                                // 5
    }(),                                                                                                               // 5
    addFollower: function () {                                                                                         // 31
        function addFollower(resourceID, followerID) {                                                                 // 31
            var user = Meteor.user();                                                                                  // 32
            // ensure the user is logged in                                                                            // 33
            if (!user) BuzzyGlobal.throwError("You need to login to follow");                                          // 34
            if (!resourceID) BuzzyGlobal.throwError("Invalid Resource ID");                                            // 36
                                                                                                                       //
            var resource = Resources.findOne({ _id: resourceID });                                                     // 39
                                                                                                                       //
            if (resource && !Resources.resourceIsFollowed(followerID, resourceID) && Resources.canView(user._id, resource)) {
                                                                                                                       //
                var resourceFollower = {                                                                               // 44
                    userID: followerID,                                                                                // 45
                    resourceID: resourceID,                                                                            // 46
                    submitted: new Date().getTime()                                                                    // 47
                };                                                                                                     // 44
                                                                                                                       //
                var resourceFollower = ResourceFollowers.insert(resourceFollower, function (error) {                   // 50
                    if (error) {                                                                                       // 51
                        BuzzyGlobal.throwError(error.reason);                                                          // 52
                    } else {                                                                                           // 53
                        ResourceFollowers.updateResourceFollowersCount(resourceID);                                    // 54
                    }                                                                                                  // 55
                });                                                                                                    // 56
            }                                                                                                          // 59
                                                                                                                       //
            return true;                                                                                               // 62
        }                                                                                                              // 63
                                                                                                                       //
        return addFollower;                                                                                            // 31
    }(),                                                                                                               // 31
    removeFollower: function () {                                                                                      // 64
        function removeFollower(resourceID, followerID) {                                                              // 64
            var user = Meteor.user();                                                                                  // 65
            // ensure the user is logged in                                                                            // 66
                                                                                                                       //
            if (!user) throw new Meteor.Error(401, "You need to login to follow");                                     // 68
                                                                                                                       //
            if (Resources.resourceIsFollowed(followerID, resourceID)) {                                                // 71
                var resourceFollower = ResourceFollowers.remove({ $and: [{ resourceID: resourceID }, { userID: followerID }] }, function (error) {
                    console.log("removeFollower:", error);                                                             // 73
                    if (error) {                                                                                       // 74
                        throw new Meteor.Error(422, error.reason);                                                     // 75
                    } else {                                                                                           // 76
                        ResourceFollowers.updateResourceFollowersCount(resourceID);                                    // 77
                    }                                                                                                  // 78
                });                                                                                                    // 79
            }                                                                                                          // 81
            return true;                                                                                               // 82
        }                                                                                                              // 83
                                                                                                                       //
        return removeFollower;                                                                                         // 64
    }(),                                                                                                               // 64
                                                                                                                       //
    toggleFollowResource: function () {                                                                                // 85
        function toggleFollowResource(resourceID) {                                                                    // 85
            var user = Meteor.user();                                                                                  // 86
            // ensure the user is logged in                                                                            // 87
            if (!user) throw new Meteor.Error(401, "You need to login to follow");                                     // 88
                                                                                                                       //
            if (!Resources.resourceIsFollowed(user._id, resourceID)) {                                                 // 91
                var resourceFollower = {                                                                               // 92
                    userID: user._id,                                                                                  // 93
                    resourceID: resourceID,                                                                            // 94
                    submitted: new Date().getTime()                                                                    // 95
                };                                                                                                     // 92
                                                                                                                       //
                var resourceFollower = ResourceFollowers.insert(resourceFollower, function (error) {                   // 98
                    if (error) {                                                                                       // 99
                        throw new Meteor.Error(422, error.reason);                                                     // 100
                    } else {                                                                                           // 101
                        ResourceFollowers.updateResourceFollowersCount(resourceID);                                    // 102
                    }                                                                                                  // 103
                });                                                                                                    // 104
            } else {                                                                                                   // 108
                ResourceFollowers.remove({ $and: [{ resourceID: resourceID }, { userID: user._id }] });                // 110
                ResourceFollowers.updateResourceFollowersCount(resourceID, function (error) {                          // 111
                    if (error) {                                                                                       // 112
                        throw new Meteor.Error(422, error.reason);                                                     // 113
                    } else {                                                                                           // 114
                        ResourceFollowers.updateResourceFollowersCount(resourceID);                                    // 115
                    }                                                                                                  // 116
                });                                                                                                    // 117
            }                                                                                                          // 118
                                                                                                                       //
            return true;                                                                                               // 120
        }                                                                                                              // 121
                                                                                                                       //
        return toggleFollowResource;                                                                                   // 85
    }()                                                                                                                // 85
                                                                                                                       //
});                                                                                                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"resources.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/3_methods/resources.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 15/07/15.                                                                                //
 */                                                                                                                    //
resourceQuery = function resourceQuery(userID, resourceListType, searchQuery) {                                        // 4
    var searchUserExpression = new RegExp(userID);                                                                     // 5
    var followResourceArray = ResourceFollowers.find({ userID: userID }).map(function (followItem) {                   // 6
        return followItem.resourceID;                                                                                  // 7
    });                                                                                                                // 8
    if (typeof searchQuery != "undefined" && searchQuery) {                                                            // 9
                                                                                                                       //
        var searchQueryExpression = new RegExp(searchQuery, "i");                                                      // 11
        return { $or: [{ $and: [{ title: searchQueryExpression }, { path: null }, { type: "buzz" }, { isStarterTemplate: false }, { $or: [{ editors: searchUserExpression }, { owners: searchUserExpression }] }, { $or: [{ status: 'draft' }, { status: 'published' }] }] }, { $and: [{ title: searchQueryExpression }, { path: null }, { type: "buzz" }, { isStarterTemplate: false }, { readers: searchUserExpression }, { status: 'published' }] }, { $and: [{ title: searchQueryExpression }, { path: null }, { type: "buzz" }, { $or: [{ privacy: BuzzyGlobal.gPRIVACY.PUBLIC }, { privacy: BuzzyGlobal.gPRIVACY.UNLISTED }] }, { isStarterTemplate: false }, { status: 'published' }, { _id: { $in: followResourceArray } }] }] };
    } else {                                                                                                           // 43
                                                                                                                       //
        return { $or: [{ $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: false }, { $or: [{ editors: searchUserExpression }, { owners: searchUserExpression }] }, { $or: [{ status: 'draft' }, { status: 'published' }] }] }, { $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: false }, { readers: searchUserExpression }, { status: 'published' }] }, { $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: false }, { status: 'published' }, { $or: [{ privacy: BuzzyGlobal.gPRIVACY.PUBLIC }, { privacy: BuzzyGlobal.gPRIVACY.UNLISTED }] }, { _id: { $in: followResourceArray } }] }] };
    }                                                                                                                  // 74
};                                                                                                                     // 78
                                                                                                                       //
resourceAndChildrenQuery = function resourceAndChildrenQuery(resourceID) {                                             // 80
    self = this;                                                                                                       // 81
    var userID = Meteor.userId;                                                                                        // 82
                                                                                                                       //
    var resource = Resources.findOne({ _id: resourceID });                                                             // 84
    //var resource = Resources.findOne({_id:resourceID});                                                              // 85
    if (!resource) {                                                                                                   // 86
        console.log("error 1");                                                                                        // 87
        //throw new Meteor.Error("no-resource 1","Can't find resource");                                               // 88
        return null;                                                                                                   // 89
    }                                                                                                                  // 91
                                                                                                                       //
    if (resource.status === BuzzyGlobal.gRESOURCE_STATUS.ARCHIVED || resource.status === BuzzyGlobal.gRESOURCE_STATUS.DELETED) {
        console.log("error 2");                                                                                        // 94
        //throw new Meteor.Error("no-resource 2","Can't find resource");                                               // 95
                                                                                                                       //
        return null;                                                                                                   // 97
    }                                                                                                                  // 99
                                                                                                                       //
    var searchExpression = new RegExp("^," + resourceID + ",");                                                        // 101
                                                                                                                       //
    if (resource.privacy === BuzzyGlobal.gPRIVACY.PUBLIC || resource.privacy === BuzzyGlobal.gPRIVACY.UNLISTED) {      // 104
        var uniqueUsers = BuzzyGlobal.gUniqueUsers(resource);                                                          // 105
        if (Resources.canEdit(userID, resource)) {                                                                     // 106
            return [Resources.find({ $and: [{ $or: [{ status: 'published' }, { status: 'draft' }] }, { $or: [{ _id: resourceID }, { path: searchExpression }] }] })];
        } else {                                                                                                       // 125
            return [Resources.find({ $and: [{ status: 'published' }, { $or: [{ _id: resourceID }, { path: searchExpression }] }] })];
        }                                                                                                              // 141
    } else {                                                                                                           // 143
        if (userID) {                                                                                                  // 144
            console.log("HERE 1");                                                                                     // 145
            var userSearchExpression = new RegExp(userID);                                                             // 146
            var resourcesCursor = Resources.find({ $and: [{ $or: [{ _id: resourceID }, { path: searchExpression }] }, { $or: [{ userID: userID }, { readers: userSearchExpression }, { editors: userSearchExpression }, { owners: userSearchExpression }] }, { $or: [{ status: 'draft' }, { status: 'published' }] }] });
            console.log("HERE 2", resourcesCursor);                                                                    // 162
            return resourcesCursor;                                                                                    // 163
        } else {                                                                                                       // 166
            throw new Meteor.Error("no-resource 3", "Can't find resource");                                            // 167
                                                                                                                       //
            return null;                                                                                               // 169
        }                                                                                                              // 171
    }                                                                                                                  // 173
};                                                                                                                     // 174
                                                                                                                       //
templateQuery = function templateQuery(userID, resourceListType, searchString) {                                       // 176
    var searchExpression = new RegExp(userID);                                                                         // 177
    console.log("templateQuery searchExpression:" + searchExpression);                                                 // 178
    switch (resourceListType) {                                                                                        // 179
                                                                                                                       //
        case 'my':                                                                                                     // 181
            console.log("my");                                                                                         // 182
            if (searchString) {                                                                                        // 183
                var searchQueryExpression = new RegExp(searchString, "i");                                             // 184
                return { $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: true }, { $or: [{ status: 'draft' }, { status: 'published' }, { status: 'unlisted' }] }, { $or: [{ userID: userID }, { editors: searchExpression }, { readers: searchExpression }, { owners: searchExpression }] }, { title: searchQueryExpression }] };
            } else {                                                                                                   // 200
                                                                                                                       //
                return { $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: true }, { $or: [{ status: 'draft' }, { status: 'published' }, { status: 'unlisted' }] }, { $or: [{ userID: userID }, { editors: searchExpression }, { readers: searchExpression }, { owners: searchExpression }] }] };
            }                                                                                                          // 215
                                                                                                                       //
            break;                                                                                                     // 218
                                                                                                                       //
        default:                                                                                                       // 221
                                                                                                                       //
            console.log("all");                                                                                        // 223
            if (searchString) {                                                                                        // 224
                var searchQueryExpression = new RegExp(searchString, "i");                                             // 225
                return { $or: [{ $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: true }, { $or: [{ userID: userID }, { editors: searchExpression }, { readers: searchExpression }, { owners: searchExpression }] }, { status: "published" }, { privacy: "private" }, { title: searchQueryExpression }] }, { $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: true }, { status: "published" }, { privacy: "public" }, { title: searchQueryExpression }] }] };
            } else {                                                                                                   // 252
                return { $or: [{ $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: true }, { $or: [{ userID: userID }, { editors: searchExpression }, { readers: searchExpression }, { owners: searchExpression }] }, { status: "published" }, { privacy: "private" }] }, { $and: [{ path: null }, { type: "buzz" }, { isStarterTemplate: true }, { status: "published" }, { privacy: "public" }] }] };
            }                                                                                                          // 276
                                                                                                                       //
            break;                                                                                                     // 278
                                                                                                                       //
    }                                                                                                                  // 179
};                                                                                                                     // 281
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stripe.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/3_methods/stripe.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 21/03/2016.                                                                              //
 */                                                                                                                    //
STRIPE_TOKEN_URI = 'https://connect.stripe.com/oauth/token';                                                           // 4
STRIPE_AUTHORIZE_URI = 'https://connect.stripe.com/oauth/authorize';                                                   // 5
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userTags.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/3_methods/userTags.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 15/07/15.                                                                                //
 */                                                                                                                    //
Meteor.methods({                                                                                                       // 4
                                                                                                                       //
    updateTags: function () {                                                                                          // 6
        function updateTags(resourceID, tags) {                                                                        // 6
            //var user = Meteor.user();                                                                                // 7
            // ensure the user is logged in                                                                            // 8
            console.log("Add Tag resID:" + resourceID);                                                                // 9
            if (!Meteor.userId()) throw new Meteor.Error(401, "You need to login to tag");                             // 10
                                                                                                                       //
            var newUserTagsResource = {                                                                                // 14
                resourceID: resourceID,                                                                                // 15
                userID: Meteor.userId(),                                                                               // 16
                tags: tags                                                                                             // 17
            };                                                                                                         // 14
                                                                                                                       //
            existingUserTagResource = UserTagsResources.findOne({ $and: [{ resourceID: resourceID }, { userID: Meteor.userId() }] });
                                                                                                                       //
            if (existingUserTagResource) {                                                                             // 23
                var updatedUserTagResource = UserTagsResources.update(existingUserTagResource._id, newUserTagsResource);
                console.log("1 Add Tag resID:" + resourceID);                                                          // 25
            } else {                                                                                                   // 27
                var newUserTagResource = UserTagsResources.insert(newUserTagsResource);                                // 28
                console.log(" 2 Add Tag resID:" + resourceID);                                                         // 29
            }                                                                                                          // 30
                                                                                                                       //
            return true;                                                                                               // 33
        }                                                                                                              // 34
                                                                                                                       //
        return updateTags;                                                                                             // 6
    }()                                                                                                                // 6
                                                                                                                       //
});                                                                                                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"router.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// lib/router.js                                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 15/09/2014.                                                                              //
 */                                                                                                                    //
var subs = new SubsManager();                                                                                          // 4
                                                                                                                       //
ResourceCommentsController = RouteController.extend({                                                                  // 7
    template: 'resourcePage',                                                                                          // 8
    increment: BuzzyGlobal.gCOMMENT_LIMIT,                                                                             // 9
    layoutTemplate: function () {                                                                                      // 10
        function layoutTemplate() {                                                                                    // 10
            return Meteor.userId() ? 'layoutApp' : 'layoutPublicResource';                                             // 11
        }                                                                                                              // 12
                                                                                                                       //
        return layoutTemplate;                                                                                         // 10
    }(),                                                                                                               // 10
    commentLimit: function () {                                                                                        // 13
        function commentLimit() {                                                                                      // 13
            return parseInt(this.params.commentLimit) || this.increment;                                               // 14
        }                                                                                                              // 15
                                                                                                                       //
        return commentLimit;                                                                                           // 13
    }(),                                                                                                               // 13
                                                                                                                       //
    waitOn: function () {                                                                                              // 18
        function waitOn() {                                                                                            // 18
                                                                                                                       //
            Session.set('currentResourceID', this.params._id);                                                         // 20
            Session.set('topLevelParentID', this.params._id);                                                          // 21
            Session.set('currentHash', this.params.hash);                                                              // 22
            Session.set('query', this.params.query);                                                                   // 23
            Session.set("resourceChangeList", []);                                                                     // 24
                                                                                                                       //
            var limitObj = {};                                                                                         // 27
            if (this.params.resourceID) {                                                                              // 28
                //limitObj =  {resourceID: this.params.resourceID, limit: this.commentLimit()};                        // 29
                limitObj = {                                                                                           // 30
                    resourceID: this.params.resourceID,                                                                // 31
                    limit: this.commentLimit(),                                                                        // 32
                    commentUpLimit: BuzzyGlobal.gCOMMENT_LIMIT,                                                        // 33
                    commentDownLimit: BuzzyGlobal.gCOMMENT_LIMIT                                                       // 34
                };                                                                                                     // 30
                Session.set("currentCommentLimit", limitObj);                                                          // 36
            } else {                                                                                                   // 38
                limitObj = {                                                                                           // 39
                    resourceID: null,                                                                                  // 40
                    limit: this.commentLimit(),                                                                        // 41
                    commentUpLimit: BuzzyGlobal.gCOMMENT_LIMIT,                                                        // 42
                    commentDownLimit: BuzzyGlobal.gCOMMENT_LIMIT                                                       // 43
                };                                                                                                     // 39
                Session.set("currentCommentLimit", limitObj);                                                          // 45
            };                                                                                                         // 47
        }                                                                                                              // 52
                                                                                                                       //
        return waitOn;                                                                                                 // 18
    }(),                                                                                                               // 18
    data: function () {                                                                                                // 53
        function data() {                                                                                              // 53
            return Resources.findOne(this.params._id);                                                                 // 54
        }                                                                                                              // 55
                                                                                                                       //
        return data;                                                                                                   // 53
    }()                                                                                                                // 53
                                                                                                                       //
});                                                                                                                    // 7
                                                                                                                       //
TemplateListController = RouteController.extend({                                                                      // 60
    template: 'wizChooseTemplate',                                                                                     // 61
    increment: BuzzyGlobal.gDEFAULT_LIMIT,                                                                             // 62
                                                                                                                       //
    resourcesLimit: function () {                                                                                      // 64
        function resourcesLimit() {                                                                                    // 64
            console.log("this.params.resourcesLimit:" + this.params.resourcesLimit);                                   // 65
            return parseInt(this.params.resourcesLimit) || this.increment;                                             // 66
        }                                                                                                              // 67
                                                                                                                       //
        return resourcesLimit;                                                                                         // 64
    }(),                                                                                                               // 64
    findOptions: function () {                                                                                         // 68
        function findOptions() {                                                                                       // 68
            //console.log("sort params:" + Session.get('resourceSort') + " sort filer:" + _.pairs(BuzzyGlobal.gGetSortFilter(Session.get('resourceSort'))));
            return { sort: BuzzyGlobal.gGetSortFilter(Session.get('resourceSort')), limit: this.resourcesLimit() };    // 70
        }                                                                                                              // 71
                                                                                                                       //
        return findOptions;                                                                                            // 68
    }(),                                                                                                               // 68
    waitOn: function () {                                                                                              // 72
        function waitOn() {                                                                                            // 72
            //this.resourcesSub = Meteor.subscribe('resources', this.findOptions());                                   // 73
            //Session.set('resourceListType','all');                                                                   // 74
                                                                                                                       //
                                                                                                                       //
            var chosenSortFilter = Session.get('resourceSort');                                                        // 77
                                                                                                                       //
            if (chosenSortFilter === "undefined" || !chosenSortFilter) {                                               // 80
                chosenSortFilter = 'recently-updated';                                                                 // 81
            }                                                                                                          // 83
            this.resourcesSub = subs.subscribe('resourcesAndImages', this.findOptions(), "", Session.get('resourceListType'), true);
            // TEMP NEED TO CHANGE TO DIFF PUB subs.subscribe('images');                                               // 85
            subs.subscribe('resourceFollowersByUser', Meteor.userId());                                                // 86
        }                                                                                                              // 87
                                                                                                                       //
        return waitOn;                                                                                                 // 72
    }(),                                                                                                               // 72
    resources: function () {                                                                                           // 88
        function resources() {                                                                                         // 88
            console.log("choose template in resources function:" + _.pairs(this.findOptions()));                       // 89
            return Resources.find(templateQuery(Meteor.userId(), Session.get('resourceListType')), this.findOptions());
        }                                                                                                              // 91
                                                                                                                       //
        return resources;                                                                                              // 88
    }(),                                                                                                               // 88
    data: function () {                                                                                                // 92
        function data() {                                                                                              // 92
            var hasMore = this.resources().count() === this.resourcesLimit();                                          // 93
            var nextPath = this.route.path({ resourcesLimit: this.resourcesLimit() + this.increment });                // 94
                                                                                                                       //
            return {                                                                                                   // 96
                resources: this.resources(),                                                                           // 97
                ready: this.resourcesSub.ready,                                                                        // 98
                nextPath: hasMore ? nextPath : null                                                                    // 99
            };                                                                                                         // 96
        }                                                                                                              // 101
                                                                                                                       //
        return data;                                                                                                   // 92
    }()                                                                                                                // 92
                                                                                                                       //
});                                                                                                                    // 60
                                                                                                                       //
MyTemplateListController = RouteController.extend({                                                                    // 105
    template: 'resourceMyTemplateList',                                                                                // 106
    increment: BuzzyGlobal.gDEFAULT_LIMIT,                                                                             // 107
                                                                                                                       //
    resourcesLimit: function () {                                                                                      // 109
        function resourcesLimit() {                                                                                    // 109
            console.log("this.params.resourcesLimit:" + this.params.resourcesLimit);                                   // 110
            return parseInt(this.params.resourcesLimit) || this.increment;                                             // 111
        }                                                                                                              // 112
                                                                                                                       //
        return resourcesLimit;                                                                                         // 109
    }(),                                                                                                               // 109
    findOptions: function () {                                                                                         // 113
        function findOptions() {                                                                                       // 113
            //console.log("sort params:" + Session.get('resourceSort') + " sort filer:" + _.pairs(BuzzyGlobal.gGetSortFilter(Session.get('resourceSort'))));
            return { sort: BuzzyGlobal.gGetSortFilter(Session.get('resourceSort')), limit: this.resourcesLimit() };    // 115
        }                                                                                                              // 116
                                                                                                                       //
        return findOptions;                                                                                            // 113
    }(),                                                                                                               // 113
    waitOn: function () {                                                                                              // 117
        function waitOn() {                                                                                            // 117
            //this.resourcesSub = Meteor.subscribe('resources', this.findOptions());                                   // 118
            //Session.set('resourceListType','all');                                                                   // 119
                                                                                                                       //
                                                                                                                       //
            var chosenSortFilter = Session.get('resourceSort');                                                        // 122
                                                                                                                       //
            if (chosenSortFilter === "undefined" || !chosenSortFilter) {                                               // 125
                chosenSortFilter = 'recently-updated';                                                                 // 126
            }                                                                                                          // 128
            this.resourcesSub = subs.subscribe('resourcesAndImages', this.findOptions(), "", "my", true);              // 129
            // TEMP NEED TO CHANGE TO DIFF PUB subs.subscribe('images');                                               // 130
            subs.subscribe('resourceFollowersByUser', Meteor.userId());                                                // 131
        }                                                                                                              // 132
                                                                                                                       //
        return waitOn;                                                                                                 // 117
    }(),                                                                                                               // 117
    resources: function () {                                                                                           // 133
        function resources() {                                                                                         // 133
            console.log("choose template in resources function:" + _.pairs(this.findOptions()));                       // 134
            return Resources.find(templateQuery(Meteor.userId(), "my"), this.findOptions());                           // 135
        }                                                                                                              // 136
                                                                                                                       //
        return resources;                                                                                              // 133
    }(),                                                                                                               // 133
    data: function () {                                                                                                // 137
        function data() {                                                                                              // 137
            var hasMore = this.resources().count() === this.resourcesLimit();                                          // 138
            var nextPath = this.route.path({ resourcesLimit: this.resourcesLimit() + this.increment });                // 139
                                                                                                                       //
            return {                                                                                                   // 141
                resources: this.resources(),                                                                           // 142
                ready: this.resourcesSub.ready,                                                                        // 143
                nextPath: hasMore ? nextPath : null                                                                    // 144
            };                                                                                                         // 141
        }                                                                                                              // 146
                                                                                                                       //
        return data;                                                                                                   // 137
    }()                                                                                                                // 137
                                                                                                                       //
});                                                                                                                    // 105
                                                                                                                       //
Router.configure({                                                                                                     // 151
    layoutTemplate: 'layoutApp',                                                                                       // 152
    loadingTemplate: 'loading',                                                                                        // 153
    waitOn: function () {                                                                                              // 154
        function waitOn() {                                                                                            // 154
            //console.log("Waiting for initial subs for userid:" + Meteor.userId());                                   // 155
            //Session.set('resourcePageLimit',BuzzyGlobal.gDEFAULT_LIMIT);                                             // 156
            //console.log("WaitOn resourcePageLImit", Session.get('resourcePageLimit'));                               // 157
            if (Meteor.userId()) {                                                                                     // 158
                return [subs.subscribe('notifications', Session.get('activitySearch'), Session.get('activityLimit')),  // 159
                //subs.subscribe('users'),                                                                             // 162
                                                                                                                       //
                subs.subscribe('resourcesForAddition'),                                                                // 164
                                                                                                                       //
                //subs.subscribe('singleUser'),                                                                        // 168
                subs.subscribe('resourceFollowersByUser', Meteor.userId()), subs.subscribe("myUser")];                 // 169
            } else {                                                                                                   // 173
                return [subs.subscribe('resourcesForAddition')];                                                       // 174
            }                                                                                                          // 179
        }                                                                                                              // 183
                                                                                                                       //
        return waitOn;                                                                                                 // 154
    }()                                                                                                                // 154
});                                                                                                                    // 151
                                                                                                                       //
Router.route('/', function () {                                                                                        // 186
    this.redirect('/l');                                                                                               // 187
});                                                                                                                    // 188
                                                                                                                       //
Router.route('/l/', {                                                                                                  // 193
                                                                                                                       //
    name: 'resourceList'                                                                                               // 195
});                                                                                                                    // 193
                                                                                                                       //
Router.route('/unfollowed', {                                                                                          // 198
                                                                                                                       //
    name: 'regoLandingUnsubscribe',                                                                                    // 200
    layoutTemplate: 'layoutPublic'                                                                                     // 201
});                                                                                                                    // 198
Router.route('/voted', {                                                                                               // 203
                                                                                                                       //
    name: 'appVoted',                                                                                                  // 205
    layoutTemplate: 'layoutPublic'                                                                                     // 206
});                                                                                                                    // 203
                                                                                                                       //
Router.route('/my-templates/:resourcesLimit?', {                                                                       // 209
                                                                                                                       //
    name: 'resourceMyTemplateList',                                                                                    // 211
    controller: 'MyTemplateListController'                                                                             // 212
});                                                                                                                    // 209
                                                                                                                       //
Router.route('/wizard', {                                                                                              // 216
    name: 'wizardLanding',                                                                                             // 217
    waitOn: function () {                                                                                              // 218
        function waitOn() {                                                                                            // 218
            subs.subscribe('templateResources');                                                                       // 219
        }                                                                                                              // 220
                                                                                                                       //
        return waitOn;                                                                                                 // 218
    }()                                                                                                                // 218
                                                                                                                       //
});                                                                                                                    // 216
                                                                                                                       //
Router.route('/go/:_id?/:resourceID?/:commentLimit?', {                                                                // 227
    name: 'resourcePage',                                                                                              // 228
    controller: 'ResourceCommentsController'                                                                           // 229
});                                                                                                                    // 227
                                                                                                                       //
Router.route('/profile/:_id', {                                                                                        // 232
    name: 'userProfile'                                                                                                // 233
});                                                                                                                    // 232
                                                                                                                       //
Router.route('/team/:_id', {                                                                                           // 236
    name: 'team'                                                                                                       // 237
});                                                                                                                    // 236
                                                                                                                       //
Router.route('/account/', {                                                                                            // 240
    name: 'userAccount'                                                                                                // 241
                                                                                                                       //
});                                                                                                                    // 240
                                                                                                                       //
Router.route('/admin/', {                                                                                              // 245
    name: 'admin'                                                                                                      // 246
                                                                                                                       //
});                                                                                                                    // 245
                                                                                                                       //
Router.route('/my-contacts/', {                                                                                        // 250
    name: 'userMyContacts',                                                                                            // 251
    //        onBeforeAction: filters.authenticate,                                                                    // 252
                                                                                                                       //
    waitOn: function () {                                                                                              // 254
        function waitOn() {}                                                                                           // 254
                                                                                                                       //
        return waitOn;                                                                                                 // 254
    }(),                                                                                                               // 254
    data: function () {                                                                                                // 259
        function data() {                                                                                              // 259
                                                                                                                       //
            return Users.findOne(Meteor.userId);                                                                       // 261
        }                                                                                                              // 262
                                                                                                                       //
        return data;                                                                                                   // 259
    }()                                                                                                                // 259
                                                                                                                       //
});                                                                                                                    // 250
                                                                                                                       //
Router.route('/licensepage/', {                                                                                        // 266
    name: 'licensePage'                                                                                                // 267
});                                                                                                                    // 266
                                                                                                                       //
Router.route('/start', {                                                                                               // 272
    name: 'start',                                                                                                     // 273
    layoutTemplate: 'layoutPublic'                                                                                     // 274
                                                                                                                       //
});                                                                                                                    // 272
Router.route('/sign-in', {                                                                                             // 277
    name: 'signIn',                                                                                                    // 278
    layoutTemplate: 'layoutPublic'                                                                                     // 279
                                                                                                                       //
});                                                                                                                    // 277
Router.route('/forgot-pass', {                                                                                         // 282
    name: 'forgotPass',                                                                                                // 283
    layoutTemplate: 'layoutPublic'                                                                                     // 284
                                                                                                                       //
});                                                                                                                    // 282
                                                                                                                       //
Router.route('/createpassword/:_id', {                                                                                 // 288
    name: 'appCreatePassword',                                                                                         // 289
    layoutTemplate: 'layoutPublic'                                                                                     // 290
                                                                                                                       //
});                                                                                                                    // 288
Router.route('/regopassword/:_id', {                                                                                   // 293
    name: 'appRegisterPassword',                                                                                       // 294
    layoutTemplate: 'layoutPublic'                                                                                     // 295
                                                                                                                       //
});                                                                                                                    // 293
                                                                                                                       //
Router.route('/rego', {                                                                                                // 299
    name: 'rego',                                                                                                      // 300
    layoutTemplate: 'layoutPublic'                                                                                     // 301
                                                                                                                       //
});                                                                                                                    // 299
                                                                                                                       //
Router.route('/license', {                                                                                             // 305
    name: 'license',                                                                                                   // 306
    layoutTemplate: 'layoutAppBlankHeader'                                                                             // 307
                                                                                                                       //
});                                                                                                                    // 305
                                                                                                                       //
Router.route('/initialsetup', {                                                                                        // 311
    name: 'appInitialSetup',                                                                                           // 312
    layoutTemplate: 'layoutAppBlankHeader',                                                                            // 313
    data: function () {                                                                                                // 314
        function data() {                                                                                              // 314
            return Meteor.user();                                                                                      // 315
        }                                                                                                              // 317
                                                                                                                       //
        return data;                                                                                                   // 314
    }()                                                                                                                // 314
                                                                                                                       //
});                                                                                                                    // 311
                                                                                                                       //
Router.route('/licenseviewonly', {                                                                                     // 321
    name: 'licenseViewOnly',                                                                                           // 322
    layoutTemplate: 'layoutPublic'                                                                                     // 323
                                                                                                                       //
});                                                                                                                    // 321
                                                                                                                       //
Router.route('/noaccess', {                                                                                            // 328
    name: 'noAccess',                                                                                                  // 329
    layoutTemplate: 'layoutApp'                                                                                        // 330
                                                                                                                       //
});                                                                                                                    // 328
                                                                                                                       //
Router.route('/rego-thanks', {                                                                                         // 335
    name: 'regoThanksStatic',                                                                                          // 336
    layoutTemplate: 'layoutAppBlankHeader'                                                                             // 337
                                                                                                                       //
});                                                                                                                    // 335
                                                                                                                       //
Router.route('/hero', { where: 'server' }).get(function () {                                                           // 344
    var req = this.request;                                                                                            // 346
    var res = this.response;                                                                                           // 347
    var query = req.query;                                                                                             // 348
    if (query && typeof query.utm_source !== "undefined") {                                                            // 349
        this.response.writeHead(301, { 'Location': '/s/hero.html?utm_source=' + query.utm_source + "&utm_campaign=" + query.utm_campaign + "&utm_content=" + query.utm_content });
    } else {                                                                                                           // 351
        this.response.writeHead(301, { 'Location': '/s/hero.html?utm_source=direct&utm_campaign=hero&utm_content=hero1' });
    }                                                                                                                  // 354
    this.response.end();                                                                                               // 355
});                                                                                                                    // 356
Router.route('/register', { where: 'server' }).get(function () {                                                       // 357
    var req = this.request;                                                                                            // 359
    var res = this.response;                                                                                           // 360
                                                                                                                       //
    res.end('hello from the server\n');                                                                                // 362
    // GET /webhooks/stripe                                                                                            // 363
}).post(function () {                                                                                                  // 364
                                                                                                                       //
    var req = this.request;                                                                                            // 367
    var res = this.response;                                                                                           // 368
    var post = req.body;                                                                                               // 369
                                                                                                                       //
    Meteor.call("postRegisterEmail", post.email, post.template);                                                       // 372
                                                                                                                       //
    this.response.writeHead(301, { 'Location': '/rego-thanks?email=' + post.email });                                  // 374
    this.response.end();                                                                                               // 375
    /*res.writeHead(200, {'Content-Type': 'text/plain'})                                                               // 376
    res.end('hi from the server\n')                                                                                    //
    */                                                                                                                 //
}).put(function () {                                                                                                   // 381
    console.log("IN PUT");                                                                                             // 383
                                                                                                                       //
    // PUT /webhooks/stripe                                                                                            // 385
});                                                                                                                    // 386
Router.route('/stripeauthorize', { where: 'server' }).get(function () {                                                // 387
    var req = this.request;                                                                                            // 389
    var res = this.response;                                                                                           // 390
    var query = req.query;                                                                                             // 391
    if (query && typeof query.code !== "undefined") {                                                                  // 392
        var clientID = Meteor.settings['public'].stripe.debug ? Meteor.settings['public'].stripe.testClientID : Meteor.settings['public'].stripe.liveClientID;
        console.log("query.code:" + query.code);                                                                       // 394
        this.response.writeHead(301, { 'Location': STRIPE_AUTHORIZE_URI + "?response_type=code&scope=read_write&client_id=" + clientID });
    } else if (query && typeof query.error !== "undefined") {                                                          // 396
        res.writeHead(200, { 'Content-Type': 'text/plain' });                                                          // 397
        console.log("query.error:", query.error, query.error_description);                                             // 398
        res.end("query.error:" + query.error + query.error_description);                                               // 399
    }                                                                                                                  // 400
    this.response.end();                                                                                               // 401
});                                                                                                                    // 402
                                                                                                                       //
/*Router.route('/stripecallback', { where: 'server' })                                                                 // 404
    .get(function () {                                                                                                 //
        var self = this;                                                                                               //
        var req = this.request;                                                                                        //
        var res = this.response;                                                                                       //
        var query = req.query;                                                                                         //
        if (query && typeof query.code !== "undefined"){                                                               //
            var clientID = Meteor.settings.public.stripe.debug?Meteor.settings.public.stripe.testClientID:Meteor.settings.public.stripe.liveClientID;
                                                                                                                       //
            HTTP.call("POST", STRIPE_TOKEN_URI, {                                                                      //
                    data: {                                                                                            //
                        //loginToken: "A2VWvjjJ2PM-aNZvP3fng8OmDr6_o2aNFvosMMX7yV7",                                   //
                        grant_type: 'authorization_code',                                                              //
                        client_id: clientID,                                                                           //
                        code: query.code ,                                                                             //
                        client_secret: 'sk_test_K1uIbqws6DAfYZsnYEWR9EB6'                                              //
                    }                                                                                                  //
                },                                                                                                     //
                function (err, result) {                                                                               //
                    console.log("POST RESULT userID:", self.userId, result, " ERR:", err)                              //
                    if (err) {                                                                                         //
                        console.log({message: 'Test failed error.'});                                                  //
                    } else {                                                                                           //
                        var accessToken =result.data.access_token;                                                     //
                                                                                                                       //
                        // Do something with your accessToken                                                          //
                                                                                                                       //
                        // For demo's sake, output in response:                                                        //
                        res.end({ 'Your Token': accessToken });                                                        //
                                                                                                                       //
                    }                                                                                                  //
                                                                                                                       //
                                                                                                                       //
                })                                                                                                     //
                                                                                                                       //
        } else if (query && typeof query.error !== "undefined") {                                                      //
            res.writeHead(200, {'Content-Type': 'text/plain'})                                                         //
            console.log("query.error:", query.error, query.error_description );                                        //
            res.end("query.error:" + query.error + query.error_description);                                           //
        }                                                                                                              //
        this.response.end();                                                                                           //
    });*/                                                                                                              //
Router.route('/stripecallback2', {                                                                                     // 446
    name: 'stripeCallback2',                                                                                           // 447
    layoutTemplate: 'layoutPublic',                                                                                    // 448
    waitOn: function () {                                                                                              // 449
        function waitOn() {                                                                                            // 449
            var self = this;                                                                                           // 450
            var query = self.params.query;                                                                             // 451
            if (Meteor.userId() && query && typeof query.code !== "undefined") {                                       // 452
                                                                                                                       //
                Meteor.call("updateStripeInfo", query.code, function (err) {                                           // 454
                    if (err) {                                                                                         // 455
                        BuzzyGlobal.throwError(err);                                                                   // 456
                    } else {                                                                                           // 457
                        Router.go('userProfile', { _id: Meteor.userId() });                                            // 458
                    }                                                                                                  // 459
                });                                                                                                    // 460
            } else if (query && typeof query.error !== "undefined") {                                                  // 462
                console.log("query.error:", query.error, query.error_description);                                     // 463
            }                                                                                                          // 464
        }                                                                                                              // 465
                                                                                                                       //
        return waitOn;                                                                                                 // 449
    }()                                                                                                                // 449
}, { where: 'server' });                                                                                               // 446
                                                                                                                       //
Router.route('/pixel/:userid/:resource_id/:comment_id', function () {                                                  // 468
                                                                                                                       //
    Meteor.call("viewedComment", this.params.userid, this.params.resource_id, this.params.comment_id);                 // 471
                                                                                                                       //
    var req = this.request;                                                                                            // 473
    var res = this.response;                                                                                           // 474
                                                                                                                       //
    var imgHex = '47494638396101000100800000dbdfef00000021f90401000000002c00000000010001000002024401003b';             // 477
    var imgBinary = new Buffer(imgHex, 'hex');                                                                         // 478
    res.writeHead(200, { 'Content-Type': 'image/gif' });                                                               // 479
    res.end(imgBinary, 'binary');                                                                                      // 480
}, {                                                                                                                   // 481
    where: 'server',                                                                                                   // 483
    name: 'viewComment'                                                                                                // 484
});                                                                                                                    // 482
Router.route('/pixelr/:userid/:resource_id', function () {                                                             // 486
                                                                                                                       //
    Meteor.call("resourceTrackUserView", this.params.userid, this.params.resource_id);                                 // 488
    /*                                                                                                                 // 489
    if (typeof this.params.userid !== "undefined" && this.params.userid && typeof this.params.resource_id !== "undefined" && this.params.resource_id){
        Meteor.call("resourceTrackUserView",this.params.userid, this.params.resource_id);                              //
    }*/                                                                                                                //
                                                                                                                       //
    var req = this.request;                                                                                            // 494
    var res = this.response;                                                                                           // 495
                                                                                                                       //
    var imgHex = '47494638396101000100800000dbdfef00000021f90401000000002c00000000010001000002024401003b';             // 498
    var imgBinary = new Buffer(imgHex, 'hex');                                                                         // 499
    res.writeHead(200, { 'Content-Type': 'image/gif' });                                                               // 500
    res.end(imgBinary, 'binary');                                                                                      // 501
}, {                                                                                                                   // 502
    where: 'server',                                                                                                   // 504
    name: 'viewResourcePixel'                                                                                          // 505
});                                                                                                                    // 503
                                                                                                                       //
Router.route('/vote/:userid/:resource_id/:app_id/:field_id/:field_val', function () {                                  // 508
                                                                                                                       //
    console.log("here 1", this.params.userid, this.params.resource_id, this.params.app_id, this.params.field_id, this.params.field_val);
    Meteor.call("microAppVoteUser", this.params.userid, this.params.resource_id, this.params.app_id, this.params.field_id, this.params.field_val);
    var req = this.request;                                                                                            // 512
    var res = this.response;                                                                                           // 513
                                                                                                                       //
    this.response.writeHead(301, { 'Location': '/voted' });                                                            // 515
    this.response.end();                                                                                               // 516
}, {                                                                                                                   // 517
    where: 'server',                                                                                                   // 519
    name: 'vote'                                                                                                       // 520
});                                                                                                                    // 518
                                                                                                                       //
Router.route('/unfollow/:useremail/:resource_id', function () {                                                        // 523
                                                                                                                       //
    console.log("here 2");                                                                                             // 525
    Meteor.call("unfollowResourceByEmail", this.params.useremail, this.params.resource_id);                            // 526
                                                                                                                       //
    this.response.writeHead(301, { 'Location': '/unfollowed' });                                                       // 528
    this.response.end();                                                                                               // 529
    //Router.go('regoLandingUnsubscribe');                                                                             // 530
}, {                                                                                                                   // 532
    where: 'server',                                                                                                   // 534
    name: 'unfollow'                                                                                                   // 535
});                                                                                                                    // 533
                                                                                                                       //
// Landing - not sure of context here, think Adam uses this                                                            // 540
Router.route('/landing/:template', {                                                                                   // 541
    name: 'landing',                                                                                                   // 542
    layoutTemplate: 'layoutPublic',                                                                                    // 543
    waitOn: function () {                                                                                              // 544
        function waitOn() {                                                                                            // 544
            Session.set('currentTemplate', this.params.template);                                                      // 545
        }                                                                                                              // 546
                                                                                                                       //
        return waitOn;                                                                                                 // 544
    }()                                                                                                                // 544
});                                                                                                                    // 541
                                                                                                                       //
// Dave scratchpad - signed in app template                                                                            // 550
Router.route('/scratchpad/:template', {                                                                                // 551
    name: 'scratchpad',                                                                                                // 552
    layoutTemplate: 'layout_dave_app',                                                                                 // 553
    waitOn: function () {                                                                                              // 554
        function waitOn() {                                                                                            // 554
            Session.set('currentTemplate', this.params.template);                                                      // 555
        }                                                                                                              // 556
                                                                                                                       //
        return waitOn;                                                                                                 // 554
    }()                                                                                                                // 554
});                                                                                                                    // 551
                                                                                                                       //
// Dave scratchpad - signed in app, but no nav - use for modals where we can't do anything else until we make a decision eg terms accept
Router.route('/scratchpadblank/:template', {                                                                           // 560
    name: 'scratchpadblank',                                                                                           // 561
    layoutTemplate: 'layout_dave_blank',                                                                               // 562
    waitOn: function () {                                                                                              // 563
        function waitOn() {                                                                                            // 563
            Session.set('currentTemplate', this.params.template);                                                      // 564
        }                                                                                                              // 565
                                                                                                                       //
        return waitOn;                                                                                                 // 563
    }()                                                                                                                // 563
});                                                                                                                    // 560
                                                                                                                       //
// Dave scratchpad - public landing/nav template                                                                       // 568
Router.route('/scratchpadpublic/:template', {                                                                          // 569
    name: 'scratchpadpublic',                                                                                          // 570
    layoutTemplate: 'layout_dave_public',                                                                              // 571
    waitOn: function () {                                                                                              // 572
        function waitOn() {                                                                                            // 572
            Session.set('currentTemplate', this.params.template);                                                      // 573
        }                                                                                                              // 574
                                                                                                                       //
        return waitOn;                                                                                                 // 572
    }()                                                                                                                // 572
});                                                                                                                    // 569
                                                                                                                       //
// Dave scratchpad - one-off pages not using scratchpad layout                                                         // 577
Router.route('/dave/landing', {                                                                                        // 578
    name: 'layout_dave_sample_landing',                                                                                // 579
    layoutTemplate: 'layout_dave_sample_landing'                                                                       // 580
});                                                                                                                    // 578
Router.route('/dave/campaign', {                                                                                       // 582
    name: 'layout_dave_sample_landing_campaign',                                                                       // 583
    layoutTemplate: 'layout_dave_sample_landing_campaign'                                                              // 584
});                                                                                                                    // 582
Router.route('/dave/modal', {                                                                                          // 586
    name: 'layout_dave_sample_modal',                                                                                  // 587
    layoutTemplate: 'layout_dave_sample_modal'                                                                         // 588
});                                                                                                                    // 586
                                                                                                                       //
/*var requireLogin = function() {                                                                                      // 591
    if (! Meteor.user()) {                                                                                             //
        if (Meteor.loggingIn())                                                                                        //
            this.render(this.loadingTemplate);                                                                         //
        else                                                                                                           //
            this.render('accessDenied');                                                                               //
                                                                                                                       //
        /!*pause();*!/                                                                                                 //
                                                                                                                       //
    } else {                                                                                                           //
        this.next();                                                                                                   //
    }                                                                                                                  //
}                                                                                                                      //
                                                                                                                       //
var IR_BeforeHooks = {                                                                                                 //
    isLoggedIn: function() {                                                                                           //
        var self = this;                                                                                               //
        if (!Meteor.userId()) {                                                                                        //
            console.log("user not logged in - routing to start");                                                      //
            //this.render('start');                                                                                    //
            Router.go('start');                                                                                        //
                                                                                                                       //
                                                                                                                       //
        } else {                                                                                                       //
                                                                                                                       //
            this.next();                                                                                               //
            //return pause()                                                                                           //
        }                                                                                                              //
    },                                                                                                                 //
    hasAcceptedLicense: function() {                                                                                   //
        var self = this;                                                                                               //
        if (Meteor.userId()) {                                                                                         //
                                                                                                                       //
            //check is accepted  license, if not then logout otherwise take to home page                               //
            Meteor.call("userHasAcceptedLicense",function(err, result){                                                //
                if (!err){                                                                                             //
                    if (!result){                                                                                      //
                        self.render(this.loadingTemplate);                                                             //
                                                                                                                       //
                        Router.go('license');                                                                          //
                        //self.render('license');                                                                      //
                    }                                                                                                  //
                }                                                                                                      //
                                                                                                                       //
            });                                                                                                        //
            self.next();                                                                                               //
                                                                                                                       //
                                                                                                                       //
            /!*this.render('resourceList');*!/                                                                         //
        } /!*else {                                                                                                    //
         this.next()                                                                                                   //
         }*!/                                                                                                          //
    },                                                                                                                 //
    hasCompletedSetup: function() {                                                                                    //
        var self = this;                                                                                               //
        if (Meteor.userId()) {                                                                                         //
           /!* //check is accepted  license, if not then logout otherwise take to home page                            //
            Meteor.call("userHasCompletedInitialSetup",function(err, result){                                          //
                if (!err){                                                                                             //
                    if (!result){                                                                                      //
                        self.render(this.loadingTemplate);                                                             //
                                                                                                                       //
                        //Router.go('appInitialSetup');                                                                //
                        self.render('appInitialSetup');                                                                //
                    }                                                                                                  //
                }                                                                                                      //
                                                                                                                       //
            });*!/                                                                                                     //
                                                                                                                       //
            if (typeof(Meteor.user().completedSetup) === "undefined" || !Meteor.user().completedSetup){                //
                self.render(this.loadingTemplate);                                                                     //
                                                                                                                       //
                Router.go('appInitialSetup');                                                                          //
                //self.render('appInitialSetup');                                                                      //
                                                                                                                       //
            }                                                                                                          //
            self.next();                                                                                               //
                                                                                                                       //
                                                                                                                       //
            /!*this.render('resourceList');*!/                                                                         //
        } /!*else {                                                                                                    //
         this.next()                                                                                                   //
         }*!/                                                                                                          //
    },                                                                                                                 //
                                                                                                                       //
                                                                                                                       //
}*/                                                                                                                    //
                                                                                                                       //
/*var IR_AfterHooks = {                                                                                                // 679
    isLoggedIn: ,                                                                                                      //
                                                                                                                       //
                                                                                                                       //
}*/                                                                                                                    //
                                                                                                                       //
Router.onBeforeAction(function () {                                                                                    // 686
    var self = this;                                                                                                   // 687
    if (!Meteor.userId()) {                                                                                            // 688
        //need to check if public                                                                                      // 689
        if (self.route.getName() === "resourcePage") {                                                                 // 690
            Meteor.call('isPublicOrUnlistedResource', self.params._id, function (err, result) {                        // 691
                if (err) {                                                                                             // 692
                    BuzzyGlobal.throwError(err);                                                                       // 693
                } else if (result) {                                                                                   // 694
                    Router.go('resourcePage', { _id: self.params._id });                                               // 695
                } else {                                                                                               // 696
                    Session.set("regoTop", self.params._id);                                                           // 697
                    Router.go('signIn');                                                                               // 698
                };                                                                                                     // 699
            });                                                                                                        // 701
            self.next();                                                                                               // 702
        } else {                                                                                                       // 704
            Router.go('start');                                                                                        // 705
        }                                                                                                              // 706
    } else {                                                                                                           // 708
                                                                                                                       //
        this.next();                                                                                                   // 710
        //return pause()                                                                                               // 711
    }                                                                                                                  // 712
}, { except: ['start', 'signIn', 'appCreatePassword', 'appRegisterPassword', 'landing', 'rego', 'register', 'hero', 'forgotPass', 'licenseViewOnly', 'incoming', 'preview', 'unfollow', 'viewComment', 'viewResourcePixel', 'noAccess', 'regoLandingUnsubscribe', 'vote', 'appVoted', 'stripecallback', 'stripecallback2', 'stripeauthorize'] });
                                                                                                                       //
Router.onBeforeAction('loading');                                                                                      // 718
                                                                                                                       //
/*                                                                                                                     // 720
Router.onBeforeAction( function() {                                                                                    //
    var self = this;                                                                                                   //
    if (Meteor.userId()) {                                                                                             //
                                                                                                                       //
        //check is accepted  license, if not then logout otherwise take to home page                                   //
        Meteor.call("userHasAcceptedLicense",function(err, result){                                                    //
            if (!err){                                                                                                 //
                if (!result){                                                                                          //
                    self.render(this.loadingTemplate);                                                                 //
                                                                                                                       //
                    Router.go('license');                                                                              //
                } else {                                                                                               //
                    self.render(this.loadingTemplate);                                                                 //
                    self.next();                                                                                       //
                }                                                                                                      //
            }                                                                                                          //
                                                                                                                       //
        });                                                                                                            //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
    }                                                                                                                  //
},                                                                                                                     //
    {except: ['start','rego','signIn','appCreatePassword','landing','license', 'forgotPass', 'licenseViewOnly','incoming','preview','unfollow','noAccess']});
                                                                                                                       //
*/                                                                                                                     //
                                                                                                                       //
/*                                                                                                                     // 749
Router.onBeforeAction(function() {                                                                                     //
        var self = this;                                                                                               //
        if (Meteor.userId()) {                                                                                         //
            /!* //check is accepted  license, if not then logout otherwise take to home page                           //
             Meteor.call("userHasCompletedInitialSetup",function(err, result){                                         //
             if (!err){                                                                                                //
             if (!result){                                                                                             //
             self.render(this.loadingTemplate);                                                                        //
                                                                                                                       //
             //Router.go('appInitialSetup');                                                                           //
             self.render('appInitialSetup');                                                                           //
             }                                                                                                         //
             }                                                                                                         //
                                                                                                                       //
             });*!/                                                                                                    //
                                                                                                                       //
            if (typeof(Meteor.user().completedSetup) === "undefined" || !Meteor.user().completedSetup){                //
                self.render(this.loadingTemplate);                                                                     //
                                                                                                                       //
                Router.go('appInitialSetup');                                                                          //
                //self.render('appInitialSetup');                                                                      //
                                                                                                                       //
            }                                                                                                          //
            self.next();                                                                                               //
                                                                                                                       //
                                                                                                                       //
            /!*this.render('resourceList');*!/                                                                         //
        } /!*else {                                                                                                    //
         this.next()                                                                                                   //
         }*!/                                                                                                          //
    },                                                                                                                 //
    {except: ['start','rego','signIn','appCreatePassword','landing','license', 'forgotPass', 'licenseViewOnly','incoming','preview','unfollow','noAccess']});
*/                                                                                                                     //
                                                                                                                       //
Router.onBeforeAction(function () {                                                                                    // 785
    Errors.clearAllErrors();                                                                                           // 786
    this.next();                                                                                                       // 787
}, { except: ['incoming', 'unfollow', 'viewComment', 'viewResourcePixel', 'noAccess', 'regoLandingUnsubscribe', 'register', 'hero', 'vote', 'appVoted', 'stripecallback', 'stripecallback2', 'stripeauthorize'] });
                                                                                                                       //
Router.configureBodyParsers = function () {                                                                            // 791
    Router.onBeforeAction(Iron.Router.bodyParser.urlencoded({                                                          // 792
        extended: true,                                                                                                // 793
        limit: '200mb'                                                                                                 // 794
    }), { where: 'server' });                                                                                          // 792
};                                                                                                                     // 796
                                                                                                                       //
/*Router.onAfterAction(function() {                                                                                    // 798
        var self = this;                                                                                               //
        if (Meteor.userId()){                                                                                          //
            Router.go('resourceList');                                                                                 //
        }                                                                                                              //
                                                                                                                       //
    },                                                                                                                 //
    {only: ['rego','start','signIn','license', 'forgotPass']});*/                                                      //
                                                                                                                       //
/*Router.onAfterAction(function () {                                                                                   // 809
        var self = this;                                                                                               //
        // always start by resetting scroll to top of the page                                                         //
        $(window).scrollTop(0);                                                                                        //
        // if there is a hash in the URL, handle it                                                                    //
        if (this.params.hash && (this.params.hash.length > 1)) {                                                       //
            // now this is important : Deps.afterFlush ensures that iron-router rendering                              //
            // process has finished inserting the current route template into DOM so we                                //
            // can manipulate it via jQuery, if you skip this part the HTML element you                                //
            // want to scroll to might not yet be present in the DOM (this is probably                                 //
            // why your code fails in the first place)                                                                 //
            Tracker.afterFlush(function () {                                                                           //
                                                                                                                       //
                if (typeof $("#" + self.params.hash).offset() != "undefined") {                                        //
                                                                                                                       //
                    var scrollTop = $("#" + self.params.hash).offset().top;                                            //
                                                                                                                       //
                    $("html,body").animate({                                                                           //
                        scrollTop: scrollTop                                                                           //
                    });                                                                                                //
                                                                                                                       //
                }                                                                                                      //
                                                                                                                       //
            });                                                                                                        //
        }                                                                                                              //
    },                                                                                                                 //
    {except: ['incoming','unfollow','noAccess']});*/                                                                   //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"server":{"lib":{"ainjectinitial.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lib/ainjectinitial.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 1/10/15.                                                                                 //
 */                                                                                                                    //
Inject.rawHead('my-meta', '<meta http-equiv="X-UA-Compatible" content="IE=edge">');                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"server_routes.js":["saml2-js","body-parser","connect-cookies","fibers",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lib/server_routes.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var saml2js;module.import('saml2-js',{"default":function(v){saml2js=v}});var bodyparser;module.import('body-parser',{"default":function(v){bodyparser=v}});var connectCookies;module.import('connect-cookies',{"default":function(v){connectCookies=v}});/**
 * Created by adamginsburg on 26/05/2016.                                                                              //
 */                                                                                                                    //
                                                                                                                       //
                                                                                                                       // 5
                                                                                                                       // 6
                                                                                                                       // 7
                                                                                                                       //
var saml2 = require('saml2-js');                                                                                       // 9
var Fiber = require('fibers');                                                                                         // 10
var bodyParser = require('body-parser');                                                                               // 11
var cookieParser = require('connect-cookies');                                                                         // 12
                                                                                                                       //
var getSPOptions = function getSPOptions(query) {                                                                      // 16
    var sp_options = {                                                                                                 // 17
        entity_id: Meteor.absoluteUrl("metadata.xml"),                                                                 // 18
        private_key: Assets.getText('saml/sp.key'),                                                                    // 19
        certificate: Assets.getText('saml/sp.crt'),                                                                    // 20
        assert_endpoint: Meteor.absoluteUrl("assert?org=" + query.org)                                                 // 21
    };                                                                                                                 // 17
    return sp_options;                                                                                                 // 23
};                                                                                                                     // 24
                                                                                                                       //
WebApp.connectHandlers.use(bodyParser.urlencoded({ extended: false })).use(cookieParser()).use('/incoming', function (req, res, next) {
    Fiber(function () {                                                                                                // 33
        console.log("incoming 1", req.method);                                                                         // 34
                                                                                                                       //
        if (req.method === "POST") {                                                                                   // 37
            console.log("incoming 1.2");                                                                               // 38
            var post = req.body;                                                                                       // 39
            console.log("incoming 2", post);                                                                           // 40
            Meteor.call("parseEmail", post);                                                                           // 41
                                                                                                                       //
            console.log("incoming 3");                                                                                 // 43
        }                                                                                                              // 45
                                                                                                                       //
        res.writeHead(200, { 'Content-Type': 'text/plain' });                                                          // 47
        res.end('hi from the server\n');                                                                               // 48
    }).run();;                                                                                                         // 49
}).use('/metadata.xml', function (req, res, next) {                                                                    // 52
    var sp_options = getSPOptions(req.query);                                                                          // 54
                                                                                                                       //
    // Call service provider constructor with options                                                                  // 56
    var sp = new saml2.ServiceProvider(sp_options);                                                                    // 57
                                                                                                                       //
    res.writeHead(200, { 'Content-Type': 'application/xml' });                                                         // 60
    res.end(sp.create_metadata());                                                                                     // 61
}).use('/loginsaml', function (req, res, next) {                                                                       // 64
    if (req.query && req.query.org) {                                                                                  // 66
        // Initialize options object                                                                                   // 67
        var sp_options = getSPOptions(req.query);                                                                      // 68
                                                                                                                       //
        // Call service provider constructor with options                                                              // 70
        var sp = new saml2.ServiceProvider(sp_options);                                                                // 71
        var idp_options = SamlProviders.findOne({ org: req.query.org });                                               // 72
        console.log("IDP_OPTIONS:", idp_options);                                                                      // 73
                                                                                                                       //
        // Call identity provider constructor with options                                                             // 75
                                                                                                                       //
                                                                                                                       //
        if (idp_options) {                                                                                             // 78
            var idp = new saml2.IdentityProvider(idp_options);                                                         // 79
        }                                                                                                              // 80
        if (idp_options && typeof idp !== "undefined") {                                                               // 81
            sp.create_login_request_url(idp, {}, function (err, login_url, request_id) {                               // 82
                if (err != null) {                                                                                     // 83
                    return res.send(500);                                                                              // 84
                }                                                                                                      // 85
                                                                                                                       //
                res.writeHead(301, { 'Location': login_url });                                                         // 87
                res.end();                                                                                             // 88
            });                                                                                                        // 89
        } else {                                                                                                       // 91
            return res.end("Ooops Assert Login!");                                                                     // 92
        }                                                                                                              // 93
    } else {                                                                                                           // 94
        return res.end("Ooops Invalid Params!");                                                                       // 95
    }                                                                                                                  // 96
}).use('/assert', function (req, res, next) {                                                                          // 99
                                                                                                                       //
    Fiber(function () {                                                                                                // 102
        var sp_options = getSPOptions(req.query);                                                                      // 103
        // Call service provider constructor with options                                                              // 104
        var sp = new saml2.ServiceProvider(sp_options);                                                                // 105
                                                                                                                       //
        var options = { request_body: req.body };                                                                      // 107
                                                                                                                       //
        if (req.query && req.query.org) {                                                                              // 109
            // Initialize options object                                                                               // 110
            var idp_options = SamlProviders.findOne({ org: req.query.org });                                           // 111
            console.log("IDP_OPTIONS:", idp_options);                                                                  // 112
                                                                                                                       //
            // Call identity provider constructor with options                                                         // 115
                                                                                                                       //
                                                                                                                       //
            if (idp_options) {                                                                                         // 118
                var idp = new saml2.IdentityProvider(idp_options);                                                     // 119
            }                                                                                                          // 120
        } else {                                                                                                       // 121
            BuzzyGlobal.throwError("Invalid Params!");                                                                 // 122
        }                                                                                                              // 123
                                                                                                                       //
        if (typeof idp !== "undefined") {                                                                              // 126
            sp.post_assert(idp, options, function (err, saml_response) {                                               // 127
                if (err != null) {                                                                                     // 128
                    if (typeof err.extra !== "undefined") {                                                            // 129
                        console.log("Assert Error 1:", err.extra.status);                                              // 130
                        BuzzyGlobal.throwError("Invalid Params!");                                                     // 131
                    }                                                                                                  // 132
                    return res.end("Ooops Assert issue!");                                                             // 133
                }                                                                                                      // 134
                                                                                                                       //
                var name_id = saml_response.user.name_id;                                                              // 136
                var session_index = saml_response.user.session_index;                                                  // 137
                console.log("SAML user:", saml_response.user);                                                         // 138
                                                                                                                       //
                Fiber(function () {                                                                                    // 140
                    var user = Accounts.users.findOne({ email: saml_response.user.name_id.toLowerCase() });            // 141
                    var userID;                                                                                        // 142
                    if (!user) {                                                                                       // 143
                        var userData = {                                                                               // 144
                            _id: new Meteor.Collection.ObjectID()._str,                                                // 145
                            email: saml_response.user.name_id.toLowerCase(),                                           // 146
                            profile: {}                                                                                // 147
                        };                                                                                             // 144
                        userData.profile.name = userData.email.split("@")[0];                                          // 149
                        userData.profile.channels = [{ channel: BuzzyGlobal.gNOTIFICATION_CHANNEL.EMAIL, address: userData.email, enabled: true }];
                        userID = userData._id;                                                                         // 151
                        Accounts.users.insert(userData);                                                               // 152
                    } else {                                                                                           // 153
                        userID = user._id;                                                                             // 154
                    }                                                                                                  // 155
                    var stampedLoginToken = Accounts._generateStampedLoginToken();                                     // 156
                    Accounts._insertLoginToken(userID, stampedLoginToken);                                             // 157
                    res.cookies.set('token', stampedLoginToken.token, { httpOnly: false });                            // 158
                    res.writeHead(301, { 'Location': Meteor.absoluteUrl('sign-in') });                                 // 159
                    res.end();                                                                                         // 160
                }).run();                                                                                              // 162
            });                                                                                                        // 165
        } else {                                                                                                       // 167
            return res.end("Ooops Assert issue 2!");                                                                   // 168
        }                                                                                                              // 169
    }).run();                                                                                                          // 174
});                                                                                                                    // 177
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"template-helpers.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lib/template-helpers.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
TemplateHelpers = {                                                                                                    // 1
                                                                                                                       //
    isImageMime: function () {                                                                                         // 3
        function isImageMime(mimetype) {                                                                               // 3
            if (mimetype && mimetype.indexOf("image") === -1) {                                                        // 4
                return false;                                                                                          // 5
            } else {                                                                                                   // 6
                return true;                                                                                           // 7
            }                                                                                                          // 8
        }                                                                                                              // 9
                                                                                                                       //
        return isImageMime;                                                                                            // 3
    }(),                                                                                                               // 3
    isArray: function () {                                                                                             // 10
        function isArray(obj) {                                                                                        // 10
            return Array.isArray(obj);                                                                                 // 11
        }                                                                                                              // 12
                                                                                                                       //
        return isArray;                                                                                                // 10
    }(),                                                                                                               // 10
    showUserProfileImage: function () {                                                                                // 13
        function showUserProfileImage(fromUserID) {                                                                    // 13
            var user = Users.findOne({ _id: fromUserID });                                                             // 14
            if (user && user.profile && typeof user.profile.profileImage !== "undefined") {                            // 15
                return user.profile.profileImage.url;                                                                  // 16
            } else {                                                                                                   // 17
                return "https://buzzy.buzz/assets/email/avatar-default.jpg";                                           // 18
            }                                                                                                          // 19
        }                                                                                                              // 20
                                                                                                                       //
        return showUserProfileImage;                                                                                   // 13
    }(),                                                                                                               // 13
                                                                                                                       //
    getPromoInviteExistingUser: function () {                                                                          // 22
        function getPromoInviteExistingUser() {                                                                        // 22
            var randomNum = BuzzyGlobal.gRandomNumForLimit(4);                                                         // 23
            return Assets.getText('emails/email-notification/emailpromos/promo_invite_existing_random' + randomNum + '.html');
        }                                                                                                              // 25
                                                                                                                       //
        return getPromoInviteExistingUser;                                                                             // 22
    }(),                                                                                                               // 22
    getPromoInviteNewUser: function () {                                                                               // 26
        function getPromoInviteNewUser() {                                                                             // 26
            var randomNum = BuzzyGlobal.gRandomNumForLimit(4);                                                         // 27
            return Assets.getText('emails/email-notification/emailpromos/promo_invite_new_random' + randomNum + '.html');
        }                                                                                                              // 29
                                                                                                                       //
        return getPromoInviteNewUser;                                                                                  // 26
    }(),                                                                                                               // 26
    getPromoCommentExistingUser: function () {                                                                         // 30
        function getPromoCommentExistingUser() {                                                                       // 30
            var randomNum = BuzzyGlobal.gRandomNumForLimit(4);                                                         // 31
            return Assets.getText('emails/email-notification/emailpromos/promo_comment_existing_random' + randomNum + '.html');
        }                                                                                                              // 33
                                                                                                                       //
        return getPromoCommentExistingUser;                                                                            // 30
    }(),                                                                                                               // 30
    getPromoCommentNewUser: function () {                                                                              // 34
        function getPromoCommentNewUser() {                                                                            // 34
            var randomNum = BuzzyGlobal.gRandomNumForLimit(4);                                                         // 35
            return Assets.getText('emails/email-notification/emailpromos/promo_comment_new_random' + randomNum + '.html');
        }                                                                                                              // 37
                                                                                                                       //
        return getPromoCommentNewUser;                                                                                 // 34
    }(),                                                                                                               // 34
    getCtaInviteExistingUser: function () {                                                                            // 38
        function getCtaInviteExistingUser() {                                                                          // 38
            var options = [{ content: "cta-invite-existing-red-clicktoviewonbuzzy", bg: "#d9534f", border: "#d43f3a", message: "Click to view on Buzzy" }];
            return options[BuzzyGlobal.gRandomNumForLimit(options.length) - 1];                                        // 42
        }                                                                                                              // 43
                                                                                                                       //
        return getCtaInviteExistingUser;                                                                               // 38
    }(),                                                                                                               // 38
    getCtaInviteNewUser: function () {                                                                                 // 44
        function getCtaInviteNewUser() {                                                                               // 44
            var options = [{ content: "cta-invite-new-red-followthisbuzz", bg: "#d9534f", border: "#d43f3a", message: "Follow this Buzz" }];
            return options[BuzzyGlobal.gRandomNumForLimit(options.length) - 1];                                        // 48
        }                                                                                                              // 49
                                                                                                                       //
        return getCtaInviteNewUser;                                                                                    // 44
    }(),                                                                                                               // 44
    getCtaTopTitleInvite: function () {                                                                                // 50
        function getCtaTopTitleInvite() {                                                                              // 50
            var options = [{ content: "cta-top-title-invite", bg: "#d9534f", border: "#d43f3a", message: "Accept the invitation" }];
            return options[BuzzyGlobal.gRandomNumForLimit(options.length) - 1];                                        // 54
        }                                                                                                              // 55
                                                                                                                       //
        return getCtaTopTitleInvite;                                                                                   // 50
    }(),                                                                                                               // 50
    getCtaTopTitleUpdate: function () {                                                                                // 56
        function getCtaTopTitleUpdate() {                                                                              // 56
            var options = [{ content: "cta-top-title-update", bg: "#d9534f", border: "#d43f3a", message: "View it on Buzzy" }];
            return options[BuzzyGlobal.gRandomNumForLimit(options.length) - 1];                                        // 60
        }                                                                                                              // 61
                                                                                                                       //
        return getCtaTopTitleUpdate;                                                                                   // 56
    }(),                                                                                                               // 56
                                                                                                                       //
    getRandomNumber50Percent: function () {                                                                            // 63
        function getRandomNumber50Percent() {                                                                          // 63
            return BuzzyGlobal.gRandomNumForLimit(2);                                                                  // 64
        }                                                                                                              // 65
                                                                                                                       //
        return getRandomNumber50Percent;                                                                               // 63
    }(),                                                                                                               // 63
    getRandomNumber33Percent: function () {                                                                            // 66
        function getRandomNumber33Percent() {                                                                          // 66
            return BuzzyGlobal.gRandomNumForLimit(3);                                                                  // 67
        }                                                                                                              // 68
                                                                                                                       //
        return getRandomNumber33Percent;                                                                               // 66
    }(),                                                                                                               // 66
    getRandomNumber25Percent: function () {                                                                            // 69
        function getRandomNumber25Percent() {                                                                          // 69
            return BuzzyGlobal.gRandomNumForLimit(4);                                                                  // 70
        }                                                                                                              // 71
                                                                                                                       //
        return getRandomNumber25Percent;                                                                               // 69
    }(),                                                                                                               // 69
                                                                                                                       //
    mainLink: function () {                                                                                            // 73
        function mainLink() {                                                                                          // 73
            return { content: "main-link" };                                                                           // 74
        }                                                                                                              // 75
                                                                                                                       //
        return mainLink;                                                                                               // 73
    }(),                                                                                                               // 73
    userName: function () {                                                                                            // 76
        function userName() {                                                                                          // 76
            return BuzzyGlobal.gGetUserName(Meteor.user());                                                            // 77
        }                                                                                                              // 78
                                                                                                                       //
        return userName;                                                                                               // 76
    }(),                                                                                                               // 76
    getFirstMobile: function () {                                                                                      // 79
        function getFirstMobile(userID) {                                                                              // 79
            console.log("getFirstMobile:", userID);                                                                    // 80
            return BuzzyGlobal.getFirstMobile(userID);                                                                 // 81
        }                                                                                                              // 82
                                                                                                                       //
        return getFirstMobile;                                                                                         // 79
    }(),                                                                                                               // 79
    commentURL: function () {                                                                                          // 83
        function commentURL() {                                                                                        // 83
            return Meteor.absoluteUrl("go/" + this.comment.topLevelParentID + "#" + this.comment._id);                 // 84
        }                                                                                                              // 85
                                                                                                                       //
        return commentURL;                                                                                             // 83
    }(),                                                                                                               // 83
    viewCommentURL: function () {                                                                                      // 86
        function viewCommentURL() {                                                                                    // 86
            return Meteor.absoluteUrl("pixel/" + this.toUserID + "/" + this.comment.topLevelParentID + "/" + this.comment._id);
        }                                                                                                              // 88
                                                                                                                       //
        return viewCommentURL;                                                                                         // 86
    }(),                                                                                                               // 86
    viewCommentURLResource: function () {                                                                              // 89
        function viewCommentURLResource(userID) {                                                                      // 89
            return Meteor.absoluteUrl("pixel/" + userID + "/" + this.topLevelParentID + "/" + this._id);               // 90
        }                                                                                                              // 91
                                                                                                                       //
        return viewCommentURLResource;                                                                                 // 89
    }(),                                                                                                               // 89
    viewURLResource: function () {                                                                                     // 92
        function viewURLResource(resourceID, userID) {                                                                 // 92
            return Meteor.absoluteUrl("pixelr/" + userID + "/" + resourceID);                                          // 93
        }                                                                                                              // 94
                                                                                                                       //
        return viewURLResource;                                                                                        // 92
    }(),                                                                                                               // 92
    files: function () {                                                                                               // 95
        function files(commentID) {                                                                                    // 95
            //console.log("FILES:", commentID, Attachments.find({commentID:commentID,published:true}).count())         // 96
            //console.log("FILES2:", commentID, Attachments.find({commentID:commentID}).count())                       // 97
            //return Attachments.find({commentID:commentID,published:true})                                            // 98
            if (commentID) {                                                                                           // 99
                console.log("here 1");                                                                                 // 100
                //return Attachments.find({commentID: commentID})                                                      // 101
            } else {                                                                                                   // 102
                console.log("here 2");                                                                                 // 103
                return null;                                                                                           // 104
            }                                                                                                          // 105
        }                                                                                                              // 107
                                                                                                                       //
        return files;                                                                                                  // 95
    }(),                                                                                                               // 95
    images: function () {                                                                                              // 108
        function images(commentID) {                                                                                   // 108
            if (commentID) {                                                                                           // 109
                //return Images.find({commentID:commentID,published:true})                                             // 110
                console.log("here 3");                                                                                 // 111
                //return Images.find({commentID: commentID})                                                           // 112
            } else {                                                                                                   // 114
                console.log("here 4");                                                                                 // 115
                return null;                                                                                           // 116
            }                                                                                                          // 118
        }                                                                                                              // 121
                                                                                                                       //
        return images;                                                                                                 // 108
    }(),                                                                                                               // 108
                                                                                                                       //
    embeddedBuzzResources: function () {                                                                               // 123
        function embeddedBuzzResources(resourceID, userID) {                                                           // 123
            var searchExpression = new RegExp("^," + resourceID + ",");                                                // 124
            var userSearchExpression = new RegExp(userID);                                                             // 125
                                                                                                                       //
            return Resources.find({ $and: [{ $or: [{ _id: resourceID }, { path: searchExpression }] }, { $or: [{ readers: userSearchExpression }, { authors: userSearchExpression }, { owners: userSearchExpression }] }, { status: 'published' }] });
        }                                                                                                              // 147
                                                                                                                       //
        return embeddedBuzzResources;                                                                                  // 123
    }(),                                                                                                               // 123
    singleResource: function () {                                                                                      // 148
        function singleResource(resourceID) {                                                                          // 148
            return Resources.findOne(resourceID);                                                                      // 149
        }                                                                                                              // 150
                                                                                                                       //
        return singleResource;                                                                                         // 148
    }(),                                                                                                               // 148
    resources: function () {                                                                                           // 151
        function resources(resourceIDs, toUserID) {                                                                    // 151
            var searchUserExpression = new RegExp(toUserID);                                                           // 152
            if (resourceIDs) {                                                                                         // 153
                var sortedChildren = [];                                                                               // 154
                var leftSortedTree = function () {                                                                     // 155
                    function leftSortedTree(nodes) {                                                                   // 155
                        var childSearchExpression = function () {                                                      // 156
                            function childSearchExpression(node) {                                                     // 156
                                return new RegExp("," + node + ",$");                                                  // 157
                            }                                                                                          // 158
                                                                                                                       //
                            return childSearchExpression;                                                              // 156
                        }();                                                                                           // 156
                                                                                                                       //
                        for (var i = 0; i < nodes.length; i++) {                                                       // 160
                            var directChildren = Resources.find({ $or: [{ $and: [{ path: childSearchExpression(nodes[i]) }, { status: BuzzyGlobal.gRESOURCE_STATUS.PUBLISHED }] }, { $and: [{ $or: [{ editors: searchUserExpression }, { owners: searchUserExpression }] }, { path: childSearchExpression(nodes[i]) }, { status: BuzzyGlobal.gRESOURCE_STATUS.DRAFT }] }] }, { sort: { path: 1, rank: 1 } }).map(function (resource) {
                                return resource._id;                                                                   // 177
                            });                                                                                        // 178
                            console.log("i:", i, nodes[i]);                                                            // 179
                            if (directChildren.length > 0) {                                                           // 180
                                                                                                                       //
                                _.union(sortedChildren.push(nodes[i]), leftSortedTree(directChildren));                // 182
                            } else {                                                                                   // 183
                                sortedChildren.push(nodes[i]);                                                         // 184
                            }                                                                                          // 185
                        }                                                                                              // 187
                    }                                                                                                  // 189
                                                                                                                       //
                    return leftSortedTree;                                                                             // 155
                }();                                                                                                   // 155
                leftSortedTree(resourceIDs);                                                                           // 190
                return sortedChildren;                                                                                 // 191
            } else {                                                                                                   // 194
                return null;                                                                                           // 195
            }                                                                                                          // 196
        }                                                                                                              // 198
                                                                                                                       //
        return resources;                                                                                              // 151
    }(),                                                                                                               // 151
                                                                                                                       //
    displayComments: function () {                                                                                     // 200
        function displayComments(showComments) {                                                                       // 200
            if (showComments === BuzzyGlobal.gCOMMENTSHOW.NONE) {                                                      // 201
                return false;                                                                                          // 202
            } else {                                                                                                   // 203
                return true;                                                                                           // 204
            }                                                                                                          // 205
            //return Images.find({commentID:commentID,published:true})                                                 // 206
        }                                                                                                              // 208
                                                                                                                       //
        return displayComments;                                                                                        // 200
    }(),                                                                                                               // 200
    hasComments: function () {                                                                                         // 209
        function hasComments(resourceID) {                                                                             // 209
            if (resourceID) {                                                                                          // 210
                return Comments.find({ resourceParentID: resourceID, status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }).count() > 0;
            } else {                                                                                                   // 212
                return false;                                                                                          // 213
            }                                                                                                          // 214
            //return Images.find({commentID:commentID,published:true})                                                 // 215
        }                                                                                                              // 217
                                                                                                                       //
        return hasComments;                                                                                            // 209
    }(),                                                                                                               // 209
    numberOfComments: function () {                                                                                    // 218
        function numberOfComments(resourceID) {                                                                        // 218
            if (resourceID) {                                                                                          // 219
                return Comments.find({ resourceParentID: resourceID, status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }).count();
            } else {                                                                                                   // 221
                return null;                                                                                           // 222
            }                                                                                                          // 223
            //return Images.find({commentID:commentID,published:true})                                                 // 224
        }                                                                                                              // 226
                                                                                                                       //
        return numberOfComments;                                                                                       // 218
    }(),                                                                                                               // 218
    getRecentComments: function () {                                                                                   // 227
        function getRecentComments(resourceID, toUserID) {                                                             // 227
            if (resourceID) {                                                                                          // 228
                var userSearchExpression = new RegExp(toUserID);                                                       // 229
                var latestComments = Comments.find({ $and: [{ $or: [{                                                  // 230
                            $and: [{ resourceParentID: resourceID }, { toUsers: null }]                                // 235
                        }, {                                                                                           // 234
                            $and: [{ resourceParentID: resourceID }, { toUsers: userSearchExpression }]                // 238
                        }] }, { status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }] }, //may have to change to show all and then deleted, flagged etc
                { sort: { submitted: -1 }, limit: 3 }).map(function (comment) {                                        // 242
                    return comment;                                                                                    // 243
                });                                                                                                    // 244
                return latestComments.reverse();                                                                       // 245
            } else {                                                                                                   // 246
                return null;                                                                                           // 247
            }                                                                                                          // 248
        }                                                                                                              // 251
                                                                                                                       //
        return getRecentComments;                                                                                      // 227
    }(),                                                                                                               // 227
    getAppData: function () {                                                                                          // 252
        function getAppData(resourceID, userID) {                                                                      // 252
            console.log("getAppData:", userID);                                                                        // 253
            if (resourceID) {                                                                                          // 254
                var resource = Resources.findOne(resourceID);                                                          // 255
                var sortOrder = 1;                                                                                     // 256
                                                                                                                       //
                var currLimit = BuzzyGlobal.gMICROAPPDATA_LIMIT;                                                       // 258
                if (typeof resource.content.numberOfItems != "undefined" && resource.content.numberOfItems > 0) {      // 259
                    currLimit = resource.content.numberOfItems;                                                        // 260
                }                                                                                                      // 261
                                                                                                                       //
                if (resource && typeof resource.content.sortField !== "undefined") {                                   // 263
                    if (typeof resource.content.sortOrder !== "undefined" && resource.content.sortOrder === "asc") {   // 264
                        sortOrder = 1;                                                                                 // 265
                    } else {                                                                                           // 266
                        sortOrder = -1;                                                                                // 267
                    }                                                                                                  // 268
                    if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR) {
                        if (Resources.canEdit(userID, resource)) {                                                     // 270
                            return MicroAppData.find({ parentResourceID: resource._id }, { sort: { sortVal: sortOrder }, limit: currLimit });
                        } else {                                                                                       // 272
                            return MicroAppData.find({ parentResourceID: resource._id, userID: userID }, { sort: { sortVal: sortOrder }, limit: currLimit });
                        }                                                                                              // 274
                    } else {                                                                                           // 276
                        return MicroAppData.find({ parentResourceID: resource._id }, { sort: { sortVal: sortOrder }, limit: currLimit });
                    }                                                                                                  // 278
                } else {                                                                                               // 281
                    if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR) {
                        if (Resources.canEdit(userID, resource)) {                                                     // 283
                            return MicroAppData.find({ parentResourceID: resource._id }, { sort: { submitted: -1 }, limit: currLimit });
                        } else {                                                                                       // 285
                            return MicroAppData.find({ parentResourceID: resource._id, userID: userID }, { sort: { submitted: -1 }, limit: currLimit });
                        }                                                                                              // 287
                    } else {                                                                                           // 289
                        return MicroAppData.find({ parentResourceID: resource._id }, { sort: { submitted: -1 }, limit: currLimit });
                    }                                                                                                  // 291
                }                                                                                                      // 293
            } else {                                                                                                   // 298
                return null;                                                                                           // 299
            }                                                                                                          // 300
        }                                                                                                              // 303
                                                                                                                       //
        return getAppData;                                                                                             // 252
    }(),                                                                                                               // 252
    getAppDataRow: function () {                                                                                       // 304
        function getAppDataRow(resourceID, userID, rowID) {                                                            // 304
            console.log("getAppData:", userID);                                                                        // 305
            if (resourceID) {                                                                                          // 306
                var resource = Resources.findOne(resourceID);                                                          // 307
                var sortOrder = 1;                                                                                     // 308
                                                                                                                       //
                if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR) {
                    console.log("getAppData:1 ", rowID);                                                               // 311
                    if (Resources.canEdit(userID, resource)) {                                                         // 312
                        console.log("getAppData:2 ", rowID);                                                           // 313
                        return MicroAppData.findOne({ _id: rowID });                                                   // 314
                    } else {                                                                                           // 315
                        console.log("getAppData:3 ", rowID);                                                           // 316
                        return MicroAppData.findOne({ _id: rowID, userID: userID });                                   // 317
                    }                                                                                                  // 318
                } else {                                                                                               // 320
                    console.log("getAppData:4 ", rowID);                                                               // 321
                    return MicroAppData.findOne({ _id: rowID });                                                       // 322
                }                                                                                                      // 323
            } else {                                                                                                   // 325
                console.log("getAppData:5 ", rowID);                                                                   // 326
                return null;                                                                                           // 327
            }                                                                                                          // 328
        }                                                                                                              // 331
                                                                                                                       //
        return getAppDataRow;                                                                                          // 304
    }(),                                                                                                               // 304
    getAppFieldsNotCollapsed: function () {                                                                            // 332
        function getAppFieldsNotCollapsed(resourceID) {                                                                // 332
            if (resourceID) {                                                                                          // 333
                return MicroAppFields.find({ parentResourceID: resourceID, collapseBreakPoint: { $ne: BuzzyGlobal.gAPPFIELD_COLLAPSE.COLLAPSE } }, { sort: { rank: 1 } });
            } else {                                                                                                   // 335
                return null;                                                                                           // 336
            }                                                                                                          // 337
        }                                                                                                              // 340
                                                                                                                       //
        return getAppFieldsNotCollapsed;                                                                               // 332
    }(),                                                                                                               // 332
    getAppFieldsCollapsed: function () {                                                                               // 341
        function getAppFieldsCollapsed(resourceID) {                                                                   // 341
            if (resourceID) {                                                                                          // 342
                return MicroAppFields.find({ parentResourceID: resourceID, collapseBreakPoint: BuzzyGlobal.gAPPFIELD_COLLAPSE.COLLAPSE }, { sort: { rank: 1 } });
            } else {                                                                                                   // 344
                return null;                                                                                           // 345
            }                                                                                                          // 346
        }                                                                                                              // 347
                                                                                                                       //
        return getAppFieldsCollapsed;                                                                                  // 341
    }(),                                                                                                               // 341
    getAppFieldData: function () {                                                                                     // 348
        function getAppFieldData(appDataID, fieldID) {                                                                 // 348
            //return MicroAppData.findOne({parentResourceID:this.parentResourceID,"content._id":this._id});            // 349
            var microField = MicroAppData.findOne({ _id: appDataID });                                                 // 350
            if (microField) {                                                                                          // 351
                for (i in meteorBabelHelpers.sanitizeForInObject(microField.content)) {                                // 352
                    if (microField.content[i]._id === fieldID) {                                                       // 353
                        microField.content[i].appDataID = appDataID;                                                   // 354
                        return microField.content[i];                                                                  // 355
                    }                                                                                                  // 356
                }                                                                                                      // 357
            }                                                                                                          // 358
        }                                                                                                              // 360
                                                                                                                       //
        return getAppFieldData;                                                                                        // 348
    }(),                                                                                                               // 348
                                                                                                                       //
    showFieldVoteOptions: function () {                                                                                // 362
        function showFieldVoteOptions(fieldID) {                                                                       // 362
            if (fieldID) {                                                                                             // 363
                var fieldData = MicroAppFields.findOne({ _id: fieldID });                                              // 364
                if (fieldData && fieldData.option && fieldData.option.values) {                                        // 365
                    return fieldData.option.values;                                                                    // 366
                } else {                                                                                               // 367
                    return;                                                                                            // 368
                }                                                                                                      // 369
                ;                                                                                                      // 370
            } else {                                                                                                   // 371
                return null;                                                                                           // 372
            }                                                                                                          // 373
        }                                                                                                              // 376
                                                                                                                       //
        return showFieldVoteOptions;                                                                                   // 362
    }(),                                                                                                               // 362
    commentReplyAddress: function () {                                                                                 // 377
        function commentReplyAddress(topResourceID, currentResourceID, currentUserID) {                                // 377
            var replyEmailAddress = topResourceID + "." + currentResourceID + "." + currentUserID + "@" + Meteor.settings.MAIL_INCOMING_DOMAIN;
                                                                                                                       //
            return replyEmailAddress;                                                                                  // 380
        }                                                                                                              // 382
                                                                                                                       //
        return commentReplyAddress;                                                                                    // 377
    }(),                                                                                                               // 377
    locationSearch: function () {                                                                                      // 383
        function locationSearch(coords) {                                                                              // 383
            if (coords) {                                                                                              // 384
                return encodeURI("https://maps.google.com/?q=" + coords.lat + "," + coords.lng);                       // 385
            } else {                                                                                                   // 386
                return encodeURI("https://maps.google.com/");                                                          // 387
            }                                                                                                          // 388
        }                                                                                                              // 391
                                                                                                                       //
        return locationSearch;                                                                                         // 383
    }(),                                                                                                               // 383
    voteLink: function () {                                                                                            // 392
        function voteLink(toUserID, currentResourceID, appID, fieldID, fieldVal) {                                     // 392
                                                                                                                       //
            console.log("Vote LInk: ", Meteor.absoluteUrl("vote/" + toUserID + "/" + currentResourceID + "/" + appID + "/" + fieldID + "/" + encodeURIComponent(fieldVal).replace(/[!'()*]/g, escape)));
                                                                                                                       //
            return Meteor.absoluteUrl("vote/" + toUserID + "/" + currentResourceID + "/" + appID + "/" + fieldID + "/" + encodeURIComponent(fieldVal).replace(/[!'()*]/g, escape));
        }                                                                                                              // 398
                                                                                                                       //
        return voteLink;                                                                                               // 392
    }(),                                                                                                               // 392
    commentLink: function () {                                                                                         // 399
        function commentLink(topResourceID, currentResourceID, completedSetup, context) {                              // 399
            if (completedSetup) {                                                                                      // 400
                return Meteor.absoluteUrl("go/" + topResourceID + "#" + currentResourceID);                            // 401
            } else {                                                                                                   // 402
                return Meteor.absoluteUrl('regopassword/1/?token=' + context.token + "&top=" + topResourceID + "&sub=" + currentResourceID + "&user=" + context.toUserID);
            }                                                                                                          // 404
        }                                                                                                              // 405
                                                                                                                       //
        return commentLink;                                                                                            // 399
    }(),                                                                                                               // 399
    commentLinkEmbedded: function () {                                                                                 // 406
        function commentLinkEmbedded(topResourceID, currentResourceID, completedSetup, token, toUserID) {              // 406
            if (completedSetup) {                                                                                      // 407
                return Meteor.absoluteUrl("go/" + topResourceID + "#" + currentResourceID);                            // 408
            } else {                                                                                                   // 409
                return Meteor.absoluteUrl('regopassword/1/?token=' + token + "&top=" + topResourceID + "&sub=" + currentResourceID + "&user=" + toUserID);
            }                                                                                                          // 411
        }                                                                                                              // 412
                                                                                                                       //
        return commentLinkEmbedded;                                                                                    // 406
    }(),                                                                                                               // 406
    buzzLink: function () {                                                                                            // 413
        function buzzLink(resourceID) {                                                                                // 413
            return Meteor.absoluteUrl("go/" + resourceID);                                                             // 414
        }                                                                                                              // 417
                                                                                                                       //
        return buzzLink;                                                                                               // 413
    }(),                                                                                                               // 413
    notTopResource: function () {                                                                                      // 418
        function notTopResource(topResourceID, resourceID) {                                                           // 418
            return topResourceID !== resourceID;                                                                       // 419
        }                                                                                                              // 421
                                                                                                                       //
        return notTopResource;                                                                                         // 418
    }(),                                                                                                               // 418
    mainBuzzLink: function () {                                                                                        // 422
        function mainBuzzLink(context, resourceID, randomOpt) {                                                        // 422
            if (context.completedSetup) {                                                                              // 423
                                                                                                                       //
                return Meteor.absoluteUrl("go/" + resourceID + "/?utm_source=buzzyinvite&utm_campaign=buzzyemail&utm_content=" + randomOpt.content);
            } else {                                                                                                   // 426
                return Meteor.absoluteUrl('regopassword/1/?token=' + context.token + "&top=" + resourceID + "&user=" + context.toUserID + "&utm_source=buzzyinvite&utm_campaign=buzzyemail&utm_content=" + randomOpt.content);
            }                                                                                                          // 428
        }                                                                                                              // 431
                                                                                                                       //
        return mainBuzzLink;                                                                                           // 422
    }(),                                                                                                               // 422
    activateLink: function () {                                                                                        // 432
        function activateLink() {                                                                                      // 432
            if (typeof this.createTemplateID !== "undefined" && this.createTemplateID) {                               // 433
                return Meteor.absoluteUrl('createpassword/1/?token=' + this.token + "&template=" + this.createTemplateID);
            } else if (typeof this.invitingResourceID !== "undefined" && this.invitingResourceID) {                    // 435
                return Meteor.absoluteUrl('createpassword/1/?token=' + this.token + "&top=" + this.invitingResourceID);
            } else {                                                                                                   // 437
                return Meteor.absoluteUrl('createpassword/1/?token=' + this.token);                                    // 438
            }                                                                                                          // 439
        }                                                                                                              // 441
                                                                                                                       //
        return activateLink;                                                                                           // 432
    }(),                                                                                                               // 432
                                                                                                                       //
    getFirstImageinGalleryURL: function () {                                                                           // 443
        function getFirstImageinGalleryURL(galleryID) {                                                                // 443
            var pathRegex = new RegExp(galleryID);                                                                     // 444
            var image = Resources.findOne({ path: pathRegex, type: BuzzyGlobal.gBASICTYPES.FILEPICKER });              // 445
            if (image) {                                                                                               // 446
                return image.content.filePicker.url;                                                                   // 447
            }                                                                                                          // 448
                                                                                                                       //
            //return Meteor.absoluteUrl();                                                                             // 450
        }                                                                                                              // 451
                                                                                                                       //
        return getFirstImageinGalleryURL;                                                                              // 443
    }(),                                                                                                               // 443
    getFileURL: function () {                                                                                          // 452
        function getFileURL(fileID, generatedToken) {                                                                  // 452
            console.log("GET FILE URL:", fileID);                                                                      // 453
            /* var attachment = Attachments.findOne(fileID);                                                           // 454
             if (attachment){                                                                                          //
                 return Meteor.absoluteUrl() + attachment.url({auth:generatedToken, download:true}).substring(1);      //
             }*/                                                                                                       //
                                                                                                                       //
            //return Meteor.absoluteUrl();                                                                             // 459
        }                                                                                                              // 460
                                                                                                                       //
        return getFileURL;                                                                                             // 452
    }(),                                                                                                               // 452
    getURL: function () {                                                                                              // 461
        function getURL() {                                                                                            // 461
            var fileURL = this.url();                                                                                  // 462
            console.log("fileURL", fileURL);                                                                           // 463
            if (fileURL) {                                                                                             // 464
                return Meteor.absoluteUrl() + this.url().substring(1);                                                 // 465
            } else {                                                                                                   // 466
                return Meteor.absoluteUrl();                                                                           // 467
            }                                                                                                          // 468
        }                                                                                                              // 470
                                                                                                                       //
        return getURL;                                                                                                 // 461
    }(),                                                                                                               // 461
    truncateURL: function () {                                                                                         // 471
        function truncateURL(url) {                                                                                    // 471
                                                                                                                       //
            if (url) {                                                                                                 // 473
                return url.substring(0, BuzzyGlobal.gMAX_LINK_DISPLAY_LENGTH) + "...";                                 // 474
            }                                                                                                          // 475
        }                                                                                                              // 477
                                                                                                                       //
        return truncateURL;                                                                                            // 471
    }(),                                                                                                               // 471
    unfollowURL: function () {                                                                                         // 478
        function unfollowURL(resourceID) {                                                                             // 478
                                                                                                                       //
            return Meteor.absoluteUrl() + "unfollow/" + this.toUserEmail + "/" + resourceID;                           // 480
        }                                                                                                              // 481
                                                                                                                       //
        return unfollowURL;                                                                                            // 478
    }(),                                                                                                               // 478
    formatBytes: function () {                                                                                         // 482
        function formatBytes(bytes) {                                                                                  // 482
                                                                                                                       //
            if (bytes == 0) return '0 Byte';                                                                           // 484
            var k = 1000;                                                                                              // 485
            var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];                                     // 486
            var i = Math.floor(Math.log(bytes) / Math.log(k));                                                         // 487
            return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];                                           // 488
        }                                                                                                              // 490
                                                                                                                       //
        return formatBytes;                                                                                            // 482
    }(),                                                                                                               // 482
    $eq: function () {                                                                                                 // 491
        function $eq(a, b) {                                                                                           // 491
            return a === b;                                                                                            // 492
        }                                                                                                              // 493
                                                                                                                       //
        return $eq;                                                                                                    // 491
    }(),                                                                                                               // 491
    $gt: function () {                                                                                                 // 494
        function $gt(a, b) {                                                                                           // 494
            return a > b;                                                                                              // 495
        }                                                                                                              // 496
                                                                                                                       //
        return $gt;                                                                                                    // 494
    }(),                                                                                                               // 494
    dateDiffDays: function () {                                                                                        // 497
        function dateDiffDays(start, end) {                                                                            // 497
            if (start && end) {                                                                                        // 498
                return moment(end).diff(moment(start), "days");                                                        // 499
            } else {                                                                                                   // 500
                return "";                                                                                             // 501
            }                                                                                                          // 502
        }                                                                                                              // 504
                                                                                                                       //
        return dateDiffDays;                                                                                           // 497
    }(),                                                                                                               // 497
                                                                                                                       //
    formatDateTime: function () {                                                                                      // 506
        function formatDateTime(inputDate) {                                                                           // 506
            return moment(inputDate).format('DD MMM YYYY (h:mm a)');                                                   // 507
        }                                                                                                              // 508
                                                                                                                       //
        return formatDateTime;                                                                                         // 506
    }(),                                                                                                               // 506
    formatDate: function () {                                                                                          // 509
        function formatDate(inputDate, options, timezone) {                                                            // 509
            return BuzzyGlobal.gFormatDate(inputDate, options, timezone);                                              // 510
        }                                                                                                              // 511
                                                                                                                       //
        return formatDate;                                                                                             // 509
    }(),                                                                                                               // 509
    microAppChildren: function () {                                                                                    // 512
        function microAppChildren(userID, resourceID, appID, fieldID) {                                                // 512
            console.log("microAppchildren:", userID, resourceID, appID, fieldID);                                      // 513
            if (userID && resourceID) {                                                                                // 514
                var resource = Resources.findOne({ _id: resourceID });                                                 // 515
                if (Resources.canView(userID, resource)) {                                                             // 516
                    return MicroAppChild.find({ parentAppItemID: appID, parentAppFieldID: fieldID });                  // 517
                }                                                                                                      // 518
            }                                                                                                          // 520
        }                                                                                                              // 521
                                                                                                                       //
        return microAppChildren;                                                                                       // 512
    }()                                                                                                                // 512
                                                                                                                       //
};                                                                                                                     // 1
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"templates.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lib/templates.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
Templates = {};                                                                                                        // 1
                                                                                                                       //
Templates.commentNotification = {                                                                                      // 3
  path: 'emails/email-notification/comment.html', // Relative to the 'private' dir.                                    // 4
  css: 'emails/email-notification/style.css', // Mail specific CSS.                                                    // 5
                                                                                                                       //
  helpers: {                                                                                                           // 7
    capitalizedName: function () {                                                                                     // 8
      function capitalizedName() {                                                                                     // 8
        return this.name.charAt(0).toUpperCase() + this.name.slice(1);                                                 // 9
      }                                                                                                                // 10
                                                                                                                       //
      return capitalizedName;                                                                                          // 8
    }()                                                                                                                // 8
  }                                                                                                                    // 7
};                                                                                                                     // 3
Templates.resourceNotification = {                                                                                     // 13
  path: 'emails/email-notification/resource.html', // Relative to the 'private' dir.                                   // 14
  css: 'emails/email-notification/style.css', // Mail specific CSS.                                                    // 15
                                                                                                                       //
  helpers: {                                                                                                           // 17
    capitalizedName: function () {                                                                                     // 18
      function capitalizedName() {                                                                                     // 18
        return this.name.charAt(0).toUpperCase() + this.name.slice(1);                                                 // 19
      }                                                                                                                // 20
                                                                                                                       //
      return capitalizedName;                                                                                          // 18
    }()                                                                                                                // 18
  }                                                                                                                    // 17
};                                                                                                                     // 13
Templates.microAppNotification = {                                                                                     // 23
  path: 'emails/email-notification/microapp.html', // Relative to the 'private' dir.                                   // 24
  css: 'emails/email-notification/style.css', // Mail specific CSS.                                                    // 25
                                                                                                                       //
  helpers: {                                                                                                           // 27
    capitalizedName: function () {                                                                                     // 28
      function capitalizedName() {                                                                                     // 28
        return this.name.charAt(0).toUpperCase() + this.name.slice(1);                                                 // 29
      }                                                                                                                // 30
                                                                                                                       //
      return capitalizedName;                                                                                          // 28
    }()                                                                                                                // 28
  }                                                                                                                    // 27
};                                                                                                                     // 23
Templates.inviteEmail = {                                                                                              // 33
  path: 'emails/email-notification/invite.html', // Relative to the 'private' dir.                                     // 34
  css: 'emails/email-notification/style.css', // Mail specific CSS.                                                    // 35
                                                                                                                       //
  helpers: {                                                                                                           // 37
    capitalizedName: function () {                                                                                     // 38
      function capitalizedName() {                                                                                     // 38
        return this.name.charAt(0).toUpperCase() + this.name.slice(1);                                                 // 39
      }                                                                                                                // 40
                                                                                                                       //
      return capitalizedName;                                                                                          // 38
    }()                                                                                                                // 38
  }                                                                                                                    // 37
};                                                                                                                     // 33
Templates.activationEmail = {                                                                                          // 43
  path: 'emails/email-notification/activate.html', // Relative to the 'private' dir.                                   // 44
  css: 'emails/email-notification/style.css', // Mail specific CSS.                                                    // 45
                                                                                                                       //
  helpers: {                                                                                                           // 47
    capitalizedName: function () {                                                                                     // 48
      function capitalizedName() {                                                                                     // 48
        return this.name.charAt(0).toUpperCase() + this.name.slice(1);                                                 // 49
      }                                                                                                                // 50
                                                                                                                       //
      return capitalizedName;                                                                                          // 48
    }()                                                                                                                // 48
  }                                                                                                                    // 47
};                                                                                                                     // 43
                                                                                                                       //
Templates.iCalEmail = {                                                                                                // 54
  path: 'emails/email-notification/ical.html', // Relative to the 'private' dir.                                       // 55
  css: 'emails/email-notification/style.css', // Mail specific CSS.                                                    // 56
                                                                                                                       //
  helpers: {                                                                                                           // 58
    capitalizedName: function () {                                                                                     // 59
      function capitalizedName() {                                                                                     // 59
        return this.name.charAt(0).toUpperCase() + this.name.slice(1);                                                 // 60
      }                                                                                                                // 61
                                                                                                                       //
      return capitalizedName;                                                                                          // 59
    }()                                                                                                                // 59
  }                                                                                                                    // 58
};                                                                                                                     // 54
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"collections":{"registered_users.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/collections/registered_users.js                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 18/02/2015.                                                                              //
 */                                                                                                                    //
RegisteredUsers = new Meteor.Collection('registeredUsers');                                                            // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"saml_providers.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/collections/saml_providers.js                                                                                //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 9/09/2016.                                                                               //
 */                                                                                                                    //
SamlProviders = new Meteor.Collection('samlProviders');                                                                // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}},"methods":{"admin.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/admin.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 21/07/2016.                                                                              //
 */                                                                                                                    //
                                                                                                                       //
BuzzyGlobalAdmin = new function () {                                                                                   // 5
    this.isBuzzyAdmin = function () {                                                                                  // 6
        return Meteor.userId() && Meteor.settings.BUZZY_ADMIN_IDS.indexOf(Meteor.userId()) !== -1;                     // 7
    };                                                                                                                 // 8
}();                                                                                                                   // 9
                                                                                                                       //
Meteor.methods({                                                                                                       // 11
    adminRefreshAllMicroAppSortFields: function () {                                                                   // 12
        function adminRefreshAllMicroAppSortFields() {                                                                 // 12
            if (Meteor.userId() && BuzzyGlobalAdmin.isBuzzyAdmin()) {                                                  // 13
                                                                                                                       //
                var resources = Resources.find({ type: BuzzyGlobal.gBASICTYPES.APPLICATION }).map(function (resource) {
                    if (resource && resource.content && resource.content.sortField) {                                  // 16
                        Meteor.call("updateAllFieldsMicroAppDataSortVal", resource._id, resource.content.sortField, "1");
                    }                                                                                                  // 18
                });                                                                                                    // 19
            } else {                                                                                                   // 22
                console.log("ERROR Trying to adminRefreshAllMicroAppSortFields with userID", Meteor.userId());         // 23
                BuzzyGlobal.throwError("Ooops! You are not allowed to do this!");                                      // 24
            }                                                                                                          // 26
        }                                                                                                              // 27
                                                                                                                       //
        return adminRefreshAllMicroAppSortFields;                                                                      // 12
    }(),                                                                                                               // 12
                                                                                                                       //
    cleanUpPushTokens: function () {                                                                                   // 29
        function cleanUpPushTokens(userID) {                                                                           // 29
            if (userID && Meteor.userId() && BuzzyGlobalAdmin.isBuzzyAdmin()) {                                        // 30
                                                                                                                       //
                //PushTokens.remove({userId:userID})                                                                   // 32
                if (userID) {                                                                                          // 33
                    return Push.appCollection.remove({ userId: userID });                                              // 34
                }                                                                                                      // 35
            } else {                                                                                                   // 38
                console.log("ERROR Trying to cleanUpPushTokens with userID", Meteor.userId());                         // 39
                BuzzyGlobal.throwError("Ooops! You are not allowed to do this!");                                      // 40
            }                                                                                                          // 42
        }                                                                                                              // 44
                                                                                                                       //
        return cleanUpPushTokens;                                                                                      // 29
    }(),                                                                                                               // 29
    buzzOwnerAuthors: function () {                                                                                    // 45
        function buzzOwnerAuthors() {                                                                                  // 45
            if (!BuzzyGlobalAdmin.isBuzzyAdmin()) {                                                                    // 46
                BuzzyGlobal.throwError("Sorry, you are not allowed to do that!!!");                                    // 47
                return;                                                                                                // 48
            }                                                                                                          // 49
            var query = resourceQuery(Meteor.userId(), "all", "");                                                     // 50
            var pipeline = [{ $match: { path: null, status: { $ne: BuzzyGlobal.gRESOURCE_STATUS.DELETED } } }, { $project: { title: 1, updated: 1, type: 1, status: 1, readers: 1, editors: 1, owners: 1, authorOwners: { $setUnion: ["$editors", "$owners"] }, _id: 1 } }, { $match: { authorOwners: { $size: 2 } } }, { $sort: { updated: -1 } }
            //{$group: {_id: null, resTime: {$sum: "$resTime"}}}                                                       // 56
            ];                                                                                                         // 51
            var results = Resources.aggregate(pipeline);                                                               // 58
                                                                                                                       //
            if (results) {                                                                                             // 60
                for (i in meteorBabelHelpers.sanitizeForInObject(results)) {                                           // 61
                    results[i].authorOwnersEmails = BuzzyGlobal.gGetUserEmails(results[i].authorOwners);               // 62
                    results[i].updatedDate = BuzzyGlobal.gFormatDate(results[i].updated);                              // 63
                }                                                                                                      // 64
            }                                                                                                          // 65
                                                                                                                       //
            return results;                                                                                            // 67
        }                                                                                                              // 70
                                                                                                                       //
        return buzzOwnerAuthors;                                                                                       // 45
    }(),                                                                                                               // 45
    uniqueUsersCommentsViews: function () {                                                                            // 71
        function uniqueUsersCommentsViews(start, end) {                                                                // 71
            if (!BuzzyGlobalAdmin.isBuzzyAdmin()) {                                                                    // 72
                BuzzyGlobal.throwError("Sorry, you are not allowed to do that!!!");                                    // 73
                return;                                                                                                // 74
            }                                                                                                          // 75
                                                                                                                       //
            var pipeline = [{                                                                                          // 80
                $match: { $and: [{ submitted: { $gte: start } }, { submitted: { $lte: end } }] }                       // 82
            }, {                                                                                                       // 81
                $group: { _id: '$userID' }                                                                             // 89
            }];                                                                                                        // 88
            var results = CommentsViewed.aggregate(pipeline);                                                          // 92
            if (results) {                                                                                             // 93
                for (i in meteorBabelHelpers.sanitizeForInObject(results)) {                                           // 94
                    user = Users.findOne({ _id: results[i]._id });                                                     // 95
                    results[i].name = BuzzyGlobal.gGetUserName(user);                                                  // 96
                    results[i].email = BuzzyGlobal.gGetUserEmail(user);                                                // 97
                }                                                                                                      // 98
            }                                                                                                          // 99
                                                                                                                       //
            return results;                                                                                            // 101
        }                                                                                                              // 104
                                                                                                                       //
        return uniqueUsersCommentsViews;                                                                               // 71
    }(),                                                                                                               // 71
                                                                                                                       //
    removeUserFromAllBuzzes: function () {                                                                             // 106
        function removeUserFromAllBuzzes(userID) {                                                                     // 106
            check(userID, String);                                                                                     // 107
            if (!BuzzyGlobalAdmin.isBuzzyAdmin()) {                                                                    // 108
                BuzzyGlobal.throwError("Sorry, you are not allowed to do that!!!");                                    // 109
                return;                                                                                                // 110
            }                                                                                                          // 111
                                                                                                                       //
            var userRegex = new RegExp(userID);                                                                        // 113
            Resources.find({ $or: [{ owners: userRegex }, { editors: userRegex }, { readers: userRegex }] }).map(function (resource) {
                console.log("removing user:" + userID + " from " + resource._id);                                      // 120
                Resources.update({ _id: resource._id }, { $pull: { owners: userID, editors: userID, readers: userID } }, { multi: true });
            });                                                                                                        // 127
        }                                                                                                              // 131
                                                                                                                       //
        return removeUserFromAllBuzzes;                                                                                // 106
    }()                                                                                                                // 106
                                                                                                                       //
});                                                                                                                    // 11
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"comments.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/comments.js                                                                                          //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
* Created by adamginsburg on 21/02/2015.                                                                               //
*/                                                                                                                     //
Meteor.methods({                                                                                                       // 4
                                                                                                                       //
    markCommentDeleted: function () {                                                                                  // 6
        function markCommentDeleted(commentID, resourceID) {                                                           // 6
                                                                                                                       //
            var user = Meteor.user();                                                                                  // 8
            if (!user) throw new Meteor.Error(401, "You need to login to delete resources");                           // 9
            var comment = Comments.findOne({ _id: commentID });                                                        // 11
            if (!comment) throw new Meteor.Error(401, "Error locating comment");                                       // 12
                                                                                                                       //
            console.log('is moderator:' + BuzzyGlobal.gIsCommentModerator(user._id, resourceID));                      // 15
                                                                                                                       //
            if (comment.userID === user._id || BuzzyGlobal.gIsCommentModerator(user._id, resourceID)) {                // 17
                Comments.update({ _id: commentID }, { $set: { status: BuzzyGlobal.gCOMMENTSTATUS.DELETED, moderator: user._id } }, function (error) {
                    if (error) {                                                                                       // 19
                        // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                        throw new Meteor.Error(422, error.reason);                                                     // 21
                    } else {                                                                                           // 22
                        console.log("Deleted comment");                                                                // 23
                    }                                                                                                  // 24
                });                                                                                                    // 25
            } else {                                                                                                   // 27
                throw new Meteor.Error(401, "Only owner or moderator can delete comment");                             // 28
            }                                                                                                          // 29
                                                                                                                       //
            return;                                                                                                    // 34
        }                                                                                                              // 37
                                                                                                                       //
        return markCommentDeleted;                                                                                     // 6
    }(),                                                                                                               // 6
    markCommentFlagged: function () {                                                                                  // 38
        function markCommentFlagged(commentID) {                                                                       // 38
                                                                                                                       //
            var user = Meteor.user();                                                                                  // 40
            if (!user) throw new Meteor.Error(401, "You need to login to report resources");                           // 41
            var comment = Comments.findOne({ _id: commentID });                                                        // 43
            if (!comment) throw new Meteor.Error(401, "Error locating comment");                                       // 44
                                                                                                                       //
            Comments.update({ _id: commentID }, { $set: { status: BuzzyGlobal.gCOMMENTSTATUS.FLAGGED, flaggedBy: user.id } }, function (error) {
                if (error) {                                                                                           // 50
                    // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                    throw new Meteor.Error(422, error.reason);                                                         // 52
                } else {                                                                                               // 53
                    console.log("Flagged comment");                                                                    // 54
                }                                                                                                      // 55
            });                                                                                                        // 56
                                                                                                                       //
            return;                                                                                                    // 58
        }                                                                                                              // 61
                                                                                                                       //
        return markCommentFlagged;                                                                                     // 38
    }(),                                                                                                               // 38
    markCommentApproved: function () {                                                                                 // 62
        function markCommentApproved(commentID) {                                                                      // 62
                                                                                                                       //
            var user = Meteor.user();                                                                                  // 64
            if (!user) throw new Meteor.Error(401, "You need to login to approve");                                    // 65
            var comment = Comments.findOne({ _id: commentID });                                                        // 67
            if (!comment || !commentID) throw new Meteor.Error(401, "Error locating comment");                         // 68
                                                                                                                       //
            if (BuzzyGlobal.gIsCommentModerator(Meteor.userId(), comment.topLevelParentID)) {                          // 71
                Comments.update({ _id: commentID }, { $set: { toUsers: null, status: BuzzyGlobal.gCOMMENTSTATUS.LIVE, moderator: user._id } }, function (error) {
                    if (error) {                                                                                       // 73
                        // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                        throw new Meteor.Error(422, error.reason);                                                     // 75
                    } else {                                                                                           // 76
                        var truncatedText = comment.message.substring(0, BuzzyGlobal.gTRUNCATE_COMMENT_TEXT);          // 77
                        Meteor.call("createCommentNotification", comment, comment.topLevelParentID, comment.resourceParentID, truncatedText);
                    }                                                                                                  // 79
                });                                                                                                    // 80
            }                                                                                                          // 81
                                                                                                                       //
            return;                                                                                                    // 83
        }                                                                                                              // 86
                                                                                                                       //
        return markCommentApproved;                                                                                    // 62
    }(),                                                                                                               // 62
                                                                                                                       //
    updateResourceCommentCount: function () {                                                                          // 88
        function updateResourceCommentCount(resourceID) {                                                              // 88
                                                                                                                       //
            /* var newCommentCount = {                                                                                 // 90
                 commentCount: Comments.find({resourceParentID:resourceID}).count()                                    //
             };                                                                                                        //
             Resources.update({_id:resourceID},  {$set:newCommentCount}, function(error) {                             //
                 if (error) {                                                                                          //
                     throw new Meteor.Error(422, error.reason);                                                        //
                 } else {                                                                                              //
                      return;                                                                                          //
                     //Router.go('resourceList');                                                                      //
                 }                                                                                                     //
             });*/                                                                                                     //
        }                                                                                                              // 102
                                                                                                                       //
        return updateResourceCommentCount;                                                                             // 88
    }()                                                                                                                // 88
                                                                                                                       //
});                                                                                                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"filepicker.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/filepicker.js                                                                                        //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 11/11/2015.                                                                              //
 */                                                                                                                    //
var crypto = Npm.require('crypto');                                                                                    // 4
                                                                                                                       //
var filepickerSignUrl = function filepickerSignUrl(blob) {                                                             // 6
                                                                                                                       //
    var handle = blob.url.slice("https://www.filepicker.io/api/file/".length);                                         // 8
                                                                                                                       //
    var expiry = Math.floor(new Date().getTime() / 1000 + BuzzyGlobal.gFILEPICKER_EXPIRY);                             // 10
    var calls = ["read", "convert", "pick", "stat", "exif"];                                                           // 11
    var policy = new Buffer(JSON.stringify({                                                                           // 12
        call: calls,                                                                                                   // 13
        handle: handle,                                                                                                // 14
        expiry: expiry                                                                                                 // 15
    })).toString('base64');                                                                                            // 12
                                                                                                                       //
    var signature = crypto.createHmac('sha256', Meteor.settings.filepicker.secret).update(policy).digest('hex');       // 18
                                                                                                                       //
    if (blob.mimetype.indexOf("image") === -1) {                                                                       // 23
        if (blob.url.indexOf("?") === -1) {                                                                            // 24
            blob.url = blob.url + "?signature=" + signature + "&policy=" + policy;                                     // 25
            blob.signature = signature;                                                                                // 26
            blob.policy = policy;                                                                                      // 27
            return blob;                                                                                               // 28
        } else {                                                                                                       // 29
            blob.url = blob.url + "&signature=" + signature + "&policy=" + policy;                                     // 30
            blob.signature = signature;                                                                                // 31
            blob.policy = policy;                                                                                      // 32
            return blob;                                                                                               // 33
        }                                                                                                              // 34
    } else {                                                                                                           // 36
        var result = HTTP.call("GET", "https://www.filepicker.io/api/file/" + handle + "/metadata?exif=true" + "&signature=" + signature + "&policy=" + policy);
        if (blob.url.indexOf("?") === -1) {                                                                            // 38
                                                                                                                       //
            blob.url = "https://process.filepicker.io/" + Meteor.settings["public"].filepicker.key + "/security=" + "signature:" + signature + ",policy:" + policy + "/rotate=deg:exif/" + blob.url + "?signature=" + signature + "&policy=" + policy;
            blob.signature = signature;                                                                                // 41
            blob.policy = policy;                                                                                      // 42
            blob.EXIF = result.data ? result.data.exif : null;                                                         // 43
            return blob;                                                                                               // 44
        } else {                                                                                                       // 46
            blob.url = "https://process.filepicker.io/" + Meteor.settings["public"].filepicker.key + "/security=" + "signature:" + signature + ",policy:" + policy + "/rotate=deg:exif/" + blob.url + "&signature=" + signature + "&policy=" + policy;
            blob.signature = signature;                                                                                // 48
            blob.policy = policy;                                                                                      // 49
            blob.EXIF = result.data ? result.data.exif : null;                                                         // 50
            return blob;                                                                                               // 51
        }                                                                                                              // 53
    }                                                                                                                  // 56
};                                                                                                                     // 59
                                                                                                                       //
Meteor.methods({                                                                                                       // 61
                                                                                                                       //
    filepickerSignUrlMethod: function () {                                                                             // 63
        function filepickerSignUrlMethod(blob) {                                                                       // 63
                                                                                                                       //
            if (Meteor.userId()) {                                                                                     // 65
                return filepickerSignUrl(blob);                                                                        // 66
            } else {                                                                                                   // 67
                BuzzyGlobal.throwError("Not allowed");                                                                 // 68
            }                                                                                                          // 69
        }                                                                                                              // 71
                                                                                                                       //
        return filepickerSignUrlMethod;                                                                                // 63
    }(),                                                                                                               // 63
    filepickerSignUrlListMethod: function () {                                                                         // 72
        function filepickerSignUrlListMethod(blobsArray) {                                                             // 72
                                                                                                                       //
            if (Meteor.userId()) {                                                                                     // 74
                for (i in meteorBabelHelpers.sanitizeForInObject(blobsArray)) {                                        // 75
                    blobsArray[i] = filepickerSignUrl(blobsArray[i]);                                                  // 76
                }                                                                                                      // 78
                return blobsArray;                                                                                     // 79
            } else {                                                                                                   // 80
                BuzzyGlobal.throwError("Not allowed");                                                                 // 81
            }                                                                                                          // 82
        }                                                                                                              // 84
                                                                                                                       //
        return filepickerSignUrlListMethod;                                                                            // 72
    }(),                                                                                                               // 72
                                                                                                                       //
    createFilepickerCollage: function () {                                                                             // 86
        function createFilepickerCollage(handleArray) {                                                                // 86
                                                                                                                       //
            var signHandle = function () {                                                                             // 88
                function signHandle(handle) {                                                                          // 88
                    var expiryMain = Math.floor(new Date().getTime() / 1000 + BuzzyGlobal.gFILEPICKER_EXPIRY);         // 89
                    var calls = ["read", "convert", "store", "write", "writeUrl"];                                     // 90
                    var policy = new Buffer(JSON.stringify({                                                           // 91
                        call: calls,                                                                                   // 92
                        handle: handle,                                                                                // 93
                        expiry: expiryMain                                                                             // 94
                    })).toString('base64');                                                                            // 91
                                                                                                                       //
                    var signature = crypto.createHmac('sha256', Meteor.settings.filepicker.secret).update(policy).digest('hex');
                    return handle + "?rotate=exif:false&signature=" + signature + "&policy=" + policy;                 // 101
                }                                                                                                      // 104
                                                                                                                       //
                return signHandle;                                                                                     // 88
            }();                                                                                                       // 88
            if (handleArray && handleArray.length > 1) {                                                               // 105
                                                                                                                       //
                var expiry = Math.floor(new Date().getTime() / 1000 + BuzzyGlobal.gFILEPICKER_EXPIRY);                 // 107
                var calls = ["read", "convert", "store", "write", "writeUrl"];                                         // 108
                var policy = new Buffer(JSON.stringify({                                                               // 109
                    call: calls,                                                                                       // 110
                    handle: handleArray[0],                                                                            // 111
                    expiry: expiry                                                                                     // 112
                })).toString('base64');                                                                                // 109
                                                                                                                       //
                var signature = crypto.createHmac('sha256', Meteor.settings.filepicker.secret).update(policy).digest('hex');
                                                                                                                       //
                var signedHandles = [];                                                                                // 123
                //start at second handle                                                                               // 124
                for (i = 1; i < handleArray.length && i < BuzzyGlobal.gMAX_COLLAGE; i++) {                             // 125
                    signedHandles.push(signHandle(handleArray[i]));                                                    // 126
                }                                                                                                      // 127
                var listOfSignedHandles = signedHandles.join(",");                                                     // 128
                var collageURL = "https://process.filestackapi.com/" + Meteor.settings["public"].filepicker.key + "/security=signature:" + signature + ",policy:" + policy + "/collage=files:[" + listOfSignedHandles + "],w:1200,h:800,c:white,autorotate:true/" + handleArray[0] + "?signature=" + signature + "&policy=" + policy;
                                                                                                                       //
                var result = HTTP.call("POST", collageURL);                                                            // 131
                if (result) {                                                                                          // 132
                    var collageHandle = result.data.url.slice("https://cdn.filestackcontent.com/".length);             // 133
                    var collagePolicy = new Buffer(JSON.stringify({                                                    // 134
                        call: ["read", "convert"],                                                                     // 135
                        handle: collageHandle,                                                                         // 136
                        expiry: expiry                                                                                 // 137
                    })).toString('base64');                                                                            // 134
                                                                                                                       //
                    var collageSignature = crypto.createHmac('sha256', Meteor.settings.filepicker.secret).update(collagePolicy).digest('hex');
                }                                                                                                      // 144
                return {                                                                                               // 145
                    signedURL: result.data.url + "?signature=" + collageSignature + "&policy=" + collagePolicy,        // 146
                    policy: collagePolicy,                                                                             // 147
                    signature: collageSignature,                                                                       // 148
                    additionalImageCount: handleArray.length < BuzzyGlobal.gMAX_COLLAGE ? 0 : handleArray.length - BuzzyGlobal.gMAX_COLLAGE
                };                                                                                                     // 145
            }                                                                                                          // 153
        }                                                                                                              // 154
                                                                                                                       //
        return createFilepickerCollage;                                                                                // 86
    }()                                                                                                                // 86
});                                                                                                                    // 61
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"froala.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/froala.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 3/02/2015.                                                                               //
 */                                                                                                                    //
Meteor.methods({                                                                                                       // 4
    getFroalaKey: function () {                                                                                        // 5
        function getFroalaKey() {                                                                                      // 5
                                                                                                                       //
            var key = process.env.FROALAKEY;                                                                           // 7
            if (typeof key !== 'undefined') {                                                                          // 8
                // FOO environment variables exists                                                                    // 9
                console.log("FROALA KEY server:", key);                                                                // 10
                return key;                                                                                            // 11
            } else {                                                                                                   // 12
                return "XC1D2H-9oafB5A-16jzF-10==";                                                                    // 13
            }                                                                                                          // 14
        }                                                                                                              // 16
                                                                                                                       //
        return getFroalaKey;                                                                                           // 5
    }()                                                                                                                // 5
});                                                                                                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"giphy.js":["babel-runtime/regenerator","giphy-api",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/giphy.js                                                                                             //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regeneratorRuntime;module.import('babel-runtime/regenerator',{"default":function(v){_regeneratorRuntime=v}});     //
/**                                                                                                                    // 1
 * Created by adamginsburg on 21/12/2016.                                                                              //
 */                                                                                                                    //
giphy = require('giphy-api')({ apiKey: '3oEjHUKDRyl8u0TW8w', https: true });                                           // 4
                                                                                                                       //
Meteor.methods({                                                                                                       // 7
    searchGIPHY: function () {                                                                                         // 8
        function searchGIPHY(searchString) {                                                                           // 8
            var result, imageURLs;                                                                                     // 8
            return _regeneratorRuntime.async(function () {                                                             // 8
                function searchGIPHY$(_context) {                                                                      // 8
                    while (1) {                                                                                        // 8
                        switch (_context.prev = _context.next) {                                                       // 8
                            case 0:                                                                                    // 8
                                _context.next = 2;                                                                     // 8
                                return _regeneratorRuntime.awrap(giphy.search(searchString));                          // 8
                                                                                                                       //
                            case 2:                                                                                    // 8
                                result = _context.sent;                                                                // 10
                                imageURLs = result.data.map(function (item) {                                          // 11
                                    return item.images.original.url;                                                   // 12
                                });                                                                                    // 13
                                return _context.abrupt('return', imageURLs);                                           // 8
                                                                                                                       //
                            case 5:                                                                                    // 8
                            case 'end':                                                                                // 8
                                return _context.stop();                                                                // 8
                        }                                                                                              // 8
                    }                                                                                                  // 8
                }                                                                                                      // 8
                                                                                                                       //
                return searchGIPHY$;                                                                                   // 8
            }(), null, this);                                                                                          // 8
        }                                                                                                              // 8
                                                                                                                       //
        return searchGIPHY;                                                                                            // 8
    }()                                                                                                                // 8
});                                                                                                                    // 7
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"googledrive.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/googledrive.js                                                                                       //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 4/07/15.                                                                                 //
 */                                                                                                                    //
/*                                                                                                                     // 4
GoogleApi.get('/drive/v2/files', {}, function(result){                                                                 //
    console.log(result);                                                                                               //
});*/                                                                                                                  //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"inbound_email.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/inbound_email.js                                                                                     //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 16/05/15.                                                                                //
 */                                                                                                                    //
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 5
    //fs = Npm.require('fs');                                                                                          // 6
    //https = Npm.require('https');                                                                                    // 7
    if (Meteor.settings.AWS) {                                                                                         // 8
        AWS.config.update({ accessKeyId: Meteor.settings.AWS.accessKeyId, secretAccessKey: Meteor.settings.AWS.secretAccessKey });
    } else {                                                                                                           // 10
        console.warn("Warning. AWS Settings missing");                                                                 // 11
    }                                                                                                                  // 12
    s3 = new AWS.S3();                                                                                                 // 13
});                                                                                                                    // 16
                                                                                                                       //
Meteor.methods({                                                                                                       // 18
    parseEmail: function () {                                                                                          // 19
        function parseEmail(emailContent) {                                                                            // 19
                                                                                                                       //
            // need to sadd code to look through to, cc, bcc list to add them as "reader" if they are not in the list already.
            // Ie if someone new got cc'd                                                                              // 23
            try {                                                                                                      // 24
                if (emailContent.sender && emailContent.sender !== "undefined") {                                      // 25
                    var user = BuzzyGlobal.gGetUserforEmail(emailContent.sender);                                      // 26
                    if (user && user !== "undefined") {                                                                // 27
                                                                                                                       //
                        var toName = emailContent.recipient.split("@")[0];                                             // 29
                                                                                                                       //
                        var nameArray = toName.split(".");                                                             // 31
                                                                                                                       //
                        if (nameArray.length === 3) {                                                                  // 33
                                                                                                                       //
                            var topLevelParentID = nameArray[0];                                                       // 35
                            var resourceParentID = nameArray[1];                                                       // 36
                            var senderUserID = nameArray[2];                                                           // 37
                            var userID = user._id; // sender's buzzy ID                                                // 38
                                                                                                                       //
                            var resourceToCommentOn = Resources.findOne(resourceParentID);                             // 40
                            if (!resourceToCommentOn) {                                                                // 41
                                throw new Meteor.Error(422, "Can't find reosource to comment on");                     // 42
                            }                                                                                          // 43
                            if (!userID) {                                                                             // 44
                                throw new Meteor.Error(422, "Invalid User ID");                                        // 45
                            }                                                                                          // 46
                            var user = Users.findOne(userID);                                                          // 47
                                                                                                                       //
                            if (!user) {                                                                               // 49
                                throw new Meteor.Error(422, "User not found!!!");                                      // 50
                            }                                                                                          // 51
                                                                                                                       //
                            if (!Resources.canView(userID, resourceToCommentOn)) {                                     // 53
                                throw new Meteor.Error(422, "Can't comment on reosource.");                            // 54
                            }                                                                                          // 55
                                                                                                                       //
                            var comment = {                                                                            // 58
                                //message: emailContent["stripped-text"],                                              // 59
                                message: emailContent["stripped-html"],                                                // 60
                                resourceParentID: resourceParentID,                                                    // 61
                                topLevelParentID: topLevelParentID,                                                    // 62
                                toUsers: [senderUserID, user._id]                                                      // 63
                            };                                                                                         // 58
                                                                                                                       //
                            var commentExtraContent = {                                                                // 68
                                type: BuzzyGlobal.gCOMMENTTYPE.URL_LIST,                                               // 69
                                                                                                                       //
                                //files: Session.get("insertedFiles"),                                                 // 71
                                isExternal: false,                                                                     // 72
                                linkToURL: null,                                                                       // 73
                                openInNewWindow: false,                                                                // 74
                                caption: "",                                                                           // 75
                                urlList: []                                                                            // 76
                            };                                                                                         // 68
                                                                                                                       //
                            var truncatedComment = truncate(comment.message, BuzzyGlobal.gCOMMENT_TRUNCATE);           // 81
                                                                                                                       //
                            var truncatedText = emailContent["stripped-text"] ? emailContent["stripped-text"].substring(0, BuzzyGlobal.gTRUNCATE_COMMENT_TEXT) : "";;
                            var newCommentID = new Meteor.Collection.ObjectID()._str;                                  // 84
                            try {                                                                                      // 85
                                if (typeof emailContent["attachments"] !== "undefined" && emailContent["attachments"].length > 0) {
                                    var attachments = EJSON.parse(emailContent["attachments"]);                        // 87
                                    console.log("ATTACHMENTS:", attachments, " LENGTH:", attachments.length);          // 88
                                    if (attachments.length > 0) {                                                      // 89
                                        for (i = 0; i < attachments.length; i++) {                                     // 90
                                                                                                                       //
                                            attachments[i].url = attachments[i].url.replace("api.mailgun.net", "api:" + Meteor.settings.MAILGUN_KEY + "@api.mailgun.net");
                                            /*var paramsA =                                                            // 93
                                            {                                                                          //
                                                auth:{                                                                 //
                                                    user:'api',                                                        //
                                                    pass:Meteor.settings.MAILGUN_KEY                                   //
                                                },                                                                     //
                                                encoding: null                                                         //
                                            }                                                                          //
                                            var resultA = request(attachments[i].url, paramsA, function(error, response,body){
                                                if (!error && response.statusCode == 200) {                            //
                                                    console.log(body) // Show the HTML for the Google homepage.        //
                                                    var randomFileName = Random.id();                                  //
                                                    var params = {Bucket: 'buzzy-tempemail', Key: randomFileName, Body:response, CacheControl: 5184000 };
                                                    if (200 == response.statusCode) {                                  //
                                                        s3.upload(params, function (err, data) {  //2 months           //
                                                            console.log(err,data);                                     //
                                                        });                                                            //
                                                    }                                                                  //
                                                }                                                                      //
                                            });*/                                                                      //
                                            /*if (resultA.response){                                                   // 113
                                                var randomFileName = Random.id();                                      //
                                                //var file = fs.createWriteStream(randomFileName);                     //
                                                var fileBuf = new Buffer(resultA.response.body,'binary').toString('base64')
                                                console.log("Random file:",randomFileName, resultA.response.headers["content-type"]);
                                                 var params = {Bucket: 'buzzy-tempemail', Key: randomFileName, Body:fileBuf ,ContentType:resultA.response.headers["content-type"] };
                                                 var getParams = {Bucket: 'buzzy-tempemail', Key: randomFileName};     //
                                                var url = s3.getSignedUrl('getObject', getParams);                     //
                                                s3.upload(params, function(err, data) {                                //
                                                    if (err) {                                                         //
                                                        console.log("Error uploading data: ", err);                    //
                                                    } else {                                                           //
                                                        console.log("Successfully uploaded data to myBucket/myKey");   //
                                                    }                                                                  //
                                                });                                                                    //
                                            }*/                                                                        //
                                                                                                                       //
                                            /*HTTP.get(attachments[i].url ,                                            // 132
                                                 {                                                                     //
                                                     auth:'api:'+ Meteor.settings.MAILGUN_KEY                          //
                                                 },                                                                    //
                                                 function (error,result) {                                             //
                                                      console.log("RESULT",result);                                    //
                                                     if (error){                                                       //
                                                         BuzzyGlobal.throwError(error)                                 //
                                                     } else {                                                          //
                                                         if (result.content){                                          //
                                                             var randomFileName = Random.id();                         //
                                                             //var file = fs.createWriteStream(randomFileName);        //
                                                             var fileBuf = new Buffer(result.content,'binary').toString('base64')
                                                             console.log("Random file:",randomFileName, result.headers["content-type"]);
                                                              var params = {Bucket: 'buzzy-tempemail', Key: randomFileName, Body:fileBuf ,ContentType:result.headers["content-type"] };
                                                              var getParams = {Bucket: 'buzzy-tempemail', Key: randomFileName};
                                                             var url = s3.getSignedUrl('getObject', getParams);        //
                                                             s3.upload(params, function(err, data) {                   //
                                                                 if (err) {                                            //
                                                                     console.log("Error uploading data: ", err);       //
                                                                 } else {                                              //
                                                                     console.log("Successfully uploaded data to myBucket/myKey");
                                                                 }                                                     //
                                                             });                                                       //
                                                         }                                                             //
                                                     }                                                                 //
                                              });*/                                                                    //
                                        }                                                                              // 165
                                        commentExtraContent.urlList = attachments;                                     // 166
                                    }                                                                                  // 167
                                                                                                                       //
                                    Meteor.call("addComment", comment, nameArray[0], truncatedComment, truncatedText, commentExtraContent, userID, newCommentID, function (err) {
                                        if (err) {                                                                     // 171
                                            BuzzyGlobal.throwError(err);                                               // 172
                                        }                                                                              // 173
                                    });                                                                                // 175
                                } else {                                                                               // 177
                                    Meteor.call("addComment", comment, nameArray[0], truncatedComment, truncatedText, null, userID, newCommentID, function (err) {
                                        if (err) {                                                                     // 179
                                            BuzzyGlobal.throwError(err);                                               // 180
                                        }                                                                              // 181
                                    });                                                                                // 183
                                }                                                                                      // 184
                            } catch (err) {                                                                            // 186
                                BuzzyGlobal.throwError(err);                                                           // 187
                            }                                                                                          // 188
                        }                                                                                              // 193
                    }                                                                                                  // 195
                } else {                                                                                               // 196
                    //shoudl we create a new user and invite them to buzzy?                                            // 197
                    console.log("INVALID SENDER", emailContent);                                                       // 198
                }                                                                                                      // 199
            } catch (err) {                                                                                            // 200
                BuzzyGlobal.throwError(err);                                                                           // 201
            }                                                                                                          // 202
        }                                                                                                              // 205
                                                                                                                       //
        return parseEmail;                                                                                             // 19
    }()                                                                                                                // 19
                                                                                                                       //
});                                                                                                                    // 18
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"micro_app_data.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/micro_app_data.js                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 21/12/2015.                                                                              //
 */                                                                                                                    //
Meteor.methods({                                                                                                       // 4
    sortedMicroAppData: function () {                                                                                  // 5
        function sortedMicroAppData(resourceID) {                                                                      // 5
            var pipeline = [{ $match: { parentResourceID: resourceID } }, { $project: { author: 1, content: 1, parentResourceID: 1, submitted: 1, userID: 1, _id: 1 } }, { $sort: { submitted: -1 } }, { $limit: 10 }
            //{$group: {_id: null, resTime: {$sum: "$resTime"}}}                                                       // 11
            ];                                                                                                         // 6
            var results = MicroAppData.aggregate(pipeline);                                                            // 13
                                                                                                                       //
            return results;                                                                                            // 15
        }                                                                                                              // 16
                                                                                                                       //
        return sortedMicroAppData;                                                                                     // 5
    }()                                                                                                                // 5
});                                                                                                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"registered_users.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/registered_users.js                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 18/02/2015.                                                                              //
 */                                                                                                                    //
Meteor.methods({                                                                                                       // 4
    registerUser: function () {                                                                                        // 5
        function registerUser(emailAddress, referringURL) {                                                            // 5
            RegisteredUsers.insert({                                                                                   // 6
                email: emailAddress,                                                                                   // 7
                fromURL: referringURL,                                                                                 // 8
                submitted: new Date().getTime()                                                                        // 9
            });                                                                                                        // 6
        }                                                                                                              // 11
                                                                                                                       //
        return registerUser;                                                                                           // 5
    }()                                                                                                                // 5
});                                                                                                                    // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"resources.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/resources.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 24/11/2014.                                                                              //
 */                                                                                                                    //
RelatedBuzz = new Mongo.Collection("RelatedBuzz");                                                                     // 4
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"stripe.js":["babel-runtime/regenerator","fibers/future","fibers","stripe",function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/stripe.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var _regeneratorRuntime;module.import('babel-runtime/regenerator',{"default":function(v){_regeneratorRuntime=v}});     //
/**                                                                                                                    // 1
 * Created by adamginsburg on 21/03/2016.                                                                              //
 */                                                                                                                    //
                                                                                                                       //
var Future = require('fibers/future');                                                                                 // 5
var Fiber = require('fibers');                                                                                         // 6
Stripe = {};                                                                                                           // 7
Meteor.startup(function () {                                                                                           // 8
    var StripeKey = Meteor.settings.stripe.testSecretKey;                                                              // 9
    if (!Meteor.settings['public'].stripe.debug) {                                                                     // 10
        StripeKey = Meteor.settings.stripe.liveSecretKey;                                                              // 11
    }                                                                                                                  // 12
    Stripe = require('stripe')(StripeKey);                                                                             // 13
});                                                                                                                    // 15
                                                                                                                       //
/*                                                                                                                     // 19
                                                                                                                       //
function chargeCard(payment, optReceiptEmail){                                                                         //
    var future = new Future();                                                                                         //
    console.log("chargeCard payment:", payment)                                                                        //
                                                                                                                       //
    //should possibly get resourceID instead... then use that to derive the recipientID - seems safer. That said, everything is tracked via Stripe, so should be traceable.
                                                                                                                       //
    var recipient = Users.findOne({_id: payment.recipientID});                                                         //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
    if (payment && recipient && typeof recipient.stripeInfo !== "undefined" && typeof recipient.stripeInfo.stripe_user_id !== "undefined" && payment.totalAmount > 0) {
                                                                                                                       //
        var receiptEmail = Meteor.user()? BuzzyGlobal.gGetUserEmail(Meteor.user()):optReceiptEmail;                    //
        var applicationFee = Math.ceil(payment.totalAmount * Meteor.settings.stripe.applicationFee).toFixed(0);        //
        var roundedAmount = payment.totalAmount.toFixed(0);                                                            //
        Stripe.charges.create(                                                                                         //
            {                                                                                                          //
                amount: roundedAmount,                                                                                 //
                currency: payment.currency,                                                                            //
                source: payment.stripeToken,                                                                           //
                receipt_email: receiptEmail,                                                                           //
                description: payment.description,                                                                      //
                application_fee: applicationFee,                                                                       //
                statement_descriptor: payment.description,                                                             //
                metadata:{                                                                                             //
                    receipt_email:receiptEmail,                                                                        //
                    user_name: Meteor.user()?BuzzyGlobal.gGetUserName(Meteor.user()):"Anonymous",                      //
                    buzzy_user_id: Meteor.userId()?Meteor.userId():"Anonymous"                                         //
                }                                                                                                      //
                                                                                                                       //
            },                                                                                                         //
            {stripe_account: recipient.stripeInfo.stripe_user_id},                                                     //
                                                                                                                       //
            function (err, charge) {                                                                                   //
                if (err) {                                                                                             //
                    console.log("Stripe.charges.create Err:", err);                                                    //
                    future.return(err);                                                                                //
                } else {                                                                                               //
                    console.log("charge:",charge, " by:", Meteor.userId());                                            //
                    future.return(charge);                                                                             //
                }                                                                                                      //
            });                                                                                                        //
    } else {                                                                                                           //
        BuzzyGlobal.throwError("error making payment")                                                                 //
    }                                                                                                                  //
                                                                                                                       //
    return future.wait();                                                                                              //
}                                                                                                                      //
                                                                                                                       //
*/                                                                                                                     //
                                                                                                                       //
if (Meteor.isServer) {                                                                                                 // 73
                                                                                                                       //
    Meteor.methods({                                                                                                   // 76
        'chargeCard2': function () {                                                                                   // 77
            function chargeCard2(payment, resourceID, optReceiptEmail, optMicroAppDataField) {                         // 77
                var recipient, receiptEmail, applicationFee, roundedAmount, chargeResult, currentResource, activity;   // 77
                return _regeneratorRuntime.async(function () {                                                         // 77
                    function chargeCard2$(_context) {                                                                  // 77
                        while (1) {                                                                                    // 77
                            switch (_context.prev = _context.next) {                                                   // 77
                                case 0:                                                                                // 77
                                    recipient = Users.findOne({ _id: payment.recipientID });                           // 79
                                                                                                                       //
                                    if (!(payment && recipient && typeof recipient.stripeInfo !== "undefined" && typeof recipient.stripeInfo.stripe_user_id !== "undefined" && payment.totalAmount > 0)) {
                                        _context.next = 13;                                                            // 77
                                        break;                                                                         // 77
                                    }                                                                                  // 77
                                                                                                                       //
                                    receiptEmail = Meteor.user() ? BuzzyGlobal.gGetUserEmail(Meteor.user()) : optReceiptEmail;
                                    applicationFee = Math.ceil(payment.totalAmount * Meteor.settings.stripe.applicationFee).toFixed(0);
                                    roundedAmount = payment.totalAmount.toFixed(0);                                    // 87
                                    _context.next = 7;                                                                 // 77
                                    return _regeneratorRuntime.awrap(Stripe.charges.create({                           // 77
                                        amount: roundedAmount,                                                         // 90
                                        currency: payment.currency,                                                    // 91
                                        source: payment.stripeToken,                                                   // 92
                                        receipt_email: receiptEmail,                                                   // 93
                                        description: payment.description,                                              // 94
                                        application_fee: applicationFee,                                               // 95
                                        statement_descriptor: payment.description,                                     // 96
                                        metadata: {                                                                    // 97
                                            receipt_email: receiptEmail,                                               // 98
                                            user_name: Meteor.user() ? BuzzyGlobal.gGetUserName(Meteor.user()) : "Anonymous",
                                            buzzy_user_id: Meteor.userId() ? Meteor.userId() : "Anonymous"             // 100
                                        }                                                                              // 97
                                                                                                                       //
                                    }, { stripe_account: recipient.stripeInfo.stripe_user_id }));                      // 89
                                                                                                                       //
                                case 7:                                                                                // 77
                                    chargeResult = _context.sent;                                                      // 88
                                                                                                                       //
                                    if (!chargeResult.statusCode || chargeResult.statusCode === 200) {                 // 105
                                        currentResource = null;                                                        // 106
                                                                                                                       //
                                        if (resourceID) {                                                              // 107
                                            currentResource = Resources.findOne({ _id: resourceID });                  // 108
                                        }                                                                              // 109
                                        if (Meteor.userId()) {                                                         // 110
                                            activity = {                                                               // 112
                                                "actor": {                                                             // 113
                                                    "objectType": "person",                                            // 114
                                                    "displayName": BuzzyGlobal.gGetUserName(Meteor.user())             // 115
                                                },                                                                     // 113
                                                "verb": "transfer",                                                    // 117
                                                "object": {                                                            // 118
                                                    "objectType": "payment",                                           // 119
                                                    "amount": chargeResult.amount,                                     // 120
                                                    "currency": chargeResult.currency,                                 // 121
                                                    "charge_id": chargeResult.id,                                      // 122
                                                    "resource_button_id": currentResource ? currentResource._id : null,
                                                    "microAppField": optMicroAppDataField ? optMicroAppDataField : null
                                                },                                                                     // 118
                                                "target": {                                                            // 126
                                                    "objectType": "person",                                            // 127
                                                    "displayName": BuzzyGlobal.gGetUserNameByID(payment.recipientID)   // 128
                                                }                                                                      // 126
                                            };                                                                         // 112
                                            //Meteor.call("createSingleUserResourceNotification", payment.recipientID, currentResource._id, "transfer", activity);
                                        } else {                                                                       // 132
                                            activity = {                                                               // 134
                                                "actor": {                                                             // 135
                                                    "objectType": "person",                                            // 136
                                                    "displayName": optReceiptEmail                                     // 137
                                                },                                                                     // 135
                                                "verb": "transfer",                                                    // 139
                                                "object": {                                                            // 140
                                                    "objectType": "payment",                                           // 141
                                                    "amount": chargeResult.amount,                                     // 142
                                                    "currency": chargeResult.currency,                                 // 143
                                                    "charge_id": chargeResult.id,                                      // 144
                                                    "resource_button_id": currentResource._id                          // 145
                                                },                                                                     // 140
                                                "target": {                                                            // 147
                                                    "objectType": "person",                                            // 148
                                                    "displayName": BuzzyGlobal.gGetUserNameByID(payment.recipientID)   // 149
                                                }                                                                      // 147
                                            };                                                                         // 134
                                                                                                                       //
                                            Notifications.createAnonymousPaymentNotification(payment.recipientID, currentResource._id, "transfer", activity);
                                        }                                                                              // 153
                                    }                                                                                  // 154
                                    console.log("chargeResult:", chargeResult);                                        // 155
                                    return _context.abrupt('return', chargeResult);                                    // 77
                                                                                                                       //
                                case 13:                                                                               // 77
                                    BuzzyGlobal.throwError("error making payment");                                    // 158
                                                                                                                       //
                                case 14:                                                                               // 77
                                case 'end':                                                                            // 77
                                    return _context.stop();                                                            // 77
                            }                                                                                          // 77
                        }                                                                                              // 77
                    }                                                                                                  // 77
                                                                                                                       //
                    return chargeCard2$;                                                                               // 77
                }(), null, this);                                                                                      // 77
            }                                                                                                          // 77
                                                                                                                       //
            return chargeCard2;                                                                                        // 77
        }(),                                                                                                           // 77
                                                                                                                       //
        'createStripeAccount': function () {                                                                           // 165
            function createStripeAccount() {                                                                           // 165
                                                                                                                       //
                var user = Meteor.user();                                                                              // 167
                if (user) {                                                                                            // 168
                    var email = BuzzyGlobal.gGetUserEmail(user);                                                       // 169
                    if (email) {                                                                                       // 170
                        Stripe.accounts.create({                                                                       // 171
                            managed: false,                                                                            // 172
                            country: 'AU',                                                                             // 173
                            email: email                                                                               // 174
                        }, function (err, account) {                                                                   // 171
                            if (err) {                                                                                 // 176
                                console.log("Stripe.accounts.create err:", err);                                       // 177
                                BuzzyGlobal.throwError(err);                                                           // 178
                            } else {                                                                                   // 179
                                Users.update({ _id: user._id }, { $set: { stripe: account } });                        // 180
                            }                                                                                          // 181
                        });                                                                                            // 183
                    }                                                                                                  // 184
                } else {                                                                                               // 186
                    BuzzyGlobal.throwError("Invalid User:" + user._id);                                                // 187
                }                                                                                                      // 188
            }                                                                                                          // 190
                                                                                                                       //
            return createStripeAccount;                                                                                // 165
        }(),                                                                                                           // 165
        'updateStripeInfo': function () {                                                                              // 191
            function updateStripeInfo(code) {                                                                          // 191
                var clientID = Meteor.settings['public'].stripe.debug ? Meteor.settings['public'].stripe.testClientID : Meteor.settings['public'].stripe.liveClientID;
                var clientSecret = Meteor.settings['public'].stripe.debug ? Meteor.settings.stripe.testSecretKey : Meteor.settings.stripe.liveSecretKey;
                HTTP.call("POST", STRIPE_TOKEN_URI, {                                                                  // 194
                    data: {                                                                                            // 195
                        //loginToken: "A2VWvjjJ2PM-aNZvP3fng8OmDr6_o2aNFvosMMX7yV7",                                   // 196
                        grant_type: 'authorization_code',                                                              // 197
                        client_id: clientID,                                                                           // 198
                        code: code,                                                                                    // 199
                        client_secret: clientSecret                                                                    // 200
                    }                                                                                                  // 195
                }, function (err, result) {                                                                            // 194
                    console.log("POST RESULT userID:", Meteor.userId(), result, " ERR:", err);                         // 204
                    if (err) {                                                                                         // 205
                        console.log({ message: 'Test failed error.' });                                                // 206
                        BuzzyGlobal.throwError(err);                                                                   // 207
                    } else {                                                                                           // 208
                        var accessToken = result.data.access_token;                                                    // 209
                                                                                                                       //
                        Users.update({ _id: Meteor.userId() }, { $set: { stripeInfo: result.data } });                 // 211
                    }                                                                                                  // 213
                });                                                                                                    // 216
            }                                                                                                          // 217
                                                                                                                       //
            return updateStripeInfo;                                                                                   // 191
        }(),                                                                                                           // 191
        'subscribeUserToPlan': function () {                                                                           // 218
            function subscribeUserToPlan(subscription, token) {                                                        // 218
                var subscriber, receiptEmail, createAndsubscribeResult;                                                // 218
                return _regeneratorRuntime.async(function () {                                                         // 218
                    function subscribeUserToPlan$(_context2) {                                                         // 218
                        while (1) {                                                                                    // 218
                            switch (_context2.prev = _context2.next) {                                                 // 218
                                case 0:                                                                                // 218
                                    if (!(subscription && typeof subscription.userID !== "undefined" && subscription.userID)) {
                                        _context2.next = 10;                                                           // 218
                                        break;                                                                         // 218
                                    }                                                                                  // 218
                                                                                                                       //
                                    subscriber = Users.findOne({ _id: subscription.userID });                          // 224
                                    receiptEmail = BuzzyGlobal.gGetUserEmail(subscriber);                              // 227
                                    _context2.next = 5;                                                                // 218
                                    return _regeneratorRuntime.awrap(Stripe.customers.create({                         // 218
                                        source: token, // obtained with Stripe.js                                      // 230
                                        plan: subscription.plan,                                                       // 231
                                        email: receiptEmail                                                            // 232
                                    }, function (err, customer) {                                                      // 229
                                        // asynchronously called                                                       // 234
                                        console.log("Stripe.customers.create:", err, customer);                        // 235
                                    }));                                                                               // 237
                                                                                                                       //
                                case 5:                                                                                // 218
                                    createAndsubscribeResult = _context2.sent;                                         // 229
                                                                                                                       //
                                    if (createAndsubscribeResult && typeof createAndsubscribeResult.id !== "undefined") {
                                        Users.update({ _id: subscriber._id }, { $set: { stripeCustomerInfo: createAndsubscribeResult } }, function (err) {
                                            console.log(err);                                                          // 240
                                        });                                                                            // 241
                                    }                                                                                  // 242
                                                                                                                       //
                                    return _context2.abrupt('return', createAndsubscribeResult);                       // 218
                                                                                                                       //
                                case 10:                                                                               // 218
                                    BuzzyGlobal.throwError("error making payment");                                    // 246
                                                                                                                       //
                                case 11:                                                                               // 218
                                case 'end':                                                                            // 218
                                    return _context2.stop();                                                           // 218
                            }                                                                                          // 218
                        }                                                                                              // 218
                    }                                                                                                  // 218
                                                                                                                       //
                    return subscribeUserToPlan$;                                                                       // 218
                }(), null, this);                                                                                      // 218
            }                                                                                                          // 218
                                                                                                                       //
            return subscribeUserToPlan;                                                                                // 218
        }(),                                                                                                           // 218
        'removeMemberSubscription': function () {                                                                      // 251
            function removeMemberSubscription(teamID, userID) {                                                        // 251
                var subscriber, currentSubscriptions, user, oldSubscriberPlan, tempSubscription;                       // 251
                return _regeneratorRuntime.async(function () {                                                         // 251
                    function removeMemberSubscription$(_context3) {                                                    // 251
                        while (1) {                                                                                    // 251
                            switch (_context3.prev = _context3.next) {                                                 // 251
                                case 0:                                                                                // 251
                                    if (!(teamID && userID && Teams.isAdmin(Meteor.userId(), teamID))) {               // 251
                                        _context3.next = 28;                                                           // 251
                                        break;                                                                         // 251
                                    }                                                                                  // 251
                                                                                                                       //
                                    subscriber = Teams.findOne({ _id: teamID });                                       // 254
                                                                                                                       //
                                    if (!(subscriber && typeof subscriber.stripeCustomerInfo !== "undefined")) {       // 251
                                        _context3.next = 26;                                                           // 251
                                        break;                                                                         // 251
                                    }                                                                                  // 251
                                                                                                                       //
                                    _context3.next = 5;                                                                // 251
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.list({ customer: subscriber.stripeCustomerInfo.id }, function (err, subscriptions) {
                                        // asynchronously called                                                       // 261
                                    }));                                                                               // 262
                                                                                                                       //
                                case 5:                                                                                // 251
                                    currentSubscriptions = _context3.sent;                                             // 258
                                                                                                                       //
                                    if (currentSubscriptions) {                                                        // 251
                                        _context3.next = 9;                                                            // 251
                                        break;                                                                         // 251
                                    }                                                                                  // 251
                                                                                                                       //
                                    BuzzyGlobal.throwError("Sorry!!!, can't find subscriptions!");                     // 266
                                    return _context3.abrupt('return');                                                 // 251
                                                                                                                       //
                                case 9:                                                                                // 251
                                    user = Users.findOne({ _id: userID });                                             // 270
                                                                                                                       //
                                    if (user) {                                                                        // 251
                                        _context3.next = 13;                                                           // 251
                                        break;                                                                         // 251
                                    }                                                                                  // 251
                                                                                                                       //
                                    BuzzyGlobal.throwError("Error - Cannot find user!!!");                             // 272
                                    return _context3.abrupt('return');                                                 // 251
                                                                                                                       //
                                case 13:                                                                               // 251
                                    _context3.next = 15;                                                               // 251
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.retrieve(user.subscriptionID));
                                                                                                                       //
                                case 15:                                                                               // 251
                                    oldSubscriberPlan = _context3.sent;                                                // 276
                                                                                                                       //
                                                                                                                       //
                                    TeamMembers.remove({ teamID: teamID, userID: userID }, function (error) {          // 278
                                                                                                                       //
                                        if (error) {                                                                   // 280
                                            // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                                            BuzzyGlobal.throwError(error.reason);                                      // 282
                                        }                                                                              // 283
                                    });                                                                                // 284
                                                                                                                       //
                                    if (!BuzzyGlobal.gIsSubScriptionMatch(currentSubscriptions, user.subscriptionID)) {
                                        _context3.next = 24;                                                           // 251
                                        break;                                                                         // 251
                                    }                                                                                  // 251
                                                                                                                       //
                                    if (!(oldSubscriberPlan && oldSubscriberPlan.quantity > 0)) {                      // 251
                                        _context3.next = 24;                                                           // 251
                                        break;                                                                         // 251
                                    }                                                                                  // 251
                                                                                                                       //
                                    _context3.next = 21;                                                               // 251
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.update(oldSubscriberPlan.id, {
                                        quantity: oldSubscriberPlan.quantity - 1                                       // 292
                                    }, function (err, newSubs) {}));                                                   // 291
                                                                                                                       //
                                case 21:                                                                               // 251
                                    tempSubscription = _context3.sent;                                                 // 289
                                                                                                                       //
                                    Users.update({ _id: userID }, { $set: { subscriptionID: null } });                 // 299
                                    ReactiveMethod.invalidateCall("retrieveCustomer", subscriber.stripeCustomerInfo.id, new Date());
                                                                                                                       //
                                case 24:                                                                               // 251
                                    _context3.next = 28;                                                               // 251
                                    break;                                                                             // 251
                                                                                                                       //
                                case 26:                                                                               // 251
                                    BuzzyGlobal.throwError("Sorry!!!, You can't do that.");                            // 308
                                    return _context3.abrupt('return');                                                 // 251
                                                                                                                       //
                                case 28:                                                                               // 251
                                case 'end':                                                                            // 251
                                    return _context3.stop();                                                           // 251
                            }                                                                                          // 251
                        }                                                                                              // 251
                    }                                                                                                  // 251
                                                                                                                       //
                    return removeMemberSubscription$;                                                                  // 251
                }(), null, this);                                                                                      // 251
            }                                                                                                          // 251
                                                                                                                       //
            return removeMemberSubscription;                                                                           // 251
        }(),                                                                                                           // 251
        'updateSingleSubscription': function () {                                                                      // 315
            function updateSingleSubscription(changedMember, country) {                                                // 315
                var _this = this;                                                                                      // 315
                                                                                                                       //
                var subscriber, userToUpdate, userToUpdateOldSubscription, currentSubscriptions, tempSubscription, _tempSubscription, teamInfo, subscriberPlan, newQuantity, createAndsubscribeResult, _tempSubscription3, currentSubscription, _tempSubscription4;
                                                                                                                       //
                return _regeneratorRuntime.async(function () {                                                         // 315
                    function updateSingleSubscription$(_context5) {                                                    // 315
                        while (1) {                                                                                    // 315
                            switch (_context5.prev = _context5.next) {                                                 // 315
                                case 0:                                                                                // 315
                                    if (!changedMember) {                                                              // 315
                                        _context5.next = 79;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    if (Teams.isAdmin(Meteor.userId(), changedMember.teamID)) {                        // 315
                                        _context5.next = 4;                                                            // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    BuzzyGlobal.throwError("Oops!!! You're not allowd to do that!");                   // 319
                                    return _context5.abrupt('return');                                                 // 315
                                                                                                                       //
                                case 4:                                                                                // 315
                                    //addUserToPlan(changedMember.teamID, changedMember.toPlan,changedMember.fromPlan, changedMember.userID, changedMember.source);
                                    subscriber = Teams.findOne({ _id: changedMember.teamID });                         // 323
                                    userToUpdate = Users.findOne({ _id: changedMember.userID });                       // 324
                                                                                                                       //
                                    if (userToUpdate) {                                                                // 315
                                        _context5.next = 9;                                                            // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    BuzzyGlobal.throwError("Error cannot find user!");                                 // 326
                                    return _context5.abrupt('return');                                                 // 315
                                                                                                                       //
                                case 9:                                                                                // 315
                                    if (!(typeof userToUpdate.subscriptionID !== "undefined" && userToUpdate.subscriptionID)) {
                                        _context5.next = 13;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 12;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.retrieve(userToUpdate.subscriptionID));
                                                                                                                       //
                                case 12:                                                                               // 315
                                    userToUpdateOldSubscription = _context5.sent;                                      // 331
                                                                                                                       //
                                case 13:                                                                               // 315
                                    if (!(subscriber && typeof subscriber.stripeCustomerInfo !== "undefined")) {       // 315
                                        _context5.next = 58;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 16;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.list({ customer: subscriber.stripeCustomerInfo.id }, function (err, subscriptions) {
                                        // asynchronously called                                                       // 340
                                        console.log(err, subscriptions);                                               // 341
                                    }));                                                                               // 342
                                                                                                                       //
                                case 16:                                                                               // 315
                                    currentSubscriptions = _context5.sent;                                             // 337
                                                                                                                       //
                                    if (!(currentSubscriptions && changedMember.toPlan === BuzzyGlobal.gPLAN_TYPE.BASIC)) {
                                        _context5.next = 31;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    if (!(userToUpdateOldSubscription && userToUpdateOldSubscription.quantity > 0)) {  // 315
                                        _context5.next = 24;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 21;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.update(userToUpdateOldSubscription.id, {
                                        quantity: userToUpdateOldSubscription.quantity - 1                             // 350
                                    }, function (err, newSubs) {                                                       // 349
                                        console.log(err, newSubs);                                                     // 353
                                    }));                                                                               // 356
                                                                                                                       //
                                case 21:                                                                               // 315
                                    tempSubscription = _context5.sent;                                                 // 347
                                    _context5.next = 28;                                                               // 315
                                    break;                                                                             // 315
                                                                                                                       //
                                case 24:                                                                               // 315
                                    if (!(userToUpdateOldSubscription && userToUpdateOldSubscription.quantity > 0)) {  // 315
                                        _context5.next = 28;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 27;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.update(userToUpdateOldSubscription.id, {
                                        quantity: userToUpdateOldSubscription.quantity - 1                             // 362
                                    }, function (err, newSubs) {                                                       // 361
                                        console.log(err, newSubs);                                                     // 365
                                    }));                                                                               // 368
                                                                                                                       //
                                case 27:                                                                               // 315
                                    _tempSubscription = _context5.sent;                                                // 359
                                                                                                                       //
                                case 28:                                                                               // 315
                                    teamInfo = {                                                                       // 371
                                        teamID: changedMember.teamID,                                                  // 372
                                        userID: changedMember.userID,                                                  // 373
                                        plan: changedMember.toPlan,                                                    // 374
                                        role: BuzzyGlobal.gMEMBER_TYPE.MEMBER // will have to work out if users is already admin
                                    };                                                                                 // 371
                                                                                                                       //
                                    Meteor.call("addTeamMember", teamInfo, function (err, results) {                   // 377
                                        if (!err) {                                                                    // 378
                                            Users.update({ _id: changedMember.userID }, { $set: { subscriptionID: null } });
                                        }                                                                              // 380
                                    });                                                                                // 381
                                    return _context5.abrupt('return');                                                 // 315
                                                                                                                       //
                                case 31:                                                                               // 315
                                    if (currentSubscriptions) {                                                        // 390
                                        subscriberPlan = BuzzyGlobal.gFindSubscription(currentSubscriptions, changedMember.toPlan);
                                    }                                                                                  // 392
                                                                                                                       //
                                    if (!subscriberPlan) {                                                             // 315
                                        _context5.next = 37;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 35;                                                               // 315
                                    return _regeneratorRuntime.awrap(function () {                                     // 315
                                        function _callee() {                                                           // 315
                                            var newSubscription, _tempSubscription2;                                   // 315
                                                                                                                       //
                                            return _regeneratorRuntime.async(function () {                             // 315
                                                function _callee$(_context4) {                                         // 315
                                                    while (1) {                                                        // 315
                                                        switch (_context4.prev = _context4.next) {                     // 315
                                                            case 0:                                                    // 315
                                                                newQuantity = subscriberPlan.quantity + 1;             // 396
                                                                _context4.next = 3;                                    // 315
                                                                return _regeneratorRuntime.awrap(Stripe.subscriptions.update(subscriberPlan.id, {
                                                                    quantity: newQuantity                              // 400
                                                                }, function (err, newSubs) {                           // 399
                                                                    console.log(err, newSubs);                         // 403
                                                                }));                                                   // 405
                                                                                                                       //
                                                            case 3:                                                    // 315
                                                                newSubscription = _context4.sent;                      // 397
                                                                                                                       //
                                                                if (!(newSubscription && changedMember.userID)) {      // 315
                                                                    _context4.next = 13;                               // 315
                                                                    break;                                             // 315
                                                                }                                                      // 315
                                                                                                                       //
                                                                if (!(changedMember.fromPlan !== BuzzyGlobal.gPLAN_TYPE.BASIC)) {
                                                                    _context4.next = 10;                               // 315
                                                                    break;                                             // 315
                                                                }                                                      // 315
                                                                                                                       //
                                                                if (!(userToUpdateOldSubscription && userToUpdateOldSubscription.quantity > 0)) {
                                                                    _context4.next = 10;                               // 315
                                                                    break;                                             // 315
                                                                }                                                      // 315
                                                                                                                       //
                                                                _context4.next = 9;                                    // 315
                                                                return _regeneratorRuntime.awrap(Stripe.subscriptions.update(userToUpdateOldSubscription.id, {
                                                                    quantity: userToUpdateOldSubscription.quantity - 1
                                                                }, function (err, newSubs) {                           // 415
                                                                                                                       //
                                                                    console.log(err, newSubs);                         // 420
                                                                }));                                                   // 423
                                                                                                                       //
                                                            case 9:                                                    // 315
                                                                _tempSubscription2 = _context4.sent;                   // 413
                                                                                                                       //
                                                            case 10:                                                   // 315
                                                                teamInfo = {                                           // 428
                                                                    teamID: changedMember.teamID,                      // 429
                                                                    userID: changedMember.userID,                      // 430
                                                                    plan: changedMember.toPlan,                        // 431
                                                                    role: BuzzyGlobal.gMEMBER_TYPE.MEMBER // will have to work out if users is already admin
                                                                };                                                     // 428
                                                                                                                       //
                                                                Meteor.call("addTeamMember", teamInfo, function (err, results) {
                                                                    if (!err) {                                        // 435
                                                                        Users.update({ _id: changedMember.userID }, { $set: { subscriptionID: newSubscription.id } });
                                                                    }                                                  // 437
                                                                });                                                    // 438
                                                                ReactiveMethod.invalidateCall("retrieveCustomer", subscriberPlan.id, new Date());
                                                                                                                       //
                                                            case 13:                                                   // 315
                                                            case 'end':                                                // 315
                                                                return _context4.stop();                               // 315
                                                        }                                                              // 315
                                                    }                                                                  // 315
                                                }                                                                      // 315
                                                                                                                       //
                                                return _callee$;                                                       // 315
                                            }(), null, _this);                                                         // 315
                                        }                                                                              // 315
                                                                                                                       //
                                        return _callee;                                                                // 315
                                    }()());                                                                            // 315
                                                                                                                       //
                                case 35:                                                                               // 315
                                    _context5.next = 56;                                                               // 315
                                    break;                                                                             // 315
                                                                                                                       //
                                case 37:                                                                               // 315
                                    if (!changedMember.promoCode) {                                                    // 315
                                        _context5.next = 43;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 40;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.create({                     // 315
                                        // SHOUDL THIS HAVE SOURCE - WAS LEFT OUT , WHY NOT??? source: changedMember.source, if so, will need  metadata:{country:country} too
                                        customer: subscriber.stripeCustomerInfo.id,                                    // 448
                                        plan: changedMember.toPlan,                                                    // 449
                                        quantity: 1,                                                                   // 450
                                        coupon: changedMember.promoCode                                                // 451
                                    }, function (err, customer) {                                                      // 446
                                        // asynchronously called                                                       // 453
                                        console.log("Stripe.customers.create:", err, customer);                        // 454
                                    }));                                                                               // 456
                                                                                                                       //
                                case 40:                                                                               // 315
                                    createAndsubscribeResult = _context5.sent;                                         // 446
                                    _context5.next = 46;                                                               // 315
                                    break;                                                                             // 315
                                                                                                                       //
                                case 43:                                                                               // 315
                                    _context5.next = 45;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.create({                     // 315
                                        // SHOUDL THIS HAVE SOURCE - WAS LEFT OUT , WHY NOT??? source: changedMember.source, if so, will need  metadata:{country:country} too
                                        customer: subscriber.stripeCustomerInfo.id,                                    // 460
                                        plan: changedMember.toPlan,                                                    // 461
                                        quantity: 1                                                                    // 462
                                    }, function (err, customer) {                                                      // 458
                                        // asynchronously called                                                       // 464
                                        console.log("Stripe.customers.create:", err, customer);                        // 465
                                    }));                                                                               // 467
                                                                                                                       //
                                case 45:                                                                               // 315
                                    createAndsubscribeResult = _context5.sent;                                         // 458
                                                                                                                       //
                                case 46:                                                                               // 315
                                    if (!(createAndsubscribeResult && typeof createAndsubscribeResult.id !== "undefined")) {
                                        _context5.next = 54;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    if (!(changedMember.fromPlan !== BuzzyGlobal.gPLAN_TYPE.BASIC)) {                  // 315
                                        _context5.next = 52;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    if (!(userToUpdateOldSubscription && userToUpdateOldSubscription.quantity > 0)) {  // 315
                                        _context5.next = 52;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 51;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.update(userToUpdateOldSubscription.id, {
                                        quantity: userToUpdateOldSubscription.quantity - 1                             // 479
                                    }, function (err, newSubs) {                                                       // 478
                                        console.log(err, newSubs);                                                     // 482
                                    }));                                                                               // 484
                                                                                                                       //
                                case 51:                                                                               // 315
                                    _tempSubscription3 = _context5.sent;                                               // 476
                                                                                                                       //
                                case 52:                                                                               // 315
                                    teamInfo = {                                                                       // 490
                                        teamID: changedMember.teamID,                                                  // 491
                                        userID: changedMember.userID,                                                  // 492
                                        plan: changedMember.toPlan,                                                    // 493
                                        role: BuzzyGlobal.gMEMBER_TYPE.MEMBER                                          // 494
                                    };                                                                                 // 490
                                                                                                                       //
                                    Meteor.call("addTeamMember", teamInfo, function (err) {                            // 496
                                        if (!err) {                                                                    // 497
                                            Users.update({ _id: changedMember.userID }, { $set: { subscriptionID: createAndsubscribeResult.id } });
                                        }                                                                              // 499
                                    });                                                                                // 500
                                                                                                                       //
                                case 54:                                                                               // 315
                                    ReactiveMethod.invalidateCall("retrieveCustomer", createAndsubscribeResult.id, new Date());
                                    return _context5.abrupt('return', createAndsubscribeResult);                       // 315
                                                                                                                       //
                                case 56:                                                                               // 315
                                    _context5.next = 79;                                                               // 315
                                    break;                                                                             // 315
                                                                                                                       //
                                case 58:                                                                               // 315
                                    if (!changedMember.promoCode) {                                                    // 315
                                        _context5.next = 64;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 61;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.customers.create({                         // 315
                                        source: changedMember.source, // obtained with Stripe.js                       // 514
                                        plan: changedMember.toPlan,                                                    // 515
                                        quantity: 1,                                                                   // 516
                                        metadata: { country: country },                                                // 517
                                        coupon: changedMember.promoCode                                                // 518
                                    }, function (err, customer) {                                                      // 513
                                        // asynchronously called                                                       // 520
                                        console.log("Stripe.customers.create:", err, customer);                        // 521
                                    }));                                                                               // 523
                                                                                                                       //
                                case 61:                                                                               // 315
                                    createAndsubscribeResult = _context5.sent;                                         // 513
                                    _context5.next = 67;                                                               // 315
                                    break;                                                                             // 315
                                                                                                                       //
                                case 64:                                                                               // 315
                                    _context5.next = 66;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.customers.create({                         // 315
                                        source: changedMember.source, // obtained with Stripe.js                       // 527
                                        plan: changedMember.toPlan,                                                    // 528
                                        quantity: 1,                                                                   // 529
                                        metadata: { country: country }                                                 // 530
                                    }, function (err, customer) {                                                      // 526
                                        // asynchronously called                                                       // 532
                                        console.log("Stripe.customers.create:", err, customer);                        // 533
                                    }));                                                                               // 535
                                                                                                                       //
                                case 66:                                                                               // 315
                                    createAndsubscribeResult = _context5.sent;                                         // 526
                                                                                                                       //
                                case 67:                                                                               // 315
                                    if (!(createAndsubscribeResult && typeof createAndsubscribeResult.id !== "undefined")) {
                                        _context5.next = 77;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    Teams.update({ _id: subscriber._id }, { $set: { stripeCustomerInfo: createAndsubscribeResult } }, function (err) {
                                        console.log(err);                                                              // 542
                                    });                                                                                // 543
                                    currentSubscription = BuzzyGlobal.gFindSubscription(createAndsubscribeResult.subscriptions, changedMember.toPlan);
                                                                                                                       //
                                    if (!(changedMember.fromPlan !== BuzzyGlobal.gPLAN_TYPE.BASIC)) {                  // 315
                                        _context5.next = 75;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    if (!(userToUpdateOldSubscription && userToUpdateOldSubscription.quantity > 0)) {  // 315
                                        _context5.next = 75;                                                           // 315
                                        break;                                                                         // 315
                                    }                                                                                  // 315
                                                                                                                       //
                                    _context5.next = 74;                                                               // 315
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.update(userToUpdateOldSubscription.id, {
                                        quantity: userToUpdateOldSubscription.quantity - 1                             // 551
                                    }, function (err, newSubs) {                                                       // 550
                                        console.log(err, newSubs);                                                     // 554
                                    }));                                                                               // 557
                                                                                                                       //
                                case 74:                                                                               // 315
                                    _tempSubscription4 = _context5.sent;                                               // 548
                                                                                                                       //
                                case 75:                                                                               // 315
                                    teamInfo = {                                                                       // 563
                                        teamID: changedMember.teamID,                                                  // 564
                                        userID: changedMember.userID,                                                  // 565
                                        plan: changedMember.toPlan,                                                    // 566
                                        role: BuzzyGlobal.gMEMBER_TYPE.MEMBER                                          // 567
                                    };                                                                                 // 563
                                                                                                                       //
                                    Meteor.call("addTeamMember", teamInfo, function (err) {                            // 569
                                        if (!err) {                                                                    // 570
                                            Users.update({ _id: changedMember.userID }, { $set: { subscriptionID: currentSubscription.id } });
                                        }                                                                              // 572
                                    });                                                                                // 573
                                                                                                                       //
                                case 77:                                                                               // 315
                                                                                                                       //
                                    ReactiveMethod.invalidateCall("retrieveCustomer", createAndsubscribeResult.id, new Date());
                                    return _context5.abrupt('return', createAndsubscribeResult);                       // 315
                                                                                                                       //
                                case 79:                                                                               // 315
                                case 'end':                                                                            // 315
                                    return _context5.stop();                                                           // 315
                            }                                                                                          // 315
                        }                                                                                              // 315
                    }                                                                                                  // 315
                                                                                                                       //
                    return updateSingleSubscription$;                                                                  // 315
                }(), null, this);                                                                                      // 315
            }                                                                                                          // 315
                                                                                                                       //
            return updateSingleSubscription;                                                                           // 315
        }(),                                                                                                           // 315
        'subscribeTeamToPlan': function () {                                                                           // 582
            function subscribeTeamToPlan(subscription, token, country) {                                               // 582
                var _this2 = this;                                                                                     // 582
                                                                                                                       //
                var subscriber, currentSubscriptions, subscriberPlan, newQuantity, teamInfo, createAndsubscribeResult, currentSubscription;
                return _regeneratorRuntime.async(function () {                                                         // 582
                    function subscribeTeamToPlan$(_context7) {                                                         // 582
                        while (1) {                                                                                    // 582
                            switch (_context7.prev = _context7.next) {                                                 // 582
                                case 0:                                                                                // 582
                                    if (!(subscription && typeof subscription.teamID !== "undefined" && subscription.teamID)) {
                                        _context7.next = 44;                                                           // 582
                                        break;                                                                         // 582
                                    }                                                                                  // 582
                                                                                                                       //
                                    if (Teams.isAdmin(Meteor.userId(), subscription.teamID)) {                         // 582
                                        _context7.next = 4;                                                            // 582
                                        break;                                                                         // 582
                                    }                                                                                  // 582
                                                                                                                       //
                                    BuzzyGlobal.throwError("Oops!!! You're not allowd to do that!");                   // 587
                                    return _context7.abrupt('return');                                                 // 582
                                                                                                                       //
                                case 4:                                                                                // 582
                                    subscriber = Teams.findOne({ _id: subscription.teamID });                          // 590
                                                                                                                       //
                                    if (!(subscriber && typeof subscriber.stripeCustomerInfo !== "undefined")) {       // 582
                                        _context7.next = 30;                                                           // 582
                                        break;                                                                         // 582
                                    }                                                                                  // 582
                                                                                                                       //
                                    _context7.next = 8;                                                                // 582
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.list({ customer: subscriber.stripeCustomerInfo.id }, function (err, subscriptions) {
                                        // asynchronously called                                                       // 598
                                    }));                                                                               // 599
                                                                                                                       //
                                case 8:                                                                                // 582
                                    currentSubscriptions = _context7.sent;                                             // 595
                                                                                                                       //
                                    if (currentSubscriptions) {                                                        // 601
                                        subscriberPlan = BuzzyGlobal.gFindSubscription(currentSubscriptions, subscription.plan);
                                    }                                                                                  // 603
                                    console.log("subscriberPlan", subscriberPlan);                                     // 604
                                                                                                                       //
                                    if (!subscriberPlan) {                                                             // 582
                                        _context7.next = 16;                                                           // 582
                                        break;                                                                         // 582
                                    }                                                                                  // 582
                                                                                                                       //
                                    _context7.next = 14;                                                               // 582
                                    return _regeneratorRuntime.awrap(function () {                                     // 582
                                        function _callee2() {                                                          // 582
                                            var newSubscription;                                                       // 582
                                            return _regeneratorRuntime.async(function () {                             // 582
                                                function _callee2$(_context6) {                                        // 582
                                                    while (1) {                                                        // 582
                                                        switch (_context6.prev = _context6.next) {                     // 582
                                                            case 0:                                                    // 582
                                                                newQuantity = subscriberPlan.quantity + subscription.userIDs.length;
                                                                _context6.next = 3;                                    // 582
                                                                return _regeneratorRuntime.awrap(Stripe.subscriptions.update(subscriberPlan.id, {
                                                                    quantity: newQuantity                              // 610
                                                                }, function (err, newSubs) {}));                       // 609
                                                                                                                       //
                                                            case 3:                                                    // 582
                                                                newSubscription = _context6.sent;                      // 607
                                                                                                                       //
                                                                if (newSubscription && subscription.userIDs) {         // 617
                                                                    for (i in meteorBabelHelpers.sanitizeForInObject(subscription.userIDs)) {
                                                                        teamInfo = {                                   // 619
                                                                            teamID: subscription.teamID,               // 620
                                                                            userID: subscription.userIDs[i],           // 621
                                                                            plan: subscription.plan,                   // 622
                                                                            role: BuzzyGlobal.gMEMBER_TYPE.MEMBER      // 623
                                                                        };                                             // 619
                                                                                                                       //
                                                                        Meteor.call("addTeamMember", teamInfo, function (err) {
                                                                            if (!err) {                                // 626
                                                                                Users.update({ _id: subscription.userIDs[i] }, { $set: { subscriptionID: newSubscription.id } });
                                                                            }                                          // 628
                                                                        });                                            // 629
                                                                    }                                                  // 630
                                                                }                                                      // 631
                                                                                                                       //
                                                            case 5:                                                    // 582
                                                            case 'end':                                                // 582
                                                                return _context6.stop();                               // 582
                                                        }                                                              // 582
                                                    }                                                                  // 582
                                                }                                                                      // 582
                                                                                                                       //
                                                return _callee2$;                                                      // 582
                                            }(), null, _this2);                                                        // 582
                                        }                                                                              // 582
                                                                                                                       //
                                        return _callee2;                                                               // 582
                                    }()());                                                                            // 582
                                                                                                                       //
                                case 14:                                                                               // 582
                                    _context7.next = 28;                                                               // 582
                                    break;                                                                             // 582
                                                                                                                       //
                                case 16:                                                                               // 582
                                    if (!subscription.promoCode) {                                                     // 582
                                        _context7.next = 22;                                                           // 582
                                        break;                                                                         // 582
                                    }                                                                                  // 582
                                                                                                                       //
                                    _context7.next = 19;                                                               // 582
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.create({                     // 582
                                        customer: subscriber.stripeCustomerInfo.id,                                    // 637
                                        plan: subscription.plan,                                                       // 638
                                        quantity: subscription.userIDs.length,                                         // 639
                                        coupon: subscription.promoCode,                                                // 640
                                        metadata: { country: country }                                                 // 641
                                    }, function (err, customer) {                                                      // 636
                                        // asynchronously called                                                       // 643
                                        console.log("Stripe.customers.create:", err, customer);                        // 644
                                        if (customer) {                                                                // 645
                                            createAndsubscribeResult = customer;                                       // 646
                                        }                                                                              // 647
                                    }));                                                                               // 649
                                                                                                                       //
                                case 19:                                                                               // 582
                                    createAndsubscribeResult = _context7.sent;                                         // 636
                                    _context7.next = 25;                                                               // 582
                                    break;                                                                             // 582
                                                                                                                       //
                                case 22:                                                                               // 582
                                    _context7.next = 24;                                                               // 582
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.create({                     // 582
                                        customer: subscriber.stripeCustomerInfo.id,                                    // 652
                                        plan: subscription.plan,                                                       // 653
                                        quantity: subscription.userIDs.length,                                         // 654
                                        metadata: { country: country }                                                 // 655
                                    }, function (err, customer) {                                                      // 651
                                        // asynchronously called                                                       // 657
                                        console.log("Stripe.customers.create:", err, customer);                        // 658
                                        if (customer) {                                                                // 659
                                            createAndsubscribeResult = customer;                                       // 660
                                        }                                                                              // 661
                                    }));                                                                               // 663
                                                                                                                       //
                                case 24:                                                                               // 582
                                    createAndsubscribeResult = _context7.sent;                                         // 651
                                                                                                                       //
                                case 25:                                                                               // 582
                                                                                                                       //
                                    if (createAndsubscribeResult && typeof createAndsubscribeResult.id !== "undefined") {
                                                                                                                       //
                                        if (subscription.userIDs) {                                                    // 668
                                            for (i in meteorBabelHelpers.sanitizeForInObject(subscription.userIDs)) {  // 669
                                                teamInfo = {                                                           // 670
                                                    teamID: subscription.teamID,                                       // 671
                                                    userID: subscription.userIDs[i],                                   // 672
                                                    plan: subscription.plan,                                           // 673
                                                    role: BuzzyGlobal.gMEMBER_TYPE.MEMBER                              // 674
                                                };                                                                     // 670
                                                                                                                       //
                                                Meteor.call("addTeamMember", teamInfo, function (err) {                // 676
                                                    if (!err) {                                                        // 677
                                                        Users.update({ _id: subscription.userIDs[i] }, { $set: { subscriptionID: createAndsubscribeResult.id } });
                                                    }                                                                  // 679
                                                });                                                                    // 680
                                            }                                                                          // 682
                                        }                                                                              // 683
                                    }                                                                                  // 685
                                                                                                                       //
                                    ReactiveMethod.invalidateCall("retrieveCustomer", createAndsubscribeResult.id, new Date());
                                    return _context7.abrupt('return', createAndsubscribeResult);                       // 582
                                                                                                                       //
                                case 28:                                                                               // 582
                                    _context7.next = 42;                                                               // 582
                                    break;                                                                             // 582
                                                                                                                       //
                                case 30:                                                                               // 582
                                    if (!subscription.promoCode) {                                                     // 582
                                        _context7.next = 36;                                                           // 582
                                        break;                                                                         // 582
                                    }                                                                                  // 582
                                                                                                                       //
                                    _context7.next = 33;                                                               // 582
                                    return _regeneratorRuntime.awrap(Stripe.customers.create({                         // 582
                                        source: token, // obtained with Stripe.js                                      // 700
                                        plan: subscription.plan,                                                       // 701
                                        quantity: subscription.userIDs.length,                                         // 702
                                        coupon: subscription.promoCode,                                                // 703
                                        metadata: { country: country }                                                 // 704
                                    }, function (err, customer) {                                                      // 699
                                        // asynchronously called                                                       // 706
                                        console.log("Stripe.customers.create:", err, customer);                        // 707
                                    }));                                                                               // 709
                                                                                                                       //
                                case 33:                                                                               // 582
                                    createAndsubscribeResult = _context7.sent;                                         // 699
                                    _context7.next = 39;                                                               // 582
                                    break;                                                                             // 582
                                                                                                                       //
                                case 36:                                                                               // 582
                                    _context7.next = 38;                                                               // 582
                                    return _regeneratorRuntime.awrap(Stripe.customers.create({                         // 582
                                        source: token, // obtained with Stripe.js                                      // 712
                                        plan: subscription.plan,                                                       // 713
                                        quantity: subscription.userIDs.length,                                         // 714
                                        metadata: { country: country }                                                 // 715
                                    }, function (err, customer) {                                                      // 711
                                        // asynchronously called                                                       // 717
                                        createAndsubscribeResult;                                                      // 718
                                        console.log("Stripe.customers.create:", err, customer);                        // 719
                                    }));                                                                               // 721
                                                                                                                       //
                                case 38:                                                                               // 582
                                    createAndsubscribeResult = _context7.sent;                                         // 711
                                                                                                                       //
                                case 39:                                                                               // 582
                                                                                                                       //
                                    if (createAndsubscribeResult && typeof createAndsubscribeResult.id !== "undefined") {
                                        Teams.update({ _id: subscriber._id }, { $set: { stripeCustomerInfo: createAndsubscribeResult } }, function (err) {
                                            console.log(err);                                                          // 726
                                        });                                                                            // 727
                                        currentSubscription = BuzzyGlobal.gFindSubscription(createAndsubscribeResult.subscriptions, subscription.plan);
                                                                                                                       //
                                        if (subscription.userIDs) {                                                    // 729
                                            for (i in meteorBabelHelpers.sanitizeForInObject(subscription.userIDs)) {  // 730
                                                teamInfo = {                                                           // 731
                                                    teamID: subscription.teamID,                                       // 732
                                                    userID: subscription.userIDs[i],                                   // 733
                                                    plan: subscription.plan,                                           // 734
                                                    role: BuzzyGlobal.gMEMBER_TYPE.MEMBER                              // 735
                                                };                                                                     // 731
                                                                                                                       //
                                                Meteor.call("addTeamMember", teamInfo, function (err) {                // 737
                                                    if (!err) {                                                        // 738
                                                        Users.update({ _id: subscription.userIDs[i] }, { $set: { subscriptionID: currentSubscription.id } });
                                                    }                                                                  // 740
                                                });                                                                    // 741
                                            }                                                                          // 742
                                        }                                                                              // 743
                                    }                                                                                  // 744
                                                                                                                       //
                                    if (createAndsubscribeResult) {                                                    // 746
                                        ReactiveMethod.invalidateCall("retrieveCustomer", createAndsubscribeResult.id, new Date());
                                    }                                                                                  // 748
                                                                                                                       //
                                    return _context7.abrupt('return', createAndsubscribeResult);                       // 582
                                                                                                                       //
                                case 42:                                                                               // 582
                                    _context7.next = 45;                                                               // 582
                                    break;                                                                             // 582
                                                                                                                       //
                                case 44:                                                                               // 582
                                    BuzzyGlobal.throwError("error making payment");                                    // 754
                                                                                                                       //
                                case 45:                                                                               // 582
                                case 'end':                                                                            // 582
                                    return _context7.stop();                                                           // 582
                            }                                                                                          // 582
                        }                                                                                              // 582
                    }                                                                                                  // 582
                                                                                                                       //
                    return subscribeTeamToPlan$;                                                                       // 582
                }(), null, this);                                                                                      // 582
            }                                                                                                          // 582
                                                                                                                       //
            return subscribeTeamToPlan;                                                                                // 582
        }(),                                                                                                           // 582
        'updateCustomerDefaultSource': function () {                                                                   // 759
            function updateCustomerDefaultSource(teamID, token, promoCode, country) {                                  // 759
                var result, team;                                                                                      // 759
                return _regeneratorRuntime.async(function () {                                                         // 759
                    function updateCustomerDefaultSource$(_context8) {                                                 // 759
                        while (1) {                                                                                    // 759
                            switch (_context8.prev = _context8.next) {                                                 // 759
                                case 0:                                                                                // 759
                                    if (Teams.isAdmin(Meteor.userId(), teamID)) {                                      // 759
                                        _context8.next = 3;                                                            // 759
                                        break;                                                                         // 759
                                    }                                                                                  // 759
                                                                                                                       //
                                    BuzzyGlobal.throwError("Oops!!! You're not allowd to do that!");                   // 762
                                    return _context8.abrupt('return');                                                 // 759
                                                                                                                       //
                                case 3:                                                                                // 759
                                    if (!(teamID && token)) {                                                          // 759
                                        _context8.next = 19;                                                           // 759
                                        break;                                                                         // 759
                                    }                                                                                  // 759
                                                                                                                       //
                                    team = Teams.findOne({ _id: teamID });                                             // 768
                                                                                                                       //
                                    if (!(team && typeof team.stripeCustomerInfo !== "undefined")) {                   // 759
                                        _context8.next = 18;                                                           // 759
                                        break;                                                                         // 759
                                    }                                                                                  // 759
                                                                                                                       //
                                    if (!(promoCode && typeof promoCode !== "undefined")) {                            // 759
                                        _context8.next = 12;                                                           // 759
                                        break;                                                                         // 759
                                    }                                                                                  // 759
                                                                                                                       //
                                    _context8.next = 9;                                                                // 759
                                    return _regeneratorRuntime.awrap(Stripe.customers.update(team.stripeCustomerInfo.id, {
                                                                                                                       //
                                        coupon: promoCode,                                                             // 777
                                        source: token,                                                                 // 778
                                        metadata: { country: country }                                                 // 779
                                    }));                                                                               // 775
                                                                                                                       //
                                case 9:                                                                                // 759
                                    result = _context8.sent;                                                           // 773
                                    _context8.next = 15;                                                               // 759
                                    break;                                                                             // 759
                                                                                                                       //
                                case 12:                                                                               // 759
                                    _context8.next = 14;                                                               // 759
                                    return _regeneratorRuntime.awrap(Stripe.customers.update(team.stripeCustomerInfo.id, {
                                                                                                                       //
                                        source: token,                                                                 // 788
                                        metadata: { country: country }                                                 // 789
                                    }));                                                                               // 786
                                                                                                                       //
                                case 14:                                                                               // 759
                                    result = _context8.sent;                                                           // 784
                                                                                                                       //
                                case 15:                                                                               // 759
                                    return _context8.abrupt('return', result);                                         // 759
                                                                                                                       //
                                case 18:                                                                               // 759
                                    return _context8.abrupt('return');                                                 // 759
                                                                                                                       //
                                case 19:                                                                               // 759
                                case 'end':                                                                            // 759
                                    return _context8.stop();                                                           // 759
                            }                                                                                          // 759
                        }                                                                                              // 759
                    }                                                                                                  // 759
                                                                                                                       //
                    return updateCustomerDefaultSource$;                                                               // 759
                }(), null, this);                                                                                      // 759
            }                                                                                                          // 759
                                                                                                                       //
            return updateCustomerDefaultSource;                                                                        // 759
        }(),                                                                                                           // 759
        retrieveCustomer: function () {                                                                                // 803
            function retrieveCustomer(customerID, forceRefresh) {                                                      // 803
                var temp, result;                                                                                      // 803
                return _regeneratorRuntime.async(function () {                                                         // 803
                    function retrieveCustomer$(_context9) {                                                            // 803
                        while (1) {                                                                                    // 803
                            switch (_context9.prev = _context9.next) {                                                 // 803
                                case 0:                                                                                // 803
                                    temp = forceRefresh;                                                               // 804
                                                                                                                       //
                                    if (!customerID) {                                                                 // 803
                                        _context9.next = 6;                                                            // 803
                                        break;                                                                         // 803
                                    }                                                                                  // 803
                                                                                                                       //
                                    _context9.next = 4;                                                                // 803
                                    return _regeneratorRuntime.awrap(Stripe.customers.retrieve(customerID));           // 803
                                                                                                                       //
                                case 4:                                                                                // 803
                                    result = _context9.sent;                                                           // 807
                                    return _context9.abrupt('return', result);                                         // 803
                                                                                                                       //
                                case 6:                                                                                // 803
                                case 'end':                                                                            // 803
                                    return _context9.stop();                                                           // 803
                            }                                                                                          // 803
                        }                                                                                              // 803
                    }                                                                                                  // 803
                                                                                                                       //
                    return retrieveCustomer$;                                                                          // 803
                }(), null, this);                                                                                      // 803
            }                                                                                                          // 803
                                                                                                                       //
            return retrieveCustomer;                                                                                   // 803
        }(),                                                                                                           // 803
        retrieveSubscriptions: function () {                                                                           // 814
            function retrieveSubscriptions(customerID) {                                                               // 814
                var result;                                                                                            // 814
                return _regeneratorRuntime.async(function () {                                                         // 814
                    function retrieveSubscriptions$(_context10) {                                                      // 814
                        while (1) {                                                                                    // 814
                            switch (_context10.prev = _context10.next) {                                               // 814
                                case 0:                                                                                // 814
                                    if (!customerID) {                                                                 // 814
                                        _context10.next = 5;                                                           // 814
                                        break;                                                                         // 814
                                    }                                                                                  // 814
                                                                                                                       //
                                    _context10.next = 3;                                                               // 814
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.list({ customer: customerID }));
                                                                                                                       //
                                case 3:                                                                                // 814
                                    result = _context10.sent;                                                          // 818
                                    return _context10.abrupt('return', result);                                        // 814
                                                                                                                       //
                                case 5:                                                                                // 814
                                case 'end':                                                                            // 814
                                    return _context10.stop();                                                          // 814
                            }                                                                                          // 814
                        }                                                                                              // 814
                    }                                                                                                  // 814
                                                                                                                       //
                    return retrieveSubscriptions$;                                                                     // 814
                }(), null, this);                                                                                      // 814
            }                                                                                                          // 814
                                                                                                                       //
            return retrieveSubscriptions;                                                                              // 814
        }(),                                                                                                           // 814
        retrieveSingleSubscription: function () {                                                                      // 825
            function retrieveSingleSubscription(subscriptionID) {                                                      // 825
                var result;                                                                                            // 825
                return _regeneratorRuntime.async(function () {                                                         // 825
                    function retrieveSingleSubscription$(_context11) {                                                 // 825
                        while (1) {                                                                                    // 825
                            switch (_context11.prev = _context11.next) {                                               // 825
                                case 0:                                                                                // 825
                                    if (!subscriptionID) {                                                             // 825
                                        _context11.next = 5;                                                           // 825
                                        break;                                                                         // 825
                                    }                                                                                  // 825
                                                                                                                       //
                                    _context11.next = 3;                                                               // 825
                                    return _regeneratorRuntime.awrap(Stripe.subscriptions.retrieve(subscriptionID));   // 825
                                                                                                                       //
                                case 3:                                                                                // 825
                                    result = _context11.sent;                                                          // 829
                                    return _context11.abrupt('return', result);                                        // 825
                                                                                                                       //
                                case 5:                                                                                // 825
                                case 'end':                                                                            // 825
                                    return _context11.stop();                                                          // 825
                            }                                                                                          // 825
                        }                                                                                              // 825
                    }                                                                                                  // 825
                                                                                                                       //
                    return retrieveSingleSubscription$;                                                                // 825
                }(), null, this);                                                                                      // 825
            }                                                                                                          // 825
                                                                                                                       //
            return retrieveSingleSubscription;                                                                         // 825
        }(),                                                                                                           // 825
        listPlans: function () {                                                                                       // 834
            function listPlans() {                                                                                     // 834
                var result;                                                                                            // 834
                return _regeneratorRuntime.async(function () {                                                         // 834
                    function listPlans$(_context12) {                                                                  // 834
                        while (1) {                                                                                    // 834
                            switch (_context12.prev = _context12.next) {                                               // 834
                                case 0:                                                                                // 834
                                    _context12.next = 2;                                                               // 834
                                    return _regeneratorRuntime.awrap(Stripe.plans.list());                             // 834
                                                                                                                       //
                                case 2:                                                                                // 834
                                    result = _context12.sent;                                                          // 837
                                    return _context12.abrupt('return', result);                                        // 834
                                                                                                                       //
                                case 4:                                                                                // 834
                                case 'end':                                                                            // 834
                                    return _context12.stop();                                                          // 834
                            }                                                                                          // 834
                        }                                                                                              // 834
                    }                                                                                                  // 834
                                                                                                                       //
                    return listPlans$;                                                                                 // 834
                }(), null, this);                                                                                      // 834
            }                                                                                                          // 834
                                                                                                                       //
            return listPlans;                                                                                          // 834
        }(),                                                                                                           // 834
        listInvoices: function () {                                                                                    // 841
            function listInvoices(teamID, limit) {                                                                     // 841
                var result, team;                                                                                      // 841
                return _regeneratorRuntime.async(function () {                                                         // 841
                    function listInvoices$(_context13) {                                                               // 841
                        while (1) {                                                                                    // 841
                            switch (_context13.prev = _context13.next) {                                               // 841
                                case 0:                                                                                // 841
                                    if (Teams.isAdmin(Meteor.userId(), teamID)) {                                      // 841
                                        _context13.next = 3;                                                           // 841
                                        break;                                                                         // 841
                                    }                                                                                  // 841
                                                                                                                       //
                                    BuzzyGlobal.throwError("Oops!!! You're not allowd to do that!");                   // 844
                                    return _context13.abrupt('return');                                                // 841
                                                                                                                       //
                                case 3:                                                                                // 841
                                    if (!teamID) {                                                                     // 841
                                        _context13.next = 13;                                                          // 841
                                        break;                                                                         // 841
                                    }                                                                                  // 841
                                                                                                                       //
                                    team = Teams.findOne({ _id: teamID });                                             // 850
                                                                                                                       //
                                    if (!(team && typeof team.stripeCustomerInfo !== "undefined")) {                   // 841
                                        _context13.next = 12;                                                          // 841
                                        break;                                                                         // 841
                                    }                                                                                  // 841
                                                                                                                       //
                                    _context13.next = 8;                                                               // 841
                                    return _regeneratorRuntime.awrap(Stripe.invoices.list({                            // 841
                                        customer: team.stripeCustomerInfo.id,                                          // 856
                                        limit: limit                                                                   // 857
                                    }));                                                                               // 855
                                                                                                                       //
                                case 8:                                                                                // 841
                                    result = _context13.sent;                                                          // 854
                                    return _context13.abrupt('return', result);                                        // 841
                                                                                                                       //
                                case 12:                                                                               // 841
                                    return _context13.abrupt('return');                                                // 841
                                                                                                                       //
                                case 13:                                                                               // 841
                                case 'end':                                                                            // 841
                                    return _context13.stop();                                                          // 841
                            }                                                                                          // 841
                        }                                                                                              // 841
                    }                                                                                                  // 841
                                                                                                                       //
                    return listInvoices$;                                                                              // 841
                }(), null, this);                                                                                      // 841
            }                                                                                                          // 841
                                                                                                                       //
            return listInvoices;                                                                                       // 841
        }(),                                                                                                           // 841
        listUpcomingInvoices: function () {                                                                            // 868
            function listUpcomingInvoices(teamID, subsID) {                                                            // 868
                var result, team;                                                                                      // 868
                return _regeneratorRuntime.async(function () {                                                         // 868
                    function listUpcomingInvoices$(_context14) {                                                       // 868
                        while (1) {                                                                                    // 868
                            switch (_context14.prev = _context14.next) {                                               // 868
                                case 0:                                                                                // 868
                                    if (Teams.isAdmin(Meteor.userId(), teamID)) {                                      // 868
                                        _context14.next = 3;                                                           // 868
                                        break;                                                                         // 868
                                    }                                                                                  // 868
                                                                                                                       //
                                    BuzzyGlobal.throwError("Oops!!! You're not allowd to do that!");                   // 870
                                    return _context14.abrupt('return');                                                // 868
                                                                                                                       //
                                case 3:                                                                                // 868
                                    if (!teamID) {                                                                     // 868
                                        _context14.next = 14;                                                          // 868
                                        break;                                                                         // 868
                                    }                                                                                  // 868
                                                                                                                       //
                                    team = Teams.findOne({ _id: teamID });                                             // 875
                                                                                                                       //
                                    if (!(team && typeof team.stripeCustomerInfo !== "undefined")) {                   // 868
                                        _context14.next = 13;                                                          // 868
                                        break;                                                                         // 868
                                    }                                                                                  // 868
                                                                                                                       //
                                    _context14.next = 8;                                                               // 868
                                    return _regeneratorRuntime.awrap(Stripe.invoices.retrieveUpcoming(team.stripeCustomerInfo.id, {
                                                                                                                       //
                                        subscription: subsID                                                           // 881
                                                                                                                       //
                                    }));                                                                               // 879
                                                                                                                       //
                                case 8:                                                                                // 868
                                    result = _context14.sent;                                                          // 879
                                                                                                                       //
                                    console.log("UPCOMING:", result);                                                  // 885
                                    return _context14.abrupt('return', result);                                        // 868
                                                                                                                       //
                                case 13:                                                                               // 868
                                    return _context14.abrupt('return');                                                // 868
                                                                                                                       //
                                case 14:                                                                               // 868
                                case 'end':                                                                            // 868
                                    return _context14.stop();                                                          // 868
                            }                                                                                          // 868
                        }                                                                                              // 868
                    }                                                                                                  // 868
                                                                                                                       //
                    return listUpcomingInvoices$;                                                                      // 868
                }(), null, this);                                                                                      // 868
            }                                                                                                          // 868
                                                                                                                       //
            return listUpcomingInvoices;                                                                               // 868
        }(),                                                                                                           // 868
        retrieveCharge: function () {                                                                                  // 893
            function retrieveCharge(chargeID, forceRefresh) {                                                          // 893
                var temp, result;                                                                                      // 893
                return _regeneratorRuntime.async(function () {                                                         // 893
                    function retrieveCharge$(_context15) {                                                             // 893
                        while (1) {                                                                                    // 893
                            switch (_context15.prev = _context15.next) {                                               // 893
                                case 0:                                                                                // 893
                                    temp = forceRefresh;                                                               // 894
                                                                                                                       //
                                    if (!chargeID) {                                                                   // 893
                                        _context15.next = 6;                                                           // 893
                                        break;                                                                         // 893
                                    }                                                                                  // 893
                                                                                                                       //
                                    _context15.next = 4;                                                               // 893
                                    return _regeneratorRuntime.awrap(Stripe.charges.retrieve(chargeID));               // 893
                                                                                                                       //
                                case 4:                                                                                // 893
                                    result = _context15.sent;                                                          // 897
                                    return _context15.abrupt('return', result);                                        // 893
                                                                                                                       //
                                case 6:                                                                                // 893
                                case 'end':                                                                            // 893
                                    return _context15.stop();                                                          // 893
                            }                                                                                          // 893
                        }                                                                                              // 893
                    }                                                                                                  // 893
                                                                                                                       //
                    return retrieveCharge$;                                                                            // 893
                }(), null, this);                                                                                      // 893
            }                                                                                                          // 893
                                                                                                                       //
            return retrieveCharge;                                                                                     // 893
        }()                                                                                                            // 893
                                                                                                                       //
    });                                                                                                                // 76
}                                                                                                                      // 907
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"twitter.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/twitter.js                                                                                           //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 23/02/2017.                                                                              //
 */                                                                                                                    //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"userContacts.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/userContacts.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 26/02/2015.                                                                              //
 */                                                                                                                    //
if (Meteor.isServer) {                                                                                                 // 4
    Meteor.methods({                                                                                                   // 5
        searchContactsTeam: function () {                                                                              // 6
            function searchContactsTeam(searchText, teamID) {                                                          // 6
                                                                                                                       //
                var filter = new RegExp(searchText, 'i');                                                              // 8
                                                                                                                       //
                var excludeContacts = TeamMembers.find({ teamID: teamID }).map(function (member) {                     // 11
                    return member.userID;                                                                              // 12
                });                                                                                                    // 14
                var userContactsIDs = UserContacts.find({ $and: [{ userID: Meteor.userId() }, { $or: [{ name: filter }, { email: filter }] }, { contactID: { $nin: excludeContacts } }] }, { sort: { name: 1 }, limit: 20 }).map(function (contact) {
                    return contact.contactID;                                                                          // 23
                });                                                                                                    // 24
                                                                                                                       //
                var participantsWithNames = [];                                                                        // 26
                var currentUsersArray = Users.find({ _id: { $in: userContactsIDs } }).map(function (user) {            // 27
                    return { _id: user._id, name: BuzzyGlobal.gGetUserName(user), email: BuzzyGlobal.gGetUserEmail(user) };
                });                                                                                                    // 29
                                                                                                                       //
                return currentUsersArray;                                                                              // 31
            }                                                                                                          // 33
                                                                                                                       //
            return searchContactsTeam;                                                                                 // 6
        }()                                                                                                            // 6
                                                                                                                       //
    });                                                                                                                // 5
}                                                                                                                      // 41
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"video_upload.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/video_upload.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 2/05/15.                                                                                 //
 */                                                                                                                    //
                                                                                                                       //
/**                                                                                                                    // 5
 * Helper for implementing retries with backoff. Initial retry                                                         //
 * delay is 1 second, increasing by 2x (+jitter) for subsequent retries                                                //
 *                                                                                                                     //
 * @constructor                                                                                                        //
 */                                                                                                                    //
var RetryHandler = function RetryHandler() {                                                                           // 11
    this.interval = 1000; // Start at one second                                                                       // 12
    this.maxInterval = 60 * 1000; // Don't wait longer than a minute                                                   // 13
};                                                                                                                     // 14
                                                                                                                       //
/**                                                                                                                    // 16
 * Invoke the function after waiting                                                                                   //
 *                                                                                                                     //
 * @param {function} fn Function to invoke                                                                             //
 */                                                                                                                    //
RetryHandler.prototype.retry = function (fn) {                                                                         // 21
    setTimeout(fn, this.interval);                                                                                     // 22
    this.interval = this.nextInterval_();                                                                              // 23
};                                                                                                                     // 24
                                                                                                                       //
/**                                                                                                                    // 26
 * Reset the counter (e.g. after successful request.)                                                                  //
 */                                                                                                                    //
RetryHandler.prototype.reset = function () {                                                                           // 29
    this.interval = 1000;                                                                                              // 30
};                                                                                                                     // 31
                                                                                                                       //
/**                                                                                                                    // 33
 * Calculate the next wait time.                                                                                       //
 * @return {number} Next wait interval, in milliseconds                                                                //
 *                                                                                                                     //
 * @private                                                                                                            //
 */                                                                                                                    //
RetryHandler.prototype.nextInterval_ = function () {                                                                   // 39
    var interval = this.interval * 2 + this.getRandomInt_(0, 1000);                                                    // 40
    return Math.min(interval, this.maxInterval);                                                                       // 41
};                                                                                                                     // 42
                                                                                                                       //
/**                                                                                                                    // 44
 * Get a random int in the range of min to max. Used to add jitter to wait times.                                      //
 *                                                                                                                     //
 * @param {number} min Lower bounds                                                                                    //
 * @param {number} max Upper bounds                                                                                    //
 * @private                                                                                                            //
 */                                                                                                                    //
RetryHandler.prototype.getRandomInt_ = function (min, max) {                                                           // 51
    return Math.floor(Math.random() * (max - min + 1) + min);                                                          // 52
};                                                                                                                     // 53
                                                                                                                       //
/**                                                                                                                    // 56
 * Helper class for resumable uploads using XHR/CORS. Can upload any Blob-like item, whether                           //
 * files or in-memory constructs.                                                                                      //
 *                                                                                                                     //
 * @example                                                                                                            //
 * var content = new Blob(["Hello world"], {"type": "text/plain"});                                                    //
 * var uploader = new MediaUploader({                                                                                  //
 *   file: content,                                                                                                    //
 *   token: accessToken,                                                                                               //
 *   onComplete: function(data) { ... }                                                                                //
 *   onError: function(data) { ... }                                                                                   //
 * });                                                                                                                 //
 * uploader.upload();                                                                                                  //
 *                                                                                                                     //
 * @constructor                                                                                                        //
 * @param {object} options Hash of options                                                                             //
 * @param {string} options.token Access token                                                                          //
 * @param {blob} options.file Blob-like item to upload                                                                 //
 * @param {string} [options.fileId] ID of file if replacing                                                            //
 * @param {object} [options.params] Additional query parameters                                                        //
 * @param {string} [options.contentType] Content-type, if overriding the type of the blob.                             //
 * @param {object} [options.metadata] File metadata                                                                    //
 * @param {function} [options.onComplete] Callback for when upload is complete                                         //
 * @param {function} [options.onProgress] Callback for status for the in-progress upload                               //
 * @param {function} [options.onError] Callback if upload fails                                                        //
 */                                                                                                                    //
var MediaUploader = function MediaUploader(options) {                                                                  // 82
    var noop = function noop() {};                                                                                     // 83
    this.file = options.file;                                                                                          // 84
    this.contentType = options.contentType || this.file.type || 'application/octet-stream';                            // 85
    this.metadata = options.metadata || {                                                                              // 86
        'title': this.file.name,                                                                                       // 87
        'mimeType': this.contentType                                                                                   // 88
    };                                                                                                                 // 86
    this.token = options.token;                                                                                        // 90
    this.upgrade_to_1080 = options.upgrade_to_1080;                                                                    // 91
    this.onComplete = options.onComplete || noop;                                                                      // 92
    this.onProgress = options.onProgress || noop;                                                                      // 93
    this.onError = options.onError || noop;                                                                            // 94
    this.offset = options.offset || 0;                                                                                 // 95
    this.chunkSize = options.chunkSize || 0;                                                                           // 96
    this.retryHandler = new RetryHandler();                                                                            // 97
                                                                                                                       //
    this.url = options.url;                                                                                            // 99
                                                                                                                       //
    if (!this.url) {                                                                                                   // 101
        var params = options.params || {};                                                                             // 102
        // params.uploadType = 'resumable';                                                                            // 103
        this.url = this.buildUrl_(options.fileId, params, options.baseUrl);                                            // 104
    }                                                                                                                  // 105
                                                                                                                       //
    this.httpMethod = options.fileId ? 'PUT' : 'POST';                                                                 // 107
};                                                                                                                     // 108
                                                                                                                       //
/**                                                                                                                    // 110
 * Initiate the upload (Get vimeo ticket number and upload url)                                                        //
 */                                                                                                                    //
MediaUploader.prototype.upload = function () {                                                                         // 113
    var self = this;                                                                                                   // 114
    var xhr = new XMLHttpRequest();                                                                                    // 115
    var upgrade_to_1080 = this.upgrade_to_1080 == 'yes' ? true : false;                                                // 116
                                                                                                                       //
    xhr.open(this.httpMethod, this.url, true);                                                                         // 118
    xhr.setRequestHeader('Authorization', 'Bearer ' + this.token);                                                     // 119
    xhr.setRequestHeader('Content-Type', 'application/json');                                                          // 120
                                                                                                                       //
    xhr.onload = function (e) {                                                                                        // 122
        // get vimeo upload  url, user (for available quote), ticket id and complete url                               // 123
        if (e.target.status < 400) {                                                                                   // 124
            var response = JSON.parse(e.target.responseText);                                                          // 125
            this.url = response.upload_link_secure;                                                                    // 126
            this.user = response.user;                                                                                 // 127
            this.ticket_id = response.ticket_id;                                                                       // 128
            this.complete_url = "https://api.vimeo.com" + response.complete_uri;                                       // 129
            this.sendFile_();                                                                                          // 130
        } else {                                                                                                       // 131
            this.onUploadError_(e);                                                                                    // 132
        }                                                                                                              // 133
    }.bind(this);                                                                                                      // 134
                                                                                                                       //
    xhr.onerror = this.onUploadError_.bind(this);                                                                      // 136
    xhr.send(JSON.stringify({                                                                                          // 137
        type: 'streaming',                                                                                             // 138
        upgrade_to_1080: upgrade_to_1080                                                                               // 139
    }));                                                                                                               // 137
};                                                                                                                     // 142
                                                                                                                       //
/**                                                                                                                    // 144
 * Send the actual file content.                                                                                       //
 *                                                                                                                     //
 * @private                                                                                                            //
 */                                                                                                                    //
MediaUploader.prototype.sendFile_ = function () {                                                                      // 149
    var content = this.file;                                                                                           // 150
    var end = this.file.size;                                                                                          // 151
                                                                                                                       //
    if (this.offset || this.chunkSize) {                                                                               // 153
        // Only bother to slice the file if we're either resuming or uploading in chunks                               // 154
        if (this.chunkSize) {                                                                                          // 155
            end = Math.min(this.offset + this.chunkSize, this.file.size);                                              // 156
        }                                                                                                              // 157
        content = content.slice(this.offset, end);                                                                     // 158
    }                                                                                                                  // 159
                                                                                                                       //
    var xhr = new XMLHttpRequest();                                                                                    // 161
    xhr.open('PUT', this.url, true);                                                                                   // 162
    xhr.setRequestHeader('Content-Type', this.contentType);                                                            // 163
    // xhr.setRequestHeader('Content-Length', this.file.size);                                                         // 164
    xhr.setRequestHeader('Content-Range', "bytes " + this.offset + "-" + (end - 1) + "/" + this.file.size);            // 165
                                                                                                                       //
    if (xhr.upload) {                                                                                                  // 167
        xhr.upload.addEventListener('progress', this.onProgress);                                                      // 168
    }                                                                                                                  // 169
    xhr.onload = this.onContentUploadSuccess_.bind(this);                                                              // 170
    xhr.onerror = this.onContentUploadError_.bind(this);                                                               // 171
    xhr.send(content);                                                                                                 // 172
};                                                                                                                     // 173
                                                                                                                       //
/**                                                                                                                    // 175
 * Query for the state of the file for resumption.                                                                     //
 *                                                                                                                     //
 * @private                                                                                                            //
 */                                                                                                                    //
MediaUploader.prototype.resume_ = function () {                                                                        // 180
    var xhr = new XMLHttpRequest();                                                                                    // 181
    xhr.open('PUT', this.url, true);                                                                                   // 182
    xhr.setRequestHeader('Content-Range', "bytes */" + this.file.size);                                                // 183
    xhr.setRequestHeader('X-Upload-Content-Type', this.file.type);                                                     // 184
    if (xhr.upload) {                                                                                                  // 185
        xhr.upload.addEventListener('progress', this.onProgress);                                                      // 186
    }                                                                                                                  // 187
    xhr.onload = this.onContentUploadSuccess_.bind(this);                                                              // 188
    xhr.onerror = this.onContentUploadError_.bind(this);                                                               // 189
    xhr.send();                                                                                                        // 190
};                                                                                                                     // 191
                                                                                                                       //
/**                                                                                                                    // 193
 * Extract the last saved range if available in the request.                                                           //
 *                                                                                                                     //
 * @param {XMLHttpRequest} xhr Request object                                                                          //
 */                                                                                                                    //
MediaUploader.prototype.extractRange_ = function (xhr) {                                                               // 198
    var range = xhr.getResponseHeader('Range');                                                                        // 199
    if (range) {                                                                                                       // 200
        this.offset = parseInt(range.match(/\d+/g).pop(), 10) + 1;                                                     // 201
    }                                                                                                                  // 202
};                                                                                                                     // 203
                                                                                                                       //
/**                                                                                                                    // 205
 * The final step is to call vimeo.videos.upload.complete to queue up                                                  //
 * the video for transcoding.                                                                                          //
 *                                                                                                                     //
 * If successful call 'onComplete'                                                                                     //
 *                                                                                                                     //
 * @private                                                                                                            //
 */                                                                                                                    //
MediaUploader.prototype.complete_ = function () {                                                                      // 213
                                                                                                                       //
    var xhr = new XMLHttpRequest();                                                                                    // 215
    xhr.open('DELETE', this.complete_url, true);                                                                       // 216
    xhr.setRequestHeader('Authorization', 'Bearer ' + this.token);                                                     // 217
                                                                                                                       //
    xhr.onload = function (e) {                                                                                        // 219
                                                                                                                       //
        // Get the video location (videoId)                                                                            // 221
        if (e.target.status < 400) {                                                                                   // 222
                                                                                                                       //
            var location = e.target.getResponseHeader('Location');                                                     // 224
                                                                                                                       //
            // Example of location: ' /videos/115365719', extract the video id only                                    // 226
            var video_id = location.split('/').pop();                                                                  // 227
                                                                                                                       //
            this.onComplete(video_id);                                                                                 // 229
        } else {                                                                                                       // 231
            this.onCompleteError_(e);                                                                                  // 232
        }                                                                                                              // 233
    }.bind(this);                                                                                                      // 234
                                                                                                                       //
    xhr.onerror = this.onCompleteError_.bind(this);                                                                    // 236
    xhr.send();                                                                                                        // 237
};                                                                                                                     // 238
                                                                                                                       //
/**                                                                                                                    // 240
 * Handle successful responses for uploads. Depending on the context,                                                  //
 * may continue with uploading the next chunk of the file or, if complete,                                             //
 * invokes vimeo complete service.                                                                                     //
 *                                                                                                                     //
 * @private                                                                                                            //
 * @param {object} e XHR event                                                                                         //
 */                                                                                                                    //
MediaUploader.prototype.onContentUploadSuccess_ = function (e) {                                                       // 248
                                                                                                                       //
    if (e.target.status == 200 || e.target.status == 201) {                                                            // 250
                                                                                                                       //
        this.complete_();                                                                                              // 252
    } else if (e.target.status == 308) {                                                                               // 254
        this.extractRange_(e.target);                                                                                  // 255
        this.retryHandler.reset();                                                                                     // 256
        this.sendFile_();                                                                                              // 257
    }                                                                                                                  // 258
};                                                                                                                     // 260
                                                                                                                       //
/**                                                                                                                    // 262
 * Handles errors for uploads. Either retries or aborts depending                                                      //
 * on the error.                                                                                                       //
 *                                                                                                                     //
 * @private                                                                                                            //
 * @param {object} e XHR event                                                                                         //
 */                                                                                                                    //
MediaUploader.prototype.onContentUploadError_ = function (e) {                                                         // 269
    if (e.target.status && e.target.status < 500) {                                                                    // 270
        this.onError(e.target.response);                                                                               // 271
    } else {                                                                                                           // 272
        this.retryHandler.retry(this.resume_.bind(this));                                                              // 273
    }                                                                                                                  // 274
};                                                                                                                     // 275
                                                                                                                       //
/**                                                                                                                    // 277
 * Handles errors for the complete request.                                                                            //
 *                                                                                                                     //
 * @private                                                                                                            //
 * @param {object} e XHR event                                                                                         //
 */                                                                                                                    //
MediaUploader.prototype.onCompleteError_ = function (e) {                                                              // 283
    this.onError(e.target.response); // TODO - Retries for initial upload                                              // 284
};                                                                                                                     // 285
                                                                                                                       //
/**                                                                                                                    // 287
 * Handles errors for the initial request.                                                                             //
 *                                                                                                                     //
 * @private                                                                                                            //
 * @param {object} e XHR event                                                                                         //
 */                                                                                                                    //
MediaUploader.prototype.onUploadError_ = function (e) {                                                                // 293
    this.onError(e.target.response); // TODO - Retries for initial upload                                              // 294
};                                                                                                                     // 295
                                                                                                                       //
/**                                                                                                                    // 297
 * Construct a query string from a hash/object                                                                         //
 *                                                                                                                     //
 * @private                                                                                                            //
 * @param {object} [params] Key/value pairs for query string                                                           //
 * @return {string} query string                                                                                       //
 */                                                                                                                    //
MediaUploader.prototype.buildQuery_ = function (params) {                                                              // 304
    params = params || {};                                                                                             // 305
    return Object.keys(params).map(function (key) {                                                                    // 306
        return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);                                        // 307
    }).join('&');                                                                                                      // 308
};                                                                                                                     // 309
                                                                                                                       //
/**                                                                                                                    // 311
 * Build the drive upload URL                                                                                          //
 *                                                                                                                     //
 * @private                                                                                                            //
 * @param {string} [id] File ID if replacing                                                                           //
 * @param {object} [params] Query parameters                                                                           //
 * @return {string} URL                                                                                                //
 */                                                                                                                    //
MediaUploader.prototype.buildUrl_ = function (id, params, baseUrl) {                                                   // 319
    var url = baseUrl || 'https://api.vimeo.com/me/videos';                                                            // 320
    if (id) {                                                                                                          // 321
        url += id;                                                                                                     // 322
    }                                                                                                                  // 323
    var query = this.buildQuery_(params);                                                                              // 324
    if (query) {                                                                                                       // 325
        url += '?' + query;                                                                                            // 326
    }                                                                                                                  // 327
    return url;                                                                                                        // 328
};                                                                                                                     // 329
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"vimeo_server.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/vimeo_server.js                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 8/01/2015.                                                                               //
 */                                                                                                                    //
//var Vimeo = Meteor.require('vimeo-api');                                                                             // 4
/*var Vimeo = Meteor.npmRequire('vimeo-api').Vimeo;                                                                    // 5
                                                                                                                       //
Meteor.methods({                                                                                                       //
    uploadVimeo: function(){                                                                                           //
        var lib = new Vimeo("ff4a731a3c8fb25c0bc8850dc16465f3574752c8", "38dd1e054f60db676a05058cc7340363f2efb955", "e7202be2d68871133e9cff8ad89a72df");
                                                                                                                       //
                                                                                                                       //
        var scopes = ["public","private","purchased","create","edit","delete","interact","upload"];                    //
        var state = Random.id();                                                                                       //
        var redirect_uri = "http://localhost:3000/_oauth/vimeo"                                                        //
        var url = lib.buildAuthorizationEndpoint(redirect_uri, scopes, state);                                         //
        console.log("vimeo url",url);                                                                                  //
                                                                                                                       //
        lib.request("/me",                                                                                             //
            function (err, response)                                                                                   //
            {                                                                                                          //
                console.log("/me",err); console.log("/me",response);                                                   //
            });                                                                                                        //
                                                                                                                       //
    }                                                                                                                  //
});                                                                                                                    //
                                                                                                                       //
Meteor.startup(function(){                                                                                             //
    Meteor.call("uploadVimeo");                                                                                        //
})*/                                                                                                                   //
                                                                                                                       //
/*var state = Random.id();                                                                                             // 31
var redirect_uri = "http://localhost:3000/_oauth/vimeo"                                                                //
var url = lib.buildAuthorizationEndpoint(redirect_uri, scopes, state);                                                 //
console.log("vimeo url",url);*/                                                                                        //
                                                                                                                       //
/*HTTP.call("GET", "https://api.vimeo.com/me",                                                                         // 37
    {headers:{Authorization : "bearer "+ vimeoAccessToken}},                                                           //
                                                                                                                       //
    function (error, result) {                                                                                         //
        if (!error) {                                                                                                  //
            console.log(result);                                                                                       //
        } else {                                                                                                       //
            console.log("error:" , error)                                                                              //
        }                                                                                                              //
    });                                                                                                                //
                                                                                                                       //
HTTP.call("POST", "https://api.vimeo.com/me/videos",                                                                   //
    {headers:{Authorization : "bearer "+ vimeoAccessToken}},                                                           //
                                                                                                                       //
    function (error, result) {                                                                                         //
        if (!error) {                                                                                                  //
            console.log("result.uri:", result.content.uri);                                                            //
        } else {                                                                                                       //
            console.log("error:" , error)                                                                              //
        }                                                                                                              //
    });*/                                                                                                              //
                                                                                                                       //
/*lib.streamingUpload('/Users/adamginsburg/Movies/Copter.m4v',  function (error, body, status_code, headers) {         // 59
    if (error) {                                                                                                       //
        console.log("streamingUploadError:", error);                                                                   //
                                                                                                                       //
                                                                                                                       //
        throw new Meteor.Error("Vimeo Upload Error", error);                                                           //
    } else {                                                                                                           //
        console.log(body)                                                                                              //
        console.log(status_code)                                                                                       //
                                                                                                                       //
        lib.request(headers.location, function (error, body, status_code, headers) {                                   //
            console.log(body);                                                                                         //
        });                                                                                                            //
    }                                                                                                                  //
                                                                                                                       //
                                                                                                                       //
});*/                                                                                                                  //
                                                                                                                       //
/*                                                                                                                     // 78
 HTTP.call("POST", url,                                                                                                //
                                                                                                                       //
 function (error, result) {                                                                                            //
 if (!error) {                                                                                                         //
 console.log(result);                                                                                                  //
 } else {                                                                                                              //
 console.log(error)                                                                                                    //
 }                                                                                                                     //
 });                                                                                                                   //
 */ /*                                                                                                                 //
    HTTP.call("POST", url,                                                                                             //
     {header:{Authorization : "Authorization: bearer "+ vimeoAccessToken}},                                            //
      function (error, result) {                                                                                       //
         if (!error) {                                                                                                 //
             console.log(result);                                                                                      //
         } else {                                                                                                      //
             console.log(error)                                                                                        //
         }                                                                                                             //
     });                                                                                                               //
    console.log( "ABOUT TO CALL /me 1 *************************");                                                     //
    *                                                                                                                  //
    });*/ /*                                                                                                           //
          */ /*lib.request(*/ /**/ /*options*/ /**/ /*{                                                                //
                                                    // This is the path for the videos contained within the staff picks channels
                                                    path : '/channels/staffpicks/videos',                              //
                                                    // This adds the parameters to request page two, and 10 items per page
                                                    query : {                                                          //
                                                    page : 2,                                                          //
                                                    per_page : 10                                                      //
                                                    },                                                                 //
                                                    headers: {Authorization : "Basic ZmY0YTczMWEzYzhmYjI1YzBiYzg4NTBkYzE2NDY1ZjM1NzQ3NTJjODozOGRkMWUwNTRmNjBkYjY3NmEwNTA1OGNjNzM0MDM2M2YyZWZiOTU1"}
                                                    }, */ /**/ /*callback*/ /**/ /*function (error, body, status_code, headers) {
                                                                                 if (error) {                          //
                                                                                 console.log('error');                 //
                                                                                 console.log(error);                   //
                                                                                 } else {                              //
                                                                                 console.log('body');                  //
                                                                                 console.log(body);                    //
                                                                                 }                                     //
                                                                                 console.log('status code');           //
                                                                                 console.log(status_code);             //
                                                                                 console.log('headers');               //
                                                                                 console.log(headers);                 //
                                                                                 });*/                                 //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"watson.js":["fibers","watson-developer-cloud/conversation/v1","watson-developer-cloud/personality-insights/v3",function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/methods/watson.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 18/02/2017.                                                                              //
 */                                                                                                                    //
var Fiber = require('fibers');                                                                                         // 4
var ConversationV1 = require('watson-developer-cloud/conversation/v1');                                                // 5
                                                                                                                       //
var MAX_TWEETS = 200;                                                                                                  // 8
                                                                                                                       //
Meteor.methods({                                                                                                       // 10
    setPersonalityInsights: function () {                                                                              // 11
        function setPersonalityInsights(microAppField, topResourceID, appID, fieldID) {                                // 11
            var PersonalityInsightsV3 = require('watson-developer-cloud/personality-insights/v3');                     // 12
                                                                                                                       //
            var microAppResource = Resources.findOne({ _id: microAppField.parentResourceID });                         // 16
            if (microAppResource && Resources.canEdit(Meteor.userId(), microAppResource) && microAppResource.watsonCreds) {
                                                                                                                       //
                var personalityInsightsCreds = _.find(microAppResource.watsonCreds, function (creds) {                 // 19
                    return creds.watsonType === BuzzyGlobal.gWATSON_SERVICE_TYPES.PERSONALITY_INSIGHTS;                // 20
                });                                                                                                    // 21
                if (personalityInsightsCreds) {                                                                        // 22
                    var personality_insights = new PersonalityInsightsV3({                                             // 23
                        username: personalityInsightsCreds.watsonUserID,                                               // 24
                        password: personalityInsightsCreds.watsonPassword,                                             // 25
                        version_date: '2016-10-19'                                                                     // 26
                    });                                                                                                // 23
                                                                                                                       //
                    var microAppDataItem = MicroAppData.findOne({ _id: appID });                                       // 29
                                                                                                                       //
                    var collectedText = MicroAppFields.find({ parentResourceID: microAppDataItem.parentResourceID }).map(function (currentField) {
                                                                                                                       //
                        if (currentField.option && currentField.option.isWatsonPersonality) {                          // 35
                            var currFieldItem = MicroAppData.currentDataItemField(microAppDataItem, currentField._id);
                            if (currFieldItem && currFieldItem.value) {                                                // 37
                                switch (currentField.fieldType) {                                                      // 38
                                    case BuzzyGlobal.gAPPFIELDTYPE.TWITTER_FEED:                                       // 39
                                        return currFieldItem.value.cachedData;                                         // 40
                                    default:                                                                           // 41
                                        return currFieldItem.value;                                                    // 42
                                }                                                                                      // 38
                            }                                                                                          // 45
                        }                                                                                              // 47
                    });                                                                                                // 48
                                                                                                                       //
                    var getPersonalityInsights = Meteor.wrapAsync(personality_insights.profile, personality_insights);
                                                                                                                       //
                    try {                                                                                              // 52
                        var personalityProfile = getPersonalityInsights({ text: _.compact(collectedText), consumption_preferences: true });
                        //console.log(JSON.stringify(personalityProfile, null, 2));                                    // 54
                        Meteor.call("updateMicroAppData", microAppField.parentResourceID, topResourceID, appID, fieldID, {
                                                                                                                       //
                            personalityProfile: personalityProfile                                                     // 59
                        });                                                                                            // 57
                        //return personalityProfile;                                                                   // 61
                    } catch (error) {                                                                                  // 63
                        throw new Meteor.Error(error.name, error.message);                                             // 64
                    }                                                                                                  // 65
                }                                                                                                      // 67
            } else {                                                                                                   // 72
                BuzzyGlobal.throwError("Sorry, you don't have permission to do that.");                                // 73
            }                                                                                                          // 74
        }                                                                                                              // 80
                                                                                                                       //
        return setPersonalityInsights;                                                                                 // 11
    }(),                                                                                                               // 11
    sendCommentToWatson: function () {                                                                                 // 81
        function sendCommentToWatson(comment) {                                                                        // 81
            check(comment, Object);                                                                                    // 82
            var sendToWatson = function () {                                                                           // 83
                function sendToWatson(message, creds, senderUserID, context) {                                         // 83
                    try {                                                                                              // 84
                        var conversation = new ConversationV1({                                                        // 85
                            "username": creds.watsonUserID,                                                            // 86
                            "password": creds.watsonPassword,                                                          // 87
                            version_date: ConversationV1.VERSION_DATE_2017_02_03                                       // 88
                        });                                                                                            // 85
                    } catch (err) {                                                                                    // 90
                        console.log("Issue creating Watson conversation " + err);                                      // 91
                        Meteor.setTimeout(function () {                                                                // 92
                            BuzzyGlobal.throwError("Issue sending Watson message " + err);                             // 93
                        }, 0);                                                                                         // 94
                    }                                                                                                  // 96
                    if (conversation) {                                                                                // 97
                        try {                                                                                          // 98
                            conversation.message({                                                                     // 99
                                input: { text: message },                                                              // 100
                                context: context,                                                                      // 101
                                workspace_id: creds.watsonWorkspaceID                                                  // 102
                            }, function (err, response) {                                                              // 99
                                if (err) {                                                                             // 104
                                    console.error(err);                                                                // 105
                                } else {                                                                               // 106
                                    console.log(JSON.stringify(response, null, 2));                                    // 107
                                    var responseComment = {                                                            // 108
                                                                                                                       //
                                        resourceParentID: comment.resourceParentID,                                    // 110
                                        topLevelParentID: comment.topLevelParentID,                                    // 111
                                        toUsers: comment.toUsers,                                                      // 112
                                        watsonContext: typeof response.context === "undefined" ? null : response.context
                                    };                                                                                 // 108
                                                                                                                       //
                                    if (response.output.text) {                                                        // 116
                                        var flattenedText = response.output.text.toString();                           // 117
                                        if (flattenedText) {                                                           // 118
                                            responseComment.message = flattenedText;                                   // 119
                                                                                                                       //
                                            var truncatedText = flattenedText.substring(0, BuzzyGlobal.gTRUNCATE_COMMENT_TEXT); //assume not HTML for now
                                            var optCommentExtraContent, optMeteorUserID, optCommentID;                 // 123
                                            Fiber(function () {                                                        // 124
                                                try {                                                                  // 125
                                                    Meteor.call("addComment", responseComment, responseComment.topLevelParentID, truncatedText, truncatedText, optCommentExtraContent, senderUserID, optCommentID); // this needs to change to use a token , not userID
                                                } catch (err) {                                                        // 127
                                                    console.log("Issue posting Watson comment " + err);                // 128
                                                    BuzzyGlobal.throwError("Issue sending Watson message " + err);     // 129
                                                }                                                                      // 131
                                            }).run();                                                                  // 133
                                        } else {                                                                       // 134
                                            Fiber(function () {                                                        // 135
                                                try {                                                                  // 136
                                                    responseComment.message = "Ugh... sorry I can't answer that. Can you please rephrase the question";
                                                    Meteor.call("addComment", responseComment, responseComment.topLevelParentID, "Ugh, sorry I can't answer that.", "Ugh, sorry I can't answer that.", optCommentExtraContent, senderUserID, optCommentID);
                                                } catch (err) {                                                        // 139
                                                    console.log("Issue posting Watson comment " + err);                // 140
                                                    Meteor.setTimeout(function () {                                    // 141
                                                        BuzzyGlobal.throwError("Issue sending Watson message " + err);
                                                    }, 0);                                                             // 143
                                                }                                                                      // 145
                                            }).run();                                                                  // 146
                                        }                                                                              // 147
                                    };                                                                                 // 149
                                }                                                                                      // 153
                            });                                                                                        // 154
                        } catch (err) {                                                                                // 156
                            console.log("Issue sending Watson message " + err);                                        // 157
                            BuzzyGlobal.throwError("Issue sending Watson message " + err);                             // 158
                        }                                                                                              // 160
                    }                                                                                                  // 162
                }                                                                                                      // 163
                                                                                                                       //
                return sendToWatson;                                                                                   // 83
            }();                                                                                                       // 83
                                                                                                                       //
            console.log("SEND TO WATSON", comment);                                                                    // 165
            if (comment.toUsers && comment.toUsers !== null && comment.toUsers.length > 0) {                           // 166
                console.log("WATSON COMMENT", comment);                                                                // 167
                var firstBotUser = Users.findOne({ $and: [{ _id: { $in: comment.toUsers } }, { watsonCreds: { $exists: true } }] });
                if (Users.isBot(firstBotUser) && comment.userID !== firstBotUser._id) {                                // 172
                                                                                                                       //
                    for (j in meteorBabelHelpers.sanitizeForInObject(firstBotUser.watsonCreds)) {                      // 174
                        sendToWatson(comment.message, firstBotUser.watsonCreds[j], firstBotUser._id, comment.watsonContext); // need to add context for watson message
                    }                                                                                                  // 176
                }                                                                                                      // 177
            }                                                                                                          // 179
        }                                                                                                              // 180
                                                                                                                       //
        return sendCommentToWatson;                                                                                    // 81
    }()                                                                                                                // 81
});                                                                                                                    // 10
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}]},"a_server_routines.js":["html-truncate","fibers/future",function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/a_server_routines.js                                                                                         //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 5/06/2014.                                                                               //
 */                                                                                                                    //
                                                                                                                       //
//var cheerio = Npm.require('cheerio');                                                                                // 5
truncate = require('html-truncate');                                                                                   // 6
Future = require('fibers/future');                                                                                     // 7
var MAX_TWEETS = 200;                                                                                                  // 8
                                                                                                                       //
// /truncate = Meteor.npmRequire('html-truncate');                                                                     // 11
                                                                                                                       //
                                                                                                                       //
var insertExternalData = function insertExternalData(data) {                                                           // 15
    ExternalData.insert(data, function (error) {                                                                       // 16
        console.log("inserting ExternalData");                                                                         // 17
                                                                                                                       //
        if (error) {                                                                                                   // 19
            // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
            throw new Meteor.Error(422, error.reason);                                                                 // 21
        } else {                                                                                                       // 22
                                                                                                                       //
            return true;                                                                                               // 24
        }                                                                                                              // 26
    });                                                                                                                // 27
};                                                                                                                     // 28
                                                                                                                       //
Meteor.methods({                                                                                                       // 32
                                                                                                                       //
    gGetTweets: function () {                                                                                          // 37
        function gGetTweets(searchQuery) {                                                                             // 37
            var Fiber = Npm.require('fibers');                                                                         // 38
                                                                                                                       //
            Twit = new TwitMaker({                                                                                     // 42
                consumer_key: 'JQzLHQ0hneUJ7bHeSC2hnmYZF',                                                             // 43
                consumer_secret: 'JKSlAKxZTx1z33Xau8b6ACEUU1UwX7dIIajxrzXLPSkPRVs7f8',                                 // 44
                access_token: '2473311780-yENrSpDLbtYud7jTWJqsai1bOu5AjEtW0A0kuf2',                                    // 45
                access_token_secret: 'K1hCkgOatvFXiN8j5KpejJxwLOQyfQkF3I1s7HbCBZwCy'                                   // 46
            });                                                                                                        // 42
                                                                                                                       //
            var userID = Meteor.userId();                                                                              // 49
                                                                                                                       //
            Twit.get('search/tweets', { q: searchQuery, count: 5 }, function (err, data, response) {                   // 51
                console.log("err:" + err);                                                                             // 52
                console.log(_.pairs(data.statuses));                                                                   // 53
                                                                                                                       //
                Fiber(function () {                                                                                    // 55
                    for (i in meteorBabelHelpers.sanitizeForInObject(data.statuses)) {                                 // 56
                        console.log("i:" + i + " status:" + data.statuses[i].metadata + " user:" + data.statuses[i].user);
                        newExternalData = {                                                                            // 58
                            _id: new Meteor.Collection.ObjectID()._str,                                                // 59
                            userID: userID,                                                                            // 60
                            content: {                                                                                 // 61
                                text: data.statuses[i].text,                                                           // 62
                                twitter_id: data.statuses[i].str_id,                                                   // 63
                                user: data.statuses[i].user,                                                           // 64
                                created_at: data.statuses[i].created_at                                                // 65
                                                                                                                       //
                            },                                                                                         // 61
                            type: BuzzyGlobal.gBASICTYPES.TWITTER,                                                     // 68
                                                                                                                       //
                            submitted: new Date().getTime(),                                                           // 70
                            updated: new Date().getTime()                                                              // 71
                        };                                                                                             // 58
                                                                                                                       //
                        ExternalData.insert(newExternalData);                                                          // 75
                    }                                                                                                  // 79
                }).run();                                                                                              // 80
            });                                                                                                        // 81
        }                                                                                                              // 84
                                                                                                                       //
        return gGetTweets;                                                                                             // 37
    }(),                                                                                                               // 37
    getUserTweetsAsText: function () {                                                                                 // 85
        function getUserTweetsAsText(twitterHandle) {                                                                  // 85
            var Twit = new TwitMaker({                                                                                 // 86
                consumer_key: 'JQzLHQ0hneUJ7bHeSC2hnmYZF',                                                             // 87
                consumer_secret: 'JKSlAKxZTx1z33Xau8b6ACEUU1UwX7dIIajxrzXLPSkPRVs7f8',                                 // 88
                access_token: '2473311780-yENrSpDLbtYud7jTWJqsai1bOu5AjEtW0A0kuf2',                                    // 89
                access_token_secret: 'K1hCkgOatvFXiN8j5KpejJxwLOQyfQkF3I1s7HbCBZwCy'                                   // 90
            });                                                                                                        // 86
                                                                                                                       //
            var getTweets = Meteor.wrapAsync(Twit.get, Twit);                                                          // 93
                                                                                                                       //
            try {                                                                                                      // 95
                var tweets = getTweets('statuses/user_timeline', { screen_name: twitterHandle, count: MAX_TWEETS, exclude_replies: true, trim_user: true });
                var twitterText = '';                                                                                  // 97
                tweets.forEach(function (tweet) {                                                                      // 98
                    if (!tweet.in_reply_to_status_id) {                                                                // 99
                        twitterText = twitterText + tweet.text + '. ';                                                 // 100
                    }                                                                                                  // 101
                });                                                                                                    // 103
                return twitterText;                                                                                    // 104
            } catch (error) {                                                                                          // 105
                throw new Meteor.Error(error.name, error.message);                                                     // 106
            }                                                                                                          // 107
        }                                                                                                              // 111
                                                                                                                       //
        return getUserTweetsAsText;                                                                                    // 85
    }(),                                                                                                               // 85
    gGetURLMetaData: function () {                                                                                     // 112
        function gGetURLMetaData(tempID, url) {                                                                        // 112
            console.log("url:" + url);                                                                                 // 113
                                                                                                                       //
            if (url && typeof url !== "undefined" && url.indexOf("facebook.com") >= 0) {                               // 116
                newExternalData = {                                                                                    // 117
                    _id: tempID,                                                                                       // 118
                    userID: Meteor.userId(),                                                                           // 119
                    content: {                                                                                         // 120
                                                                                                                       //
                        embedType: 'facebook',                                                                         // 122
                        url: url                                                                                       // 123
                    },                                                                                                 // 120
                    submitted: new Date().getTime(),                                                                   // 125
                    updated: new Date().getTime(),                                                                     // 126
                    type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                                        // 127
                };                                                                                                     // 117
                insertExternalData(newExternalData);                                                                   // 129
            } else {                                                                                                   // 130
                Meteor.http.get(url, function (error, result) {                                                        // 131
                                                                                                                       //
                    var title = "Enter title";                                                                         // 135
                    var description = "Enter description";                                                             // 136
                    var imageIURL = "";                                                                                // 137
                                                                                                                       //
                    if (!error) {                                                                                      // 139
                        console.log("statusCode:" + result.statusCode);                                                // 140
                        //console.log(" URL results: " + _.pairs(result));                                             // 141
                        //console.log("content: " + result.content);                                                   // 142
                        //console.log("data: " + result.data);                                                         // 143
                        //console.log(_.pairs(result));                                                                // 144
                        var $;                                                                                         // 145
                        if (result.content) {                                                                          // 146
                                                                                                                       //
                            $ = cheerio.load(result.content);                                                          // 148
                        } else if (result.data) {                                                                      // 149
                                                                                                                       //
                            $ = cheerio.load(result.data);                                                             // 151
                        } else {                                                                                       // 152
                                                                                                                       //
                            throw new Meteor.Error(422, "Can't find OG data");                                         // 154
                        }                                                                                              // 155
                                                                                                                       //
                        var canonicalLink = $('link[rel="canonical"]').attr("href");                                   // 157
                        console.log("canonical: " + canonicalLink);                                                    // 158
                                                                                                                       //
                        if (canonicalLink && canonicalLink === url || !canonicalLink || canonicalLink.indexOf("http://") === -1 && canonicalLink.indexOf("https://") === -1) {
                            var newExternalData = {};                                                                  // 161
                                                                                                                       //
                            var oembedURL = $('link[type="application/json+oembed"]').attr('href');                    // 163
                            if (oembedURL) {                                                                           // 164
                                                                                                                       //
                                Meteor.http.get(oembedURL, function (error, result) {                                  // 166
                                    if (!error) {                                                                      // 168
                                        //console.log("oembed data: " + _.pairs(result.data));                         // 169
                                        //console.log("oembed content: " + content.data);                              // 170
                                        newExternalData = {                                                            // 171
                                            _id: tempID,                                                               // 172
                                            userID: Meteor.userId(),                                                   // 173
                                            content: {                                                                 // 174
                                                embedType: 'oembed',                                                   // 175
                                                data: result.data,                                                     // 176
                                                style: 'resourceExternal1',                                            // 177
                                                originalLink: url                                                      // 178
                                            },                                                                         // 174
                                                                                                                       //
                                            submitted: new Date().getTime(),                                           // 181
                                            updated: new Date().getTime(),                                             // 182
                                            type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                // 183
                                                                                                                       //
                                        };                                                                             // 171
                                        insertExternalData(newExternalData);                                           // 186
                                    }                                                                                  // 187
                                });                                                                                    // 189
                            } else if ($('meta[property="og:url"]').attr('content')) {                                 // 192
                                                                                                                       //
                                newExternalData = {                                                                    // 194
                                    _id: tempID,                                                                       // 195
                                    userID: Meteor.userId(),                                                           // 196
                                    content: {                                                                         // 197
                                                                                                                       //
                                        embedType: 'og',                                                               // 199
                                        url: $('meta[property="og:url"]').attr('content'),                             // 200
                                        title: $('meta[property="og:title"]').attr('content'),                         // 201
                                        type: $('meta[property="og:type"]').attr('content'),                           // 202
                                        description: $('meta[property="og:description"]').attr('content'),             // 203
                                        image: $('meta[property="og:image"]').attr('content'),                         // 204
                                        audio: $('meta[property="og:audio"]').attr('content'),                         // 205
                                        site_name: $('meta[property="og:site_name"]').attr('content'),                 // 206
                                        video: $('meta[property="og:video"]').attr('content'),                         // 207
                                        style: 'resourceExternal1',                                                    // 208
                                        originalLink: url                                                              // 209
                                    },                                                                                 // 197
                                    submitted: new Date().getTime(),                                                   // 211
                                    updated: new Date().getTime(),                                                     // 212
                                    type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                        // 213
                                };                                                                                     // 194
                                insertExternalData(newExternalData);                                                   // 215
                            } else {                                                                                   // 217
                                console.log("here 3");                                                                 // 218
                                                                                                                       //
                                console.log($('meta[name="description"]').attr('content'));                            // 220
                                                                                                                       //
                                var tDescription = $('meta[name="description"]').attr('content');                      // 222
                                                                                                                       //
                                var tTitle = $('meta[name="title"]').attr('content');                                  // 224
                                if (tDescription) {                                                                    // 225
                                    description = tDescription;                                                        // 226
                                }                                                                                      // 228
                                if (tTitle) {                                                                          // 229
                                    title = tTitle;                                                                    // 230
                                } else {                                                                               // 232
                                    if ($('title').text()) {                                                           // 233
                                        title = $('title').text();                                                     // 234
                                    }                                                                                  // 235
                                }                                                                                      // 236
                                                                                                                       //
                                if ($('body').find('img').eq(0).attr('src')) {                                         // 238
                                    imageURL = $('body').find('img').eq(0).attr('src');                                // 239
                                }                                                                                      // 240
                                newExternalData = {                                                                    // 241
                                    _id: tempID,                                                                       // 242
                                    userID: Meteor.userId(),                                                           // 243
                                    content: {                                                                         // 244
                                                                                                                       //
                                        embedType: 'basic',                                                            // 246
                                        url: url,                                                                      // 247
                                        title: title,                                                                  // 248
                                        description: description,                                                      // 249
                                        image: imageURL,                                                               // 250
                                        originalLink: url                                                              // 251
                                                                                                                       //
                                    },                                                                                 // 244
                                    submitted: new Date().getTime(),                                                   // 254
                                    updated: new Date().getTime(),                                                     // 255
                                    type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                        // 256
                                };                                                                                     // 241
                                insertExternalData(newExternalData);                                                   // 258
                            }                                                                                          // 260
                        } else {                                                                                       // 262
                            Meteor.call('gGetURLMetaData', tempID, canonicalLink); // should put a counter here so no infinite loops
                        }                                                                                              // 265
                    } else {                                                                                           // 271
                        throw new Meteor.Error(500, "Embed call Call failed:" + error);                                // 272
                    }                                                                                                  // 273
                });                                                                                                    // 274
            }                                                                                                          // 275
        }                                                                                                              // 278
                                                                                                                       //
        return gGetURLMetaData;                                                                                        // 112
    }(),                                                                                                               // 112
                                                                                                                       //
    gGetURLMetaData2: function () {                                                                                    // 280
        function gGetURLMetaData2(url) {                                                                               // 280
                                                                                                                       //
            var future = new Future();                                                                                 // 282
                                                                                                                       //
            if (url && typeof url !== "undefined" && url.indexOf("facebook.com") >= 0) {                               // 284
                newExternalData = {                                                                                    // 285
                    content: {                                                                                         // 286
                                                                                                                       //
                        embedType: 'facebook',                                                                         // 288
                        url: url                                                                                       // 289
                    },                                                                                                 // 286
                    type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                                        // 291
                };                                                                                                     // 285
                future['return'](newExternalData);                                                                     // 293
            } else {                                                                                                   // 294
                Meteor.http.get(url, function (error, result) {                                                        // 295
                                                                                                                       //
                    var title = "Enter title";                                                                         // 299
                    var description = "Enter description";                                                             // 300
                    var imageIURL = "";                                                                                // 301
                                                                                                                       //
                    if (!error) {                                                                                      // 303
                        var $;                                                                                         // 304
                        if (result.content) {                                                                          // 305
                                                                                                                       //
                            $ = cheerio.load(result.content);                                                          // 307
                        } else if (result.data) {                                                                      // 308
                                                                                                                       //
                            $ = cheerio.load(result.data);                                                             // 310
                        } else {                                                                                       // 311
                                                                                                                       //
                            throw new Meteor.Error(422, "Can't find OG data");                                         // 313
                        }                                                                                              // 314
                                                                                                                       //
                        var canonicalLink = $('link[rel="canonical"]').attr("href");                                   // 316
                        if (canonicalLink && canonicalLink === url || !canonicalLink || canonicalLink.indexOf("http://") === -1 && canonicalLink.indexOf("https://") === -1) {
                            var newExternalData = {};                                                                  // 318
                                                                                                                       //
                            var oembedURL = $('link[type="application/json+oembed"]').attr('href');                    // 320
                            if (oembedURL) {                                                                           // 321
                                                                                                                       //
                                Meteor.http.get(oembedURL, function (error, result) {                                  // 323
                                    if (!error) {                                                                      // 325
                                        //console.log("oembed data: " + _.pairs(result.data));                         // 326
                                        //console.log("oembed content: " + content.data);                              // 327
                                        newExternalData = {                                                            // 328
                                            content: {                                                                 // 329
                                                embedType: 'oembed',                                                   // 330
                                                data: result.data,                                                     // 331
                                                style: 'resourceExternal1',                                            // 332
                                                originalLink: url                                                      // 333
                                            },                                                                         // 329
                                            type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                // 335
                                                                                                                       //
                                        };                                                                             // 328
                                        future['return'](newExternalData);                                             // 338
                                    }                                                                                  // 339
                                });                                                                                    // 341
                            } else if ($('meta[property="og:url"]').attr('content')) {                                 // 344
                                                                                                                       //
                                newExternalData = {                                                                    // 346
                                    content: {                                                                         // 347
                                                                                                                       //
                                        embedType: 'og',                                                               // 349
                                        url: $('meta[property="og:url"]').attr('content'),                             // 350
                                        title: $('meta[property="og:title"]').attr('content'),                         // 351
                                        type: $('meta[property="og:type"]').attr('content'),                           // 352
                                        description: $('meta[property="og:description"]').attr('content'),             // 353
                                        image: $('meta[property="og:image"]').attr('content'),                         // 354
                                        audio: $('meta[property="og:audio"]').attr('content'),                         // 355
                                        site_name: $('meta[property="og:site_name"]').attr('content'),                 // 356
                                        video: $('meta[property="og:video"]').attr('content'),                         // 357
                                        style: 'resourceExternal1',                                                    // 358
                                        originalLink: url                                                              // 359
                                    },                                                                                 // 347
                                    type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                        // 361
                                };                                                                                     // 346
                                future['return'](newExternalData);                                                     // 363
                            } else {                                                                                   // 365
                                                                                                                       //
                                var tDescription = $('meta[name="description"]').attr('content');                      // 367
                                                                                                                       //
                                var tTitle = $('meta[name="title"]').attr('content');                                  // 369
                                if (tDescription) {                                                                    // 370
                                    description = tDescription;                                                        // 371
                                }                                                                                      // 373
                                if (tTitle) {                                                                          // 374
                                    title = tTitle;                                                                    // 375
                                } else {                                                                               // 377
                                    if ($('title').text()) {                                                           // 378
                                        title = $('title').text();                                                     // 379
                                    }                                                                                  // 380
                                }                                                                                      // 381
                                                                                                                       //
                                if ($('body').find('img').eq(0).attr('src')) {                                         // 383
                                    imageURL = $('body').find('img').eq(0).attr('src');                                // 384
                                }                                                                                      // 385
                                newExternalData = {                                                                    // 386
                                    content: {                                                                         // 387
                                                                                                                       //
                                        embedType: 'basic',                                                            // 389
                                        url: url,                                                                      // 390
                                        title: title,                                                                  // 391
                                        description: description,                                                      // 392
                                        image: imageURL,                                                               // 393
                                        originalLink: url                                                              // 394
                                                                                                                       //
                                    },                                                                                 // 387
                                    type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK                                        // 397
                                };                                                                                     // 386
                                future['return'](newExternalData);                                                     // 399
                            }                                                                                          // 401
                        } else {                                                                                       // 403
                            Meteor.call('gGetURLMetaData', tempID, canonicalLink); // should put a counter here so no infinite loops
                        }                                                                                              // 405
                    } else {                                                                                           // 407
                        throw BuzzyGlobal.throwError(error);                                                           // 408
                        future['return'](error);                                                                       // 409
                    }                                                                                                  // 410
                });                                                                                                    // 411
            }                                                                                                          // 412
            return future.wait();                                                                                      // 413
        }                                                                                                              // 416
                                                                                                                       //
        return gGetURLMetaData2;                                                                                       // 280
    }(),                                                                                                               // 280
                                                                                                                       //
    markResourceAndChildrenDeleted: function () {                                                                      // 418
        function markResourceAndChildrenDeleted(currentResourceID) {                                                   // 418
                                                                                                                       //
            var user = Meteor.user();                                                                                  // 420
            if (!user) throw new Meteor.Error(401, "You need to login to delete resources");                           // 421
            var searchExpression = new RegExp(',' + currentResourceID + ',');                                          // 423
            console.log("about to remove children:" + searchExpression);                                               // 424
            //Resources.remove({path:{$regex: searchExpression}});                                                     // 425
                                                                                                                       //
            if (!currentResourceID) {                                                                                  // 427
                throw new Meteor.Error(401, "Invalid Resource ID");                                                    // 428
            }                                                                                                          // 429
                                                                                                                       //
            var resource = Resources.findOne({ _id: currentResourceID });                                              // 431
                                                                                                                       //
            if (resource.type === BuzzyGlobal.gBASICTYPES.BUZZ && !Resources.ownsDocument(user._id, resource)) {       // 433
                BuzzyGlobal.throwError("Only owner can delete a buzz");                                                // 434
            }                                                                                                          // 435
                                                                                                                       //
            if (resource.type !== BuzzyGlobal.gBASICTYPES.BUZZ && !Resources.canEdit(user._id, resource)) {            // 437
                BuzzyGlobal.throwError("Insuffienct Rights to Delete content");                                        // 438
            }                                                                                                          // 439
                                                                                                                       //
            Resources.update({ path: { $regex: searchExpression } }, { $set: { status: 'deleted' } }, { multi: true }, function (error) {
                if (error) {                                                                                           // 445
                    // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                    throw new Meteor.Error(422, error.reason);                                                         // 447
                } else {                                                                                               // 448
                    console.log("Deleted child resources");                                                            // 449
                }                                                                                                      // 450
            });                                                                                                        // 451
            Resources.update({ _id: currentResourceID }, { $set: { status: 'deleted' } }, function (error) {           // 452
                if (error) {                                                                                           // 453
                    // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                    throw new Meteor.Error(422, error.reason);                                                         // 455
                } else {                                                                                               // 456
                    console.log("Deleted resource:" + currentResourceID);                                              // 457
                }                                                                                                      // 458
            });                                                                                                        // 459
            return;                                                                                                    // 460
        }                                                                                                              // 463
                                                                                                                       //
        return markResourceAndChildrenDeleted;                                                                         // 418
    }(),                                                                                                               // 418
                                                                                                                       //
    updateResourceAndChildren: function () {                                                                           // 466
        function updateResourceAndChildren(resourceID, fieldName, newValue) {                                          // 466
                                                                                                                       //
            var user = Meteor.user();                                                                                  // 468
            if (!user) {                                                                                               // 469
                throw new Meteor.Error(401, "You need to login to delete resources");                                  // 470
            }                                                                                                          // 471
                                                                                                                       //
            var obj = {};                                                                                              // 474
            obj[fieldName] = newValue;                                                                                 // 475
            obj['updated'] = new Date().getTime();                                                                     // 476
                                                                                                                       //
            var searchExpression = new RegExp(',' + resourceID + ',');                                                 // 478
            console.log("about to update children:" + searchExpression);                                               // 479
            //Resources.remove({path:{$regex: searchExpression}});                                                     // 480
                                                                                                                       //
            //should probably add some code later to check that user has right permissions to delete (ie isOwner)      // 482
            var resource = Resources.findOne({ _id: resourceID });                                                     // 483
                                                                                                                       //
            if (resource && Resources.canEdit(user._id, resource)) {                                                   // 485
                Resources.update({ $and: [{ $or: [{ status: 'published' }, { status: 'draft' }] }, { $or: [{ _id: resourceID }, { path: { $regex: searchExpression } }] }] }, { $set: obj }, { multi: true }, function (error) {
                    if (error) {                                                                                       // 501
                        // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                        throw new Meteor.Error(422, error.reason);                                                     // 503
                    } else {                                                                                           // 504
                        console.log("Updated child resources");                                                        // 505
                    }                                                                                                  // 506
                });                                                                                                    // 507
            } else {                                                                                                   // 509
                BuzzyGlobal.throwError("Sorry, you are not allowed to that!");                                         // 510
            }                                                                                                          // 511
        }                                                                                                              // 516
                                                                                                                       //
        return updateResourceAndChildren;                                                                              // 466
    }(),                                                                                                               // 466
    removeResourceAndChildren: function () {                                                                           // 517
        function removeResourceAndChildren(currentResourceID) {                                                        // 517
                                                                                                                       //
            var user = Meteor.user();                                                                                  // 519
            if (!user) throw new Meteor.Error(401, "You need to login to remove resources");                           // 520
            var searchExpression = new RegExp(',' + currentResourceID + ',$');                                         // 522
            console.log("about to remove children:" + searchExpression);                                               // 523
            //Resources.remove({path:{$regex: searchExpression}});                                                     // 524
                                                                                                                       //
            var resource = Resources.findOne({ _id: resourceID });                                                     // 526
                                                                                                                       //
            if (resource && Resources.canEdit(user._id, resource)) {                                                   // 528
                Resources.remove({ path: { $regex: searchExpression } }, function (error) {                            // 529
                    if (error) {                                                                                       // 530
                        // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                        throw new Meteor.Error(422, error.reason);                                                     // 532
                    } else {                                                                                           // 533
                        console.log("Deleted child resources");                                                        // 534
                    }                                                                                                  // 535
                });                                                                                                    // 536
                console.log("about to remove resource:" + currentResourceID);                                          // 537
                //Resources.remove(currentResourceID);                                                                 // 538
                Resources.remove(currentResourceID, function (error) {                                                 // 539
                    if (error) {                                                                                       // 540
                        // display the error to the user - Need to come back to fix 422 (not sure what # it should be???) as the error number
                        throw new Meteor.Error(422, error.reason);                                                     // 542
                    } else {                                                                                           // 543
                        console.log("Deleted resource:" + currentResourceID);                                          // 544
                    }                                                                                                  // 545
                });                                                                                                    // 546
                return true;                                                                                           // 547
            } else {                                                                                                   // 548
                BuzzyGlobal.throwError("Sorry, you are not allowed to that!");                                         // 549
            }                                                                                                          // 550
        }                                                                                                              // 555
                                                                                                                       //
        return removeResourceAndChildren;                                                                              // 517
    }()                                                                                                                // 517
                                                                                                                       //
});                                                                                                                    // 32
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 580
    //process.env.MAIL_URL = 'smtp://postmaster@mg.buzzy.buzz:1lui1xunks31@smtp.mailgun.org:465';                      // 581
    process.env.MAIL_URL = 'smtp://adamgins:yHsCzjbQezmH6QzH4hD@smtp.sendgrid.net:587';                                // 582
});                                                                                                                    // 586
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}],"config.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/config.js                                                                                                    //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 2
                                                                                                                       //
    BrowserPolicy.content.allowOriginForAll("*");                                                                      // 4
    BrowserPolicy.content.allowConnectOrigin("*");                                                                     // 5
    BrowserPolicy.content.allowConnectOrigin("ws://localhost:*");                                                      // 6
    BrowserPolicy.content.allowConnectOrigin("wss://*.buzzy.buzz:*");                                                  // 7
    BrowserPolicy.content.allowOriginForAll('fonts.gstatic.com');                                                      // 8
    BrowserPolicy.content.allowOriginForAll('*.googleapis.com');                                                       // 9
    BrowserPolicy.content.allowOriginForAll('*.facebook.com');                                                         // 10
    BrowserPolicy.content.allowOriginForAll('staticxx.facebook.com');                                                  // 11
    BrowserPolicy.content.allowOriginForAll('*.facebook.net');                                                         // 12
    BrowserPolicy.content.allowOriginForAll('maps.gstatic.com');                                                       // 13
    BrowserPolicy.content.allowOriginForAll('maps.google.com');                                                        // 14
    BrowserPolicy.content.allowOriginForAll('*.google.com');                                                           // 15
    BrowserPolicy.content.allowOriginForAll('*.kadira.io');                                                            // 16
    BrowserPolicy.content.allowOriginForAll('*.officeapps.live.com');                                                  // 17
    BrowserPolicy.content.allowOriginForAll('*.giphy.com');                                                            // 18
    BrowserPolicy.content.allowOriginForAll('*.filepicker.io');                                                        // 19
    BrowserPolicy.content.allowOriginForAll('*.filestack.com');                                                        // 20
    BrowserPolicy.content.allowOriginForAll('*.filestackcontent.com');                                                 // 21
    BrowserPolicy.content.allowOriginForAll('*.mailgun.org');                                                          // 22
    BrowserPolicy.content.allowOriginForAll('*.mailgun.net');                                                          // 23
    BrowserPolicy.content.allowEval("*.facebook.net");                                                                 // 24
    BrowserPolicy.content.allowEval("*.facebook.com");                                                                 // 25
    BrowserPolicy.content.allowEval("*.googleapis.com");                                                               // 26
    BrowserPolicy.content.allowOriginForAll("http://meteor.local");                                                    // 27
    BrowserPolicy.content.allowOriginForAll("cdn.mxpnl.com");                                                          // 28
    BrowserPolicy.content.allowOriginForAll("*.demandbase.com");                                                       // 29
    BrowserPolicy.content.allowOriginForAll("*.addthis.com");                                                          // 30
    BrowserPolicy.content.allowOriginForAll("*.sharethis.com");                                                        // 31
    BrowserPolicy.content.allowOriginForAll("*.zimmer.com");                                                           // 32
    BrowserPolicy.framing.allowAll();                                                                                  // 33
});                                                                                                                    // 37
                                                                                                                       //
Accounts.config({                                                                                                      // 42
                                                                                                                       //
    forbidClientAccountCreation: true,                                                                                 // 44
    sendVerificationEmail: true                                                                                        // 45
                                                                                                                       //
});                                                                                                                    // 42
                                                                                                                       //
try {                                                                                                                  // 50
    ServiceConfiguration.configurations.remove({                                                                       // 51
        service: "google"                                                                                              // 52
    });                                                                                                                // 51
                                                                                                                       //
    ServiceConfiguration.configurations.insert({                                                                       // 56
        service: "google",                                                                                             // 57
        clientId: "419835751806-tk9ok18vu868vclrighlt8i5b79ulcrc.apps.googleusercontent.com",                          // 58
        secret: "zt8-nZGIr-6wwtEDuEouH3Gi",                                                                            // 59
        /* clientId: "1090788978289-1ta1l80bu20vimn1ss7d2c68ckg059ab@developer.gserviceaccount.com",                   // 60
         secret: "tistRNI721VDmL671ohz-uaL",*/                                                                         //
        loginStyle: "redirect"                                                                                         // 62
                                                                                                                       //
    });                                                                                                                // 56
} catch (err) {                                                                                                        // 66
    console.log("ERROR with settings file", err.message);                                                              // 67
    throw _.extend(new Error("Failed to setup Service Configuration " + err.message), { response: err.response });     // 68
}                                                                                                                      // 70
                                                                                                                       //
try {                                                                                                                  // 72
    ServiceConfiguration.configurations.remove({                                                                       // 73
        service: "twitter"                                                                                             // 74
    });                                                                                                                // 73
                                                                                                                       //
    ServiceConfiguration.configurations.insert({                                                                       // 78
        service: "twitter",                                                                                            // 79
        consumerKey: "JQzLHQ0hneUJ7bHeSC2hnmYZF",                                                                      // 80
        secret: "JKSlAKxZTx1z33Xau8b6ACEUU1UwX7dIIajxrzXLPSkPRVs7f8"                                                   // 81
                                                                                                                       //
    });                                                                                                                // 78
} catch (err) {                                                                                                        // 86
    console.log("ERROR with settings file", err.message);                                                              // 87
    throw _.extend(new Error("Failed to setup Service Configuration " + err.message), { response: err.response });     // 88
}                                                                                                                      // 90
                                                                                                                       //
try {                                                                                                                  // 94
    ServiceConfiguration.configurations.remove({                                                                       // 95
        service: "facebook"                                                                                            // 96
    });                                                                                                                // 95
                                                                                                                       //
    ServiceConfiguration.configurations.insert({                                                                       // 99
        service: "facebook",                                                                                           // 100
        appId: "312825212218682",                                                                                      // 101
        secret: "f44373229ac118535a75f5815f984729"                                                                     // 102
                                                                                                                       //
    });                                                                                                                // 99
} catch (err) {                                                                                                        // 106
    console.log("ERROR with settings file", err.message);                                                              // 107
    throw _.extend(new Error("Failed to setup Service Configuration " + err.message), { response: err.response });     // 108
}                                                                                                                      // 110
                                                                                                                       //
try {                                                                                                                  // 116
    var settings_file = EJSON.parse(Assets.getText('settings/' + Meteor.settings.BUZZY_SETTINGS_FILE + '_settings.json'));
                                                                                                                       //
    ServiceConfiguration.configurations.remove({                                                                       // 119
        service: "microsoft"                                                                                           // 120
    });                                                                                                                // 119
                                                                                                                       //
    ServiceConfiguration.configurations.insert({                                                                       // 123
        service: "microsoft",                                                                                          // 124
                                                                                                                       //
        clientId: settings_file.microsoft.clientId,                                                                    // 126
        secret: settings_file.microsoft.secret,                                                                        // 127
        display: "popup",                                                                                              // 128
        scope: "wl.signin wl.basic wl.emails"                                                                          // 129
                                                                                                                       //
    });                                                                                                                // 123
} catch (err) {                                                                                                        // 133
    console.log("ERROR with settings file", err.message);                                                              // 134
    throw _.extend(new Error("Failed to setup Service Configuration " + err.message), { response: err.response });     // 135
}                                                                                                                      // 137
                                                                                                                       //
/*Accounts.validateNewUser(function (user) {                                                                           // 141
    //currently only checks google users                                                                               //
    //return true; // temp while one plane                                                                             //
                                                                                                                       //
                                                                                                                       //
    var email = gGetUserEmail(user);                                                                                   //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
    var betaUserFoundCount = BetaUsers.find({email:email}).count();                                                    //
    if (betaUserFoundCount > 0){                                                                                       //
        return true                                                                                                    //
                                                                                                                       //
    } else {                                                                                                           //
        throw new Meteor.Error(422, "Sorry " + email + " is not in our beta program. Please request access below");    //
        return false;                                                                                                  //
    }                                                                                                                  //
                                                                                                                       //
});*/                                                                                                                  //
                                                                                                                       //
Accounts.onCreateUser(function (options, user) {                                                                       // 161
    user.createdAt = new Date().getTime();                                                                             // 162
    user.completedSetup = false;                                                                                       // 163
                                                                                                                       //
    if (user.services) {                                                                                               // 168
                                                                                                                       //
        var service = _.keys(user.services)[0];                                                                        // 170
        var email = user.services[service].email;                                                                      // 171
                                                                                                                       //
        if (service == 'facebook') {                                                                                   // 174
            if (!user.profile) {                                                                                       // 175
                user.profile = {};                                                                                     // 176
            }                                                                                                          // 178
            if (!user.profile.name) {                                                                                  // 179
                user.profile.name = user.services[service].name;                                                       // 180
            }                                                                                                          // 182
        }                                                                                                              // 183
        if (service == 'google') {                                                                                     // 184
            if (!user.profile) {                                                                                       // 185
                user.profile = {};                                                                                     // 186
            }                                                                                                          // 188
                                                                                                                       //
            if (!user.profile.name) {                                                                                  // 190
                user.profile.name = user.services[service].name;                                                       // 191
            }                                                                                                          // 193
        }                                                                                                              // 195
        if (service == 'microsoft') {                                                                                  // 196
            if (!user.profile) {                                                                                       // 197
                user.profile = {};                                                                                     // 198
            }                                                                                                          // 200
                                                                                                                       //
            if (!user.profile.name) {                                                                                  // 202
                user.profile.name = user.services[service].name;                                                       // 203
            }                                                                                                          // 205
        }                                                                                                              // 207
                                                                                                                       //
        if (service == 'password') {                                                                                   // 209
            if (!user.profile) {                                                                                       // 210
                user.profile = {};                                                                                     // 211
            }                                                                                                          // 213
                                                                                                                       //
            if (!user.profile.name && email) {                                                                         // 215
                user.profile.name = email.split("@")[0];                                                               // 216
            }                                                                                                          // 218
        }                                                                                                              // 220
                                                                                                                       //
        if (!email) {                                                                                                  // 222
            console.log("ON CREATE USER 3.1", user);                                                                   // 223
            return user;                                                                                               // 224
        }                                                                                                              // 226
                                                                                                                       //
        // see if any existing user has this email address, otherwise create new                                       // 228
        //var existingUser = Meteor.users.findOne({'emails.address': email});                                          // 229
        var existingUser = BuzzyGlobal.gGetUserforEmail(email);                                                        // 230
                                                                                                                       //
        if (!existingUser) {                                                                                           // 235
            user.email = email;                                                                                        // 236
            user.emails = [{ address: email, verified: true }];                                                        // 237
            user.profile.channels = [{ channel: BuzzyGlobal.gNOTIFICATION_CHANNEL.EMAIL, address: email, enabled: true }];
            /*if (BuzzyLogging){                                                                                       // 239
                BuzzyLogging.call("track", {                                                                           //
                    action:"createUser",                                                                               //
                    "userID": user._id?user._id:null,                                                                  //
                    "dateCreated": new Date().getTime(),                                                               //
                    "source": "registered"                                                                             //
                }, Meteor.settings.BUZZY_LOGGING_TOKEN);                                                               //
            }*/                                                                                                        //
            return user;                                                                                               // 247
        }                                                                                                              // 248
                                                                                                                       //
        if (!existingUser.profile) {                                                                                   // 250
            existingUser.profile = user.profile;                                                                       // 251
        }                                                                                                              // 253
                                                                                                                       //
        if (existingUser.emails) {                                                                                     // 255
                                                                                                                       //
            var inArrayPosition = function inArrayPosition(emailArray) {                                               // 257
                for (i in meteorBabelHelpers.sanitizeForInObject(emailArray)) {                                        // 258
                    if (emailArray[i].address === email) {                                                             // 259
                        return i;                                                                                      // 260
                    }                                                                                                  // 261
                }                                                                                                      // 262
                return -1;                                                                                             // 263
            };                                                                                                         // 264
            var positionEmail = inArrayPosition(existingUser.emails);                                                  // 265
            if (positionEmail == -1) {                                                                                 // 266
                                                                                                                       //
                existingUser.emails.push({ address: email, verified: true });                                          // 268
            } else {                                                                                                   // 270
                existingUser.emails[positionEmail].verified = true;                                                    // 271
            }                                                                                                          // 272
        }                                                                                                              // 273
                                                                                                                       //
        if (existingUser.profile.channels) {                                                                           // 275
                                                                                                                       //
            var found = false;                                                                                         // 277
            for (i in meteorBabelHelpers.sanitizeForInObject(existingUser.profile.channels)) {                         // 278
                if (existingUser.profile.channels[i].channel === BuzzyGlobal.gNOTIFICATION_CHANNEL.EMAIL && existingUser.profile.channels[i].address === email) {
                    existingUser.profile.channels[i].enabled = true;                                                   // 280
                    found = true;                                                                                      // 281
                }                                                                                                      // 282
            }                                                                                                          // 283
            if (!found) {                                                                                              // 284
                                                                                                                       //
                existingUser.profile.channels.push({ channel: BuzzyGlobal.gNOTIFICATION_CHANNEL.EMAIL, address: email, enabled: true });
            }                                                                                                          // 288
        }                                                                                                              // 289
                                                                                                                       //
        //Use $Pull to remove items from the array                                                                     // 291
                                                                                                                       //
                                                                                                                       //
        // precaution, these will exist from accounts-password if used                                                 // 294
        if (!existingUser.services) {                                                                                  // 295
            existingUser.services = { resume: { loginTokens: [] } };                                                   // 296
        }                                                                                                              // 297
                                                                                                                       //
        if (!existingUser.services.resume) {                                                                           // 299
            existingUser.services.resume = { loginTokens: [] };                                                        // 300
        }                                                                                                              // 302
                                                                                                                       //
        // copy accross new service info                                                                               // 305
        existingUser.services[service] = user.services[service];                                                       // 306
        if (typeof user.services.resume != "undefined") {                                                              // 307
            existingUser.services.resume.loginTokens.push(user.services.resume.loginTokens[0]);                        // 310
        }                                                                                                              // 313
                                                                                                                       //
        // even worse hackery                                                                                          // 316
        Meteor.users.remove({ _id: existingUser._id }); // remove existing record                                      // 317
        return existingUser; // record is re-inserted                                                                  // 318
    }                                                                                                                  // 319
});                                                                                                                    // 320
                                                                                                                       //
Accounts.urls.enrollAccount = function (token) {                                                                       // 322
    //return Meteor.absoluteUrl('enroll/' + token);                                                                    // 323
    return Meteor.absoluteUrl('createpassword/1/?token=' + token);                                                     // 324
};                                                                                                                     // 325
                                                                                                                       //
Accounts.urls.resetPassword = function (token) {                                                                       // 327
    return Meteor.absoluteUrl('createpassword/1/?token=' + token);                                                     // 328
};                                                                                                                     // 329
                                                                                                                       //
Accounts.emailTemplates.siteName = "Buzzy";                                                                            // 332
Accounts.emailTemplates.from = "Buzzy Buzz <info@buzzy.buzz>";                                                         // 333
                                                                                                                       //
Accounts.emailTemplates.enrollAccount.subject = function (user) {                                                      // 335
    var senderName = BuzzyGlobal.gGetUserNameByID(Meteor.userId());                                                    // 336
    if (senderName && senderName.toLowerCase() !== "unknown") {                                                        // 337
        return senderName + " invited you to Buzzy Buzz ";                                                             // 338
    } else {                                                                                                           // 339
        return "[Buzzy] Please activate your account";                                                                 // 340
    }                                                                                                                  // 341
};                                                                                                                     // 343
Accounts.emailTemplates.enrollAccount.text = function (user, url) {                                                    // 344
    //var buzzyLink = "Buzzy Buzz".link("http://my.buzzy.buzz");                                                       // 345
    var senderName = BuzzyGlobal.gGetUserNameByID(Meteor.userId());                                                    // 346
    if (senderName.toLowerCase() === "unknown") {                                                                      // 347
        return senderName + " Welcome to Buzzy. To activate your own Buzzy account, follow the link below and choose a new password:\n" + url + "\n\n" + " OR if this email address is associated with either Google or Facebook, simply go to https://buzzy.buzz and select the ‘Sign in with Google’ or ‘Sign in with Facebook’ button.\n" + "Thanks,\n" + "The team at Buzzy";
    } else {                                                                                                           // 354
        return senderName + " has shared something and is inviting you to try out Buzzy. To activate your own Buzzy account and view " + senderName + "’s Buzz, follow the link below and choose a new password:\n" + " To activate your account, with a user name (your email address) and password simply click the link below:\n\n" + url + "\n\n" + " OR if this email address is associated with either Google or Facebook, simply go to https://buzzy.buzz and select the ‘Sign in with Google’ or ‘Sign in with Facebook’ button.\n" + "Thanks,\n" + "The team at Buzzy";
    }                                                                                                                  // 361
};                                                                                                                     // 363
                                                                                                                       //
Accounts.emailTemplates.enrollAccount.html = function (user, url) {                                                    // 365
                                                                                                                       //
    var senderName = BuzzyGlobal.gGetUserNameByID(Meteor.userId());                                                    // 367
    if (senderName.toLowerCase() === "unknown") {                                                                      // 368
        var emailHTML = Assets.getText('emails/rego-email-activate.htm');                                              // 369
        emailHTML = emailHTML.replace(/BUZZY_ACTIVATE_LINK/g, url);                                                    // 370
                                                                                                                       //
        return emailHTML;                                                                                              // 372
    } else {                                                                                                           // 373
        var emailHTML = Assets.getText('emails/rego-email-invite.htm');                                                // 374
        emailHTML = emailHTML.replace(/BUZZY_ACTIVATE_LINK/g, url);                                                    // 375
        emailHTML = emailHTML.replace(/BUZZY_USERNAME/g, senderName);                                                  // 376
                                                                                                                       //
        return emailHTML;                                                                                              // 378
    }                                                                                                                  // 379
};                                                                                                                     // 381
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"fixtures.js":function(require,exports,module){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/fixtures.js                                                                                                  //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
//This could be client side - so different for each user.                                                              // 1
// Will eventually have to get your instragram pics                                                                    // 2
                                                                                                                       //
                                                                                                                       //
if (Resources.find().count() === 0) {                                                                                  // 6
                                                                                                                       //
    /* Accounts.createUser({email: 'adam_ginsburg@yahoo.com', password : 'gkU2eJzEi9DBgk'});                           // 8
     Accounts.createUser({email: 'dave@smallsilences.com', password : 'cKVX9sB2ARtiVX'});                              //
     */                                                                                                                //
                                                                                                                       //
    var now = new Date().getTime();                                                                                    // 12
    var tempResourceID, tempResourceID2;                                                                               // 13
                                                                                                                       //
    var tempUserID = Meteor.users.insert({                                                                             // 15
        profile: {                                                                                                     // 16
            name: 'BuzzyAdmin',                                                                                        // 17
            email: 'buzzyadmin@buzzy.buzz'                                                                             // 18
        }                                                                                                              // 16
    });                                                                                                                // 15
    console.log("tUI:" + tempUserID);                                                                                  // 21
    user = Meteor.users.findOne(tempUserID);                                                                           // 22
    console.log("user._id:" + user._id);                                                                               // 23
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 26
        title: 'Meta Field',                                                                                           // 27
        userID: user._id,                                                                                              // 28
        author: user.profile.name,                                                                                     // 29
        path: null,                                                                                                    // 30
        reusable: 'free',                                                                                              // 31
        privacy: "draft",                                                                                              // 32
        status: 'published',                                                                                           // 33
        type: BuzzyGlobal.gBASICTYPES.META_FIELD,                                                                      // 34
        isBasic: true,                                                                                                 // 35
        isStarterTemplate: true,                                                                                       // 36
        CSSclass: '',                                                                                                  // 37
        submitted: now,                                                                                                // 38
        special: true,                                                                                                 // 39
        avatar: '<i class=\"fa fa-fw fa-asterisk\"><\/i>'                                                              // 40
    });                                                                                                                // 26
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 43
        title: 'Table',                                                                                                // 44
        userID: user._id,                                                                                              // 45
        author: user.profile.name,                                                                                     // 46
        path: null,                                                                                                    // 47
        reusable: 'free',                                                                                              // 48
        privacy: "public",                                                                                             // 49
        status: 'published',                                                                                           // 50
        type: BuzzyGlobal.gBASICTYPES.TABLE,                                                                           // 51
        isBasic: true,                                                                                                 // 52
        special: true,                                                                                                 // 53
        isStarterTemplate: true,                                                                                       // 54
        CSSclass: '',                                                                                                  // 55
        submitted: now,                                                                                                // 56
        avatar: '<i class=\"fa fa-fw fa-table\"><\/i>',                                                                // 57
        content: '<table><tbody><tr><td>&nbsp;</td><td>&nbsp;</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td></tr></tbody></table>'
    });                                                                                                                // 43
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 61
        title: 'Embeded Buzz',                                                                                         // 62
        userID: user._id,                                                                                              // 63
        author: user.profile.name,                                                                                     // 64
        path: null,                                                                                                    // 65
        reusable: 'free',                                                                                              // 66
        privacy: "public",                                                                                             // 67
        status: 'published',                                                                                           // 68
        type: BuzzyGlobal.gBASICTYPES.EMBED_BUZZ,                                                                      // 69
        isBasic: true,                                                                                                 // 70
        isStarterTemplate: true,                                                                                       // 71
        CSSclass: '',                                                                                                  // 72
        submitted: now,                                                                                                // 73
        special: true,                                                                                                 // 74
        avatar: '<i class=\"fa fa-fw fa-magic\"><\/i>'                                                                 // 75
    });                                                                                                                // 61
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 78
        title: '1 Column (12)',                                                                                        // 79
        userID: user._id,                                                                                              // 80
        author: user.profile.name,                                                                                     // 81
        path: null,                                                                                                    // 82
        reusable: 'free',                                                                                              // 83
        privacy: "public",                                                                                             // 84
        status: 'published',                                                                                           // 85
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_ROW,                                                              // 86
        isBasic: false,                                                                                                // 87
        special: true,                                                                                                 // 88
        isStarterTemplate: true,                                                                                       // 89
        CSSclass: 'row',                                                                                               // 90
        submitted: now,                                                                                                // 91
        avatar: '\t\x3Cdiv class=\"layout-schematic\"\x3E\n\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"row\"\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-12\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E'
    });                                                                                                                // 78
                                                                                                                       //
    var tempResourceIDChild1 = Resources.insert({                                                                      // 95
        title: 'Placeholder md-12',                                                                                    // 96
        userID: user._id,                                                                                              // 97
        author: user.profile.name,                                                                                     // 98
        path: "," + tempResourceID + ",",                                                                              // 99
        reusable: 'free',                                                                                              // 100
        privacy: "public",                                                                                             // 101
        status: 'published',                                                                                           // 102
        special: true,                                                                                                 // 103
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 104
        isBasic: false,                                                                                                // 105
        isStarterTemplate: false,                                                                                      // 106
        CSSclass: 'col-md-12',                                                                                         // 107
        submitted: now,                                                                                                // 108
        avatar: '\t\x3Cdiv class=\"layout-schematic\"\x3E\n\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"row\"\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-12\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E'
    });                                                                                                                // 95
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 112
        title: 'Application',                                                                                          // 113
        userID: user._id,                                                                                              // 114
        author: user.profile.name,                                                                                     // 115
        path: null,                                                                                                    // 116
        reusable: 'free',                                                                                              // 117
        privacy: "public",                                                                                             // 118
        status: 'published',                                                                                           // 119
        isStarterTemplate: true,                                                                                       // 120
        special: true,                                                                                                 // 121
        isBasic: true,                                                                                                 // 122
        type: BuzzyGlobal.gBASICTYPES.APPLICATION,                                                                     // 123
        content: {                                                                                                     // 124
            whoCanAdd: BuzzyGlobal.gAPPFIELD_INTERACT.OWNERS_AND_AUTHORS,                                              // 125
            whoCanDelete: BuzzyGlobal.gAPPFIELD_INTERACT.OWNERS_AND_AUTHORS                                            // 126
                                                                                                                       //
        },                                                                                                             // 124
        CSSclass: 'row',                                                                                               // 129
        submitted: now,                                                                                                // 130
        avatar: '<i class=\"fa fa-fw fa-asterisk\"><\/i>'                                                              // 131
    });                                                                                                                // 112
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 134
        title: 'Rest Call',                                                                                            // 135
        userID: user._id,                                                                                              // 136
        author: user.profile.name,                                                                                     // 137
        path: null,                                                                                                    // 138
        reusable: 'free',                                                                                              // 139
        privacy: "public",                                                                                             // 140
        status: 'published',                                                                                           // 141
        isStarterTemplate: true,                                                                                       // 142
        special: true,                                                                                                 // 143
        isBasic: true,                                                                                                 // 144
        type: BuzzyGlobal.gBASICTYPES.RESTCALL,                                                                        // 145
        content: { url: null },                                                                                        // 146
        CSSclass: 'row',                                                                                               // 147
        submitted: now,                                                                                                // 148
        avatar: '<i class=\"fa fa-fw fa-rss-square\"><\/i>'                                                            // 149
    });                                                                                                                // 134
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 152
        title: 'Filepicker Gallery',                                                                                   // 153
        userID: user._id,                                                                                              // 154
        author: user.profile.name,                                                                                     // 155
        path: null,                                                                                                    // 156
        reusable: 'free',                                                                                              // 157
        privacy: "public",                                                                                             // 158
        status: 'published',                                                                                           // 159
        isStarterTemplate: true,                                                                                       // 160
        special: true,                                                                                                 // 161
        isBasic: true,                                                                                                 // 162
        type: BuzzyGlobal.gBASICTYPES.FILEPICKER_GALLERY,                                                              // 163
        CSSclass: 'row',                                                                                               // 164
        submitted: now,                                                                                                // 165
        avatar: '<i class=\"fa fa-fw fa-picture-o\"><\/i>'                                                             // 166
    });                                                                                                                // 152
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 169
        title: 'Filepicker File',                                                                                      // 170
        userID: user._id,                                                                                              // 171
        author: user.profile.name,                                                                                     // 172
        path: null,                                                                                                    // 173
        reusable: 'free',                                                                                              // 174
        privacy: "public",                                                                                             // 175
        status: 'published',                                                                                           // 176
        isStarterTemplate: true,                                                                                       // 177
        special: true,                                                                                                 // 178
        isBasic: true,                                                                                                 // 179
        type: BuzzyGlobal.gBASICTYPES.FILEPICKER,                                                                      // 180
        CSSclass: 'row',                                                                                               // 181
        submitted: now,                                                                                                // 182
        avatar: '<i class=\"fa fa-fw fa-paperclip\"><\/i>'                                                             // 183
    });                                                                                                                // 169
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 186
        title: '2 Column (8 + 4)',                                                                                     // 187
        userID: user._id,                                                                                              // 188
        author: user.profile.name,                                                                                     // 189
        path: null,                                                                                                    // 190
        reusable: 'free',                                                                                              // 191
        privacy: "public",                                                                                             // 192
        status: 'published',                                                                                           // 193
        isStarterTemplate: true,                                                                                       // 194
        special: true,                                                                                                 // 195
        isBasic: true,                                                                                                 // 196
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_ROW,                                                              // 197
        CSSclass: 'row',                                                                                               // 198
        submitted: now,                                                                                                // 199
        avatar: '\x3Cdiv class=\"layout-schematic\"\x3E\n\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"row\"\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-8\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-4\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E'
    });                                                                                                                // 186
                                                                                                                       //
    var tempResourceIDChild2 = Resources.insert({                                                                      // 203
        title: 'Placeholder md-8',                                                                                     // 204
        userID: user._id,                                                                                              // 205
        author: user.profile.name,                                                                                     // 206
        path: "," + tempResourceID + ",",                                                                              // 207
        reusable: 'free',                                                                                              // 208
        privacy: "public",                                                                                             // 209
        status: 'published',                                                                                           // 210
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 211
        isBasic: true,                                                                                                 // 212
        special: true,                                                                                                 // 213
        isStarterTemplate: false,                                                                                      // 214
        CSSclass: 'col-sm-8',                                                                                          // 215
        rank: 1,                                                                                                       // 216
        submitted: now,                                                                                                // 217
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 203
                                                                                                                       //
    var tempResourceIDChild1 = Resources.insert({                                                                      // 221
        title: 'Placeholder md-4',                                                                                     // 222
        userID: user._id,                                                                                              // 223
        author: user.profile.name,                                                                                     // 224
        path: "," + tempResourceID + ",",                                                                              // 225
        reusable: 'free',                                                                                              // 226
        special: true,                                                                                                 // 227
        privacy: "public",                                                                                             // 228
        status: 'published',                                                                                           // 229
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 230
        isBasic: true,                                                                                                 // 231
        isStarterTemplate: false,                                                                                      // 232
        CSSclass: 'col-sm-4',                                                                                          // 233
        rank: 2,                                                                                                       // 234
        submitted: now,                                                                                                // 235
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 221
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 240
        title: '2 Column (4 + 8)',                                                                                     // 241
        userID: user._id,                                                                                              // 242
        author: user.profile.name,                                                                                     // 243
        path: null,                                                                                                    // 244
        reusable: 'free',                                                                                              // 245
        privacy: "public",                                                                                             // 246
        status: 'published',                                                                                           // 247
        isStarterTemplate: true,                                                                                       // 248
        special: true,                                                                                                 // 249
        isBasic: true,                                                                                                 // 250
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_ROW,                                                              // 251
        CSSclass: 'row',                                                                                               // 252
        submitted: now,                                                                                                // 253
        avatar: '\x3Cdiv class=\"layout-schematic\"\x3E\n\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"row\"\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-4\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-8\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E'
    });                                                                                                                // 240
                                                                                                                       //
    var tempResourceIDChild1 = Resources.insert({                                                                      // 257
        title: 'Placeholder md-4',                                                                                     // 258
        userID: user._id,                                                                                              // 259
        author: user.profile.name,                                                                                     // 260
        path: "," + tempResourceID + ",",                                                                              // 261
        reusable: 'free',                                                                                              // 262
        privacy: "public",                                                                                             // 263
        status: 'published',                                                                                           // 264
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 265
        isBasic: true,                                                                                                 // 266
        isStarterTemplate: false,                                                                                      // 267
        special: true,                                                                                                 // 268
        CSSclass: 'col-sm-4',                                                                                          // 269
        rank: 1,                                                                                                       // 270
        submitted: now,                                                                                                // 271
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 257
    var tempResourceIDChild2 = Resources.insert({                                                                      // 274
        title: 'Placeholder md-8',                                                                                     // 275
        userID: user._id,                                                                                              // 276
        author: user.profile.name,                                                                                     // 277
        path: "," + tempResourceID + ",",                                                                              // 278
        reusable: 'free',                                                                                              // 279
        special: true,                                                                                                 // 280
        privacy: "public",                                                                                             // 281
        status: 'published',                                                                                           // 282
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 283
        isBasic: true,                                                                                                 // 284
        isStarterTemplate: false,                                                                                      // 285
        CSSclass: 'col-sm-8',                                                                                          // 286
        rank: 2,                                                                                                       // 287
        submitted: now,                                                                                                // 288
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 274
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 292
        title: '3 Column (4 + 4 + 4)',                                                                                 // 293
        userID: user._id,                                                                                              // 294
        author: user.profile.name,                                                                                     // 295
        path: null,                                                                                                    // 296
        reusable: 'free',                                                                                              // 297
        special: true,                                                                                                 // 298
        privacy: "public",                                                                                             // 299
        status: 'published',                                                                                           // 300
        isBasic: true,                                                                                                 // 301
        isStarterTemplate: true,                                                                                       // 302
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_ROW,                                                              // 303
        CSSclass: 'row',                                                                                               // 304
        rank: 1,                                                                                                       // 305
        submitted: now,                                                                                                // 306
        avatar: '\x3Cdiv class=\"layout-schematic\"\x3E\n\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"row\"\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-4\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-4\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-4\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E'
    });                                                                                                                // 292
                                                                                                                       //
    var tempResourceIDChild1 = Resources.insert({                                                                      // 310
        title: 'Placeholder md-4',                                                                                     // 311
        userID: user._id,                                                                                              // 312
        author: user.profile.name,                                                                                     // 313
        path: "," + tempResourceID + ",",                                                                              // 314
        reusable: 'free',                                                                                              // 315
        special: true,                                                                                                 // 316
        privacy: "public",                                                                                             // 317
        status: 'published',                                                                                           // 318
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 319
        isBasic: true,                                                                                                 // 320
        isStarterTemplate: false,                                                                                      // 321
        CSSclass: 'col-sm-4',                                                                                          // 322
        rank: 1,                                                                                                       // 323
        submitted: now,                                                                                                // 324
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 310
    var tempResourceIDChild2 = Resources.insert({                                                                      // 327
        title: 'Placeholder md-4',                                                                                     // 328
        userID: user._id,                                                                                              // 329
        author: user.profile.name,                                                                                     // 330
        path: "," + tempResourceID + ",",                                                                              // 331
        reusable: 'free',                                                                                              // 332
        special: true,                                                                                                 // 333
        privacy: "public",                                                                                             // 334
        status: 'published',                                                                                           // 335
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 336
        isBasic: true,                                                                                                 // 337
        isStarterTemplate: false,                                                                                      // 338
        CSSclass: 'col-sm-4',                                                                                          // 339
        rank: 2,                                                                                                       // 340
        submitted: now,                                                                                                // 341
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 327
    var tempResourceIDChild3 = Resources.insert({                                                                      // 344
        title: 'Placeholder md-4',                                                                                     // 345
        userID: user._id,                                                                                              // 346
        author: user.profile.name,                                                                                     // 347
        path: "," + tempResourceID + ",",                                                                              // 348
        reusable: 'free',                                                                                              // 349
        special: true,                                                                                                 // 350
        privacy: "public",                                                                                             // 351
        status: 'published',                                                                                           // 352
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 353
        isBasic: true,                                                                                                 // 354
        isStarterTemplate: false,                                                                                      // 355
        CSSclass: 'col-sm-4 droppable-layout',                                                                         // 356
        rank: 3,                                                                                                       // 357
        submitted: now,                                                                                                // 358
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 344
    tempResourceID = Resources.insert({                                                                                // 361
        title: '2 Column (6 + 6)',                                                                                     // 362
        userID: user._id,                                                                                              // 363
        author: user.profile.name,                                                                                     // 364
        path: null,                                                                                                    // 365
        reusable: 'free',                                                                                              // 366
        special: true,                                                                                                 // 367
        privacy: "public",                                                                                             // 368
        status: 'published',                                                                                           // 369
        isBasic: true,                                                                                                 // 370
        isStarterTemplate: true,                                                                                       // 371
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_ROW,                                                              // 372
        CSSclass: 'row',                                                                                               // 373
        submitted: now,                                                                                                // 374
        avatar: '\x3Cdiv class=\"layout-schematic\"\x3E\n\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"row\"\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-6\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\t\x3Cdiv class=\"col-xs-6\"\x3E\x3Cdiv class=\"layout-schematic-module\"\x3E\x3C\x2Fdiv\x3E\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E\n\t\t\t\t\t\t\t\t\x3C\x2Fdiv\x3E'
    });                                                                                                                // 361
                                                                                                                       //
    var tempResourceIDChild1 = Resources.insert({                                                                      // 378
        title: 'Placeholder md-6',                                                                                     // 379
        userID: user._id,                                                                                              // 380
        author: user.profile.name,                                                                                     // 381
        path: "," + tempResourceID + ",",                                                                              // 382
        reusable: 'free',                                                                                              // 383
        special: true,                                                                                                 // 384
        privacy: "public",                                                                                             // 385
        status: 'published',                                                                                           // 386
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 387
        isBasic: true,                                                                                                 // 388
        isStarterTemplate: false,                                                                                      // 389
        CSSclass: 'col-sm-6',                                                                                          // 390
        rank: 1,                                                                                                       // 391
        submitted: now,                                                                                                // 392
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 378
    var tempResourceIDChild2 = Resources.insert({                                                                      // 395
        title: 'Placeholder md-6',                                                                                     // 396
        userID: user._id,                                                                                              // 397
        author: user.profile.name,                                                                                     // 398
        path: "," + tempResourceID + ",",                                                                              // 399
        reusable: 'free',                                                                                              // 400
        special: true,                                                                                                 // 401
        privacy: "public",                                                                                             // 402
        status: 'published',                                                                                           // 403
        type: BuzzyGlobal.gBASICTYPES.CONTENT_LAYOUT_COLUMN,                                                           // 404
        isBasic: true,                                                                                                 // 405
        isStarterTemplate: false,                                                                                      // 406
        CSSclass: 'col-sm-6',                                                                                          // 407
        rank: 2,                                                                                                       // 408
        submitted: now,                                                                                                // 409
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                // 395
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 413
        title: 'text',                                                                                                 // 414
        userID: user._id,                                                                                              // 415
        author: user.profile.name,                                                                                     // 416
        path: null,                                                                                                    // 417
        reusable: 'free',                                                                                              // 418
        special: true,                                                                                                 // 419
        privacy: "public",                                                                                             // 420
        status: 'published',                                                                                           // 421
        isBasic: true,                                                                                                 // 422
        isStarterTemplate: true,                                                                                       // 423
        type: BuzzyGlobal.gBASICTYPES.TEXT,                                                                            // 424
        message: '', content: null,                                                                                    // 425
                                                                                                                       //
        submitted: now,                                                                                                // 428
        CSSclass: '',                                                                                                  // 429
        avatar: '<i class=\"fa fa-fw fa-align-left\"><\/i>'                                                            // 430
    });                                                                                                                // 413
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 435
        title: 'Blank Buzz',                                                                                           // 436
        userID: user._id,                                                                                              // 437
        author: user.profile.name,                                                                                     // 438
        path: null,                                                                                                    // 439
        reusable: 'free',                                                                                              // 440
        special: true,                                                                                                 // 441
        privacy: "public",                                                                                             // 442
        status: 'published',                                                                                           // 443
        type: BuzzyGlobal.gBASICTYPES.BUZZ,                                                                            // 444
        isBasic: false,                                                                                                // 445
        privacy: "public",                                                                                             // 446
        isStarterTemplate: true,                                                                                       // 447
        message: '', content: null,                                                                                    // 448
        submitted: now,                                                                                                // 449
        CSSclass: '',                                                                                                  // 450
        avatar: '<span style=\"font-size: 3.2em;\" class=\"fa fa-header\"><\/span>'                                    // 451
    });                                                                                                                // 435
                                                                                                                       //
    tempResourceID2 = Resources.insert({                                                                               // 458
        title: 'Conversation Buzz (aka SMS)',                                                                          // 459
        userID: user._id,                                                                                              // 460
        author: user.profile.name,                                                                                     // 461
        path: null,                                                                                                    // 462
        reusable: 'free',                                                                                              // 463
        special: true,                                                                                                 // 464
        privacy: "public",                                                                                             // 465
        status: 'published',                                                                                           // 466
        type: BuzzyGlobal.gBASICTYPES.BUZZ,                                                                            // 467
        isBasic: false,                                                                                                // 468
        privacy: "public",                                                                                             // 469
        isStarterTemplate: true,                                                                                       // 470
        message: '',                                                                                                   // 471
        content: null,                                                                                                 // 472
        submitted: now,                                                                                                // 473
        CSSclass: '',                                                                                                  // 474
        avatar: '<span style=\"font-size: 3.2em;\" class=\"fa fa-header\"><\/span>',                                   // 475
        showComments: 'along-side'                                                                                     // 476
    });                                                                                                                // 458
                                                                                                                       //
    /* tempResourceID = Resources.insert({                                                                             // 480
         title: 'Discussion',                                                                                          //
         userID: user._id,                                                                                             //
         author: user.profile.name,                                                                                    //
         path:"," + tempResourceID2 + ",",                                                                             //
         reusable:'free',                                                                                              //
         special:true,                                                                                                 //
         privacy:"public",                                                                                             //
         status:'published',                                                                                           //
         showComments: 'along-side',                                                                                   //
         isStarterTemplate:true,                                                                                       //
         isBasic:true,                                                                                                 //
         type: BuzzyGlobal.gBASICTYPES.COMMENTS,                                                                       //
         message: '', content:null,                                                                                    //
         submitted: now ,                                                                                              //
         CSSclass: '',                                                                                                 //
         avatar:'<i class=\"fa fa-comments\"><\/i>',                                                                   //
         rank: 1                                                                                                       //
     });*/                                                                                                             //
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 500
        title: 'Image',                                                                                                // 501
        userID: user._id,                                                                                              // 502
        author: user.profile.name,                                                                                     // 503
        path: null,                                                                                                    // 504
        reusable: 'free',                                                                                              // 505
        special: true,                                                                                                 // 506
        privacy: "public",                                                                                             // 507
        status: 'published',                                                                                           // 508
        isBasic: true,                                                                                                 // 509
        isStarterTemplate: true,                                                                                       // 510
        type: BuzzyGlobal.gBASICTYPES.IMAGE,                                                                           // 511
        message: '', content: null,                                                                                    // 512
        submitted: now,                                                                                                // 513
        CSSclass: '',                                                                                                  // 514
        avatar: '<i class=\"fa fa-picture-o\"></i>'                                                                    // 515
    });                                                                                                                // 500
    tempResourceID = Resources.insert({                                                                                // 517
        title: 'Video',                                                                                                // 518
        userID: user._id,                                                                                              // 519
        author: user.profile.name,                                                                                     // 520
        path: null,                                                                                                    // 521
        privacy: "public",                                                                                             // 522
        reusable: 'free',                                                                                              // 523
        special: true,                                                                                                 // 524
        status: 'published',                                                                                           // 525
        isBasic: true,                                                                                                 // 526
        isStarterTemplate: true,                                                                                       // 527
        type: BuzzyGlobal.gBASICTYPES.VIDEO,                                                                           // 528
        message: '', content: null,                                                                                    // 529
        submitted: now,                                                                                                // 530
        CSSclass: '',                                                                                                  // 531
        avatar: '<i class=\"fa fa-film\"><\/i>'                                                                        // 532
    });                                                                                                                // 517
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 535
        title: 'Embedded Link',                                                                                        // 536
        userID: user._id,                                                                                              // 537
        author: user.profile.name,                                                                                     // 538
        path: null,                                                                                                    // 539
        reusable: 'free',                                                                                              // 540
        special: true,                                                                                                 // 541
        privacy: "public",                                                                                             // 542
        status: 'published',                                                                                           // 543
        isBasic: true,                                                                                                 // 544
        isStarterTemplate: true,                                                                                       // 545
        type: BuzzyGlobal.gBASICTYPES.EMBEDDED_LINK,                                                                   // 546
        message: 'enter URL',                                                                                          // 547
        submitted: now,                                                                                                // 548
        CSSclass: '',                                                                                                  // 549
        avatar: '<i class=\"fa fa-usd\"><\/i>'                                                                         // 550
    });                                                                                                                // 535
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 555
        title: 'Clickable Button',                                                                                     // 556
        userID: user._id,                                                                                              // 557
        author: user.profile.name,                                                                                     // 558
        path: null,                                                                                                    // 559
        reusable: 'free',                                                                                              // 560
        special: true,                                                                                                 // 561
        privacy: "public",                                                                                             // 562
        status: 'published',                                                                                           // 563
        isBasic: true,                                                                                                 // 564
        isStarterTemplate: true,                                                                                       // 565
        type: BuzzyGlobal.gBASICTYPES.BUTTON,                                                                          // 566
        message: 'enter URL',                                                                                          // 567
        submitted: now,                                                                                                // 568
        CSSclass: '',                                                                                                  // 569
        avatar: '<i class=\"fa fa-hand-pointer-o\"><\/i>'                                                              // 570
    });                                                                                                                // 555
    tempResourceID = Resources.insert({                                                                                // 572
        title: 'Payment Button',                                                                                       // 573
        userID: user._id,                                                                                              // 574
        author: user.profile.name,                                                                                     // 575
        path: null,                                                                                                    // 576
        reusable: 'free',                                                                                              // 577
        special: true,                                                                                                 // 578
        privacy: "public",                                                                                             // 579
        status: 'published',                                                                                           // 580
        isBasic: true,                                                                                                 // 581
        isStarterTemplate: true,                                                                                       // 582
        type: BuzzyGlobal.gBASICTYPES.PAYMENT,                                                                         // 583
        message: 'enter URL',                                                                                          // 584
        submitted: now,                                                                                                // 585
        CSSclass: '',                                                                                                  // 586
        avatar: '<i class=\"fa fa-usd\"><\/i>'                                                                         // 587
    });                                                                                                                // 572
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 590
        title: 'Slide Show',                                                                                           // 591
        userID: user._id,                                                                                              // 592
        author: user.profile.name,                                                                                     // 593
        path: null,                                                                                                    // 594
        reusable: 'free',                                                                                              // 595
        special: true,                                                                                                 // 596
        privacy: "public",                                                                                             // 597
        status: 'draft',                                                                                               // 598
        isStarterTemplate: true,                                                                                       // 599
        isBasic: true,                                                                                                 // 600
        type: BuzzyGlobal.gBASICTYPES.SLIDESHOW,                                                                       // 601
        message: 'enter URL',                                                                                          // 602
        submitted: now,                                                                                                // 603
        CSSclass: '',                                                                                                  // 604
        avatar: '<i class=\"fa fa-file-image-o\"><\/i>'                                                                // 605
    });                                                                                                                // 590
    tempResourceID = Resources.insert({                                                                                // 607
        title: 'Gallery',                                                                                              // 608
        userID: user._id,                                                                                              // 609
        author: user.profile.name,                                                                                     // 610
        path: null,                                                                                                    // 611
        reusable: 'free',                                                                                              // 612
        special: true,                                                                                                 // 613
        privacy: "public",                                                                                             // 614
        status: 'draft',                                                                                               // 615
        isStarterTemplate: true,                                                                                       // 616
        isBasic: true,                                                                                                 // 617
        type: BuzzyGlobal.gBASICTYPES.GALLERY,                                                                         // 618
        message: 'enter URL',                                                                                          // 619
        submitted: now,                                                                                                // 620
        CSSclass: '',                                                                                                  // 621
        avatar: '<i class=\"fa fa-th\"><\/i>'                                                                          // 622
    });                                                                                                                // 607
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 625
        title: 'Menu List',                                                                                            // 626
        userID: user._id,                                                                                              // 627
        author: user.profile.name,                                                                                     // 628
        path: null,                                                                                                    // 629
        reusable: 'free',                                                                                              // 630
        special: true,                                                                                                 // 631
        privacy: "public",                                                                                             // 632
        status: 'draft',                                                                                               // 633
        isStarterTemplate: true,                                                                                       // 634
        isBasic: true,                                                                                                 // 635
        type: BuzzyGlobal.gBASICTYPES.TAG_QUERY,                                                                       // 636
        message: 'enter URL',                                                                                          // 637
        submitted: now,                                                                                                // 638
        CSSclass: '',                                                                                                  // 639
        avatar: '<i class=\"fa fa-list\"><\/i>'                                                                        // 640
    });                                                                                                                // 625
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 643
        title: 'Twitter',                                                                                              // 644
        userID: user._id,                                                                                              // 645
        author: user.profile.name,                                                                                     // 646
        path: null,                                                                                                    // 647
        reusable: 'free',                                                                                              // 648
        special: true,                                                                                                 // 649
        privacy: "public",                                                                                             // 650
        status: 'published',                                                                                           // 651
        isBasic: true,                                                                                                 // 652
        isStarterTemplate: true,                                                                                       // 653
        type: BuzzyGlobal.gBASICTYPES.TWITTER,                                                                         // 654
        message: '', content: null,                                                                                    // 655
        submitted: now,                                                                                                // 656
        CSSclass: '',                                                                                                  // 657
        avatar: '<i class=\"fa fa-twitter\"></i>'                                                                      // 658
    });                                                                                                                // 643
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 661
        title: 'GIPHY',                                                                                                // 662
        userID: user._id,                                                                                              // 663
        author: user.profile.name,                                                                                     // 664
        path: null,                                                                                                    // 665
        reusable: 'free',                                                                                              // 666
        special: true,                                                                                                 // 667
        privacy: "public",                                                                                             // 668
        status: 'published',                                                                                           // 669
        isBasic: true,                                                                                                 // 670
        isStarterTemplate: true,                                                                                       // 671
        type: BuzzyGlobal.gBASICTYPES.GIPHY,                                                                           // 672
        message: '', content: null,                                                                                    // 673
        submitted: now,                                                                                                // 674
        CSSclass: '',                                                                                                  // 675
        avatar: '<i class=\"fa fa-file-image-o\"></i>'                                                                 // 676
    });                                                                                                                // 661
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 679
        title: 'Google Map',                                                                                           // 680
        userID: user._id,                                                                                              // 681
        author: user.profile.name,                                                                                     // 682
        path: null,                                                                                                    // 683
        reusable: 'free',                                                                                              // 684
        special: true,                                                                                                 // 685
        privacy: "public",                                                                                             // 686
        status: 'published',                                                                                           // 687
        isBasic: true,                                                                                                 // 688
        isStarterTemplate: true,                                                                                       // 689
        type: BuzzyGlobal.gBASICTYPES.GOOGLE_MAP,                                                                      // 690
        message: '', content: null,                                                                                    // 691
        submitted: now,                                                                                                // 692
        CSSclass: '',                                                                                                  // 693
        avatar: '<i class=\"fa fa-map-marker\"></i>'                                                                   // 694
    });                                                                                                                // 679
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 697
        title: 'Google Drive',                                                                                         // 698
        userID: user._id,                                                                                              // 699
        author: user.profile.name,                                                                                     // 700
        path: null,                                                                                                    // 701
        reusable: 'free',                                                                                              // 702
        special: true,                                                                                                 // 703
        privacy: "public",                                                                                             // 704
        status: 'published',                                                                                           // 705
        isBasic: true,                                                                                                 // 706
        isStarterTemplate: true,                                                                                       // 707
        type: BuzzyGlobal.gBASICTYPES.GOOGLE_DRIVE,                                                                    // 708
        message: '', content: null,                                                                                    // 709
        submitted: now,                                                                                                // 710
        CSSclass: '',                                                                                                  // 711
        avatar: '<i class=\"fa fa-google\"></i>'                                                                       // 712
    });                                                                                                                // 697
                                                                                                                       //
    tempResourceID = Resources.insert({                                                                                // 715
        title: 'Web Content',                                                                                          // 716
        userID: user._id,                                                                                              // 717
        author: user.profile.name,                                                                                     // 718
        path: null,                                                                                                    // 719
        reusable: 'free',                                                                                              // 720
        special: true,                                                                                                 // 721
        privacy: "public",                                                                                             // 722
        status: 'published',                                                                                           // 723
        isBasic: true,                                                                                                 // 724
        isStarterTemplate: true,                                                                                       // 725
        type: BuzzyGlobal.gBASICTYPES.EXTERNAL_SERVICE,                                                                // 726
        message: '', content: null,                                                                                    // 727
        submitted: now,                                                                                                // 728
        CSSclass: '',                                                                                                  // 729
        avatar: '<i class=\"fa fa-globe\"></i>'                                                                        // 730
    });                                                                                                                // 715
                                                                                                                       //
    /*                                                                                                                 // 735
        Resources.insert({                                                                                             //
            title: 'Some item A' ,                                                                                     //
            userID: user._id,                                                                                          //
            author: user.profile.name,                                                                                 //
            path: "," + tempResourceID   + "," + tempResourceIDChild1 + ",",                                           //
            reusable:'free',                                                                                           //
            type: 'message',                                                                                           //
            CSSclass: '',                                                                                              //
            submitted: now - i * 3600 * 1000,                                                                          //
            avatar: ''                                                                                                 //
        });                                                                                                            //
         Resources.insert({                                                                                            //
            title: 'Some item B' ,                                                                                     //
            userID: user._id,                                                                                          //
            author: user.profile.name,                                                                                 //
            path: "," + tempResourceID  + "," + tempResourceIDChild1 + ",",                                            //
            reusable:'free',                                                                                           //
            type: 'message',                                                                                           //
            CSSclass: '',                                                                                              //
            submitted: now - i * 3600 * 1000,                                                                          //
            avatar: ''                                                                                                 //
        });                                                                                                            //
         var tempInsertID = Resources.insert({                                                                         //
            _id: new Meteor.Collection.ObjectID()._str,                                                                //
            title: 'Some item C' ,                                                                                     //
            userID: user._id,                                                                                          //
            author: user.profile.name,                                                                                 //
            path: "," + tempResourceID  + "," + tempResourceIDChild1 + ",",                                            //
            reusable:'free',                                                                                           //
            type: 'message',                                                                                           //
            CSSclass: '',                                                                                              //
            submitted: now - i * 3600 * 1000,                                                                          //
            avatar: ''                                                                                                 //
        });                                                                                                            //
        console.log("tempInsertID:" +tempInsertID);                                                                    //
    */                                                                                                                 //
    /*                                                                                                                 // 774
    tempResourceID = ContentLayouts.insert({                                                                           //
        title: '2 Column' ,                                                                                            //
        userID: user._id,                                                                                              //
        author: user.profile.name,                                                                                     //
        type: 'contentlayout',                                                                                         //
        contentLayoutHTML: 'col-sm-6',                                                                                 //
        submitted: now - i * 3600 * 1000,                                                                              //
        avatar:'<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n       <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
     });                                                                                                               //
    tempResourceID = ContentLayouts.insert({                                                                           //
        title: '3 Column' ,                                                                                            //
        userID: user._id,                                                                                              //
        author: user.profile.name,                                                                                     //
        type: 'contentlayout',                                                                                         //
        contentLayoutHTML: 'col-sm-4',                                                                                 //
        submitted: now - i * 3600 * 1000,                                                                              //
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n        <td><div><\/div><\/td>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>\r\n    <\/tr>\r\n    <\/table>'
    });                                                                                                                //
    tempResourceID = ContentLayouts.insert({                                                                           //
        title: '4 Column' ,                                                                                            //
        userID: user._id,                                                                                              //
        author: user.profile.name,                                                                                     //
        type: 'contentlayout',                                                                                         //
        contentLayoutHTML: 'col-sm-3',                                                                                 //
        submitted: now - i * 3600 * 1000,                                                                              //
        avatar: '<table class=\"layoutAvatar\">\r\n    <tr>\r\n        <td><div><\/div><\/td>\r\n        <td><div><\/div><\/td>\r\n        <td><div><\/div><\/td>\r\n        <td><div><\/div><\/td>\r\n    <\/tr>\r\n<\/table>'
    });                                                                                                                //
    */                                                                                                                 //
                                                                                                                       //
    /*                                                                                                                 // 806
        // connect the twitter api                                                                                     //
        console.log("about to creat new twit");                                                                        //
        var twit = new TwitMaker({                                                                                     //
            consumer_key: 'bIzTRcmTZjoCslPLlBWdx4mGR',                                                                 //
            consumer_secret: 'GvHWwvZGUW6nxHxPb5Bwohefaw0EgwZ5Hy3eLVE904edkzO4hR',                                     //
            access_token: '8525862-N1wT6QO3pPtBpMPdKjcm06adNKnp14nvtCo2LMUM2M',                                        //
            access_token_secret: '2PyZdmO2AktnJ3yO3KETrA3F4BQMFa1xVk5hthtkVsmry'                                       //
        });                                                                                                            //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
        twit.get('search/tweets', { q: 'cnn', lang:'en', count: 10 }, function(err, data, response) {                  //
            console.log(data.statuses[0]);                                                                             //
                                                                                                                       //
            //var stuff = JSON.parse(data);                                                                            //
            var Fiber = Npm.require('fibers');                                                                         //
                                                                                                                       //
            console.log("for 0 ------------------------------");                                                       //
            var i = 0;                                                                                                 //
            console.log("text:" + data.statuses[i].text);                                                              //
            console.log("user:" + data.statuses[i].user.name);                                                         //
            console.log("created:" + data.statuses[i].created_at);                                                     //
            //console.log("url:" + data.statuses[i].url);                                                              //
                                                                                                                       //
                                                                                                                       //
            Fiber(function() {                                                                                         //
                                                                                                                       //
                console.log("in fiber:" + data.statuses[0].text);                                                      //
                for (i in data.statuses){                                                                              //
                    var insertedTweet = TweetCache.insert({                                                            //
                        text: data.statuses[i].text,                                                                   //
                        user: data.statuses[i].user.name,                                                              //
                        created: data.statuses[i].created_at                                                           //
                    });                                                                                                //
                    console.log("insertedTweet:" + insertedTweet);                                                     //
                                                                                                                       //
                }                                                                                                      //
                                                                                                                       //
                                                                                                                       //
            }).run();                                                                                                  //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
        });                                                                                                            //
                                                                                                                       //
        //CacheIGForSearchTerm("surfing");                                                                             //
                                                                                                                       //
        /*ig.user('adam_ginsburg', function(err, result, limit) {                                                      //
         console.log("err:" + err);                                                                                    //
         console.log("result:" + result);                                                                              //
                                                                                                                       //
         });*/                                                                                                         //
}                                                                                                                      // 866
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"lookbackEmails.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/lookbackEmails.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 25/05/15.                                                                                //
 */                                                                                                                    //
                                                                                                                       //
Mailer.config({                                                                                                        // 7
    from: 'Buzzy Buzz <info@buzzy.buzz>',                                                                              // 8
    replyTo: 'Buzzy Buzz <info@buzzy.buzz>',                                                                           // 9
    testEmail: 'adam.ginsburg@gmail.com',                                                                              // 10
    logger: console,                                                                                                   // 11
    addRoutes: false                                                                                                   // 12
                                                                                                                       //
});                                                                                                                    // 7
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 16
                                                                                                                       //
    Mailer.init({                                                                                                      // 18
        templates: Templates, // Global Templates namespace, see lib/templates.js.                                     // 19
        helpers: TemplateHelpers, // Global template helper namespace.                                                 // 20
        layout: {                                                                                                      // 21
            name: 'emailLayout',                                                                                       // 22
            path: 'emails/email-notification/layout.html', // Relative to 'private' dir.                               // 23
            css: 'emails/email-notification/style.css'                                                                 // 24
        }                                                                                                              // 21
    });                                                                                                                // 18
});                                                                                                                    // 28
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"phantomjs.js":function(require){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/phantomjs.js                                                                                                 //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 25/11/2014.                                                                              //
 */                                                                                                                    //
/*Meteor.startup(function (){                                                                                          // 4
    var phantomExec, result, titleTest;                                                                                //
                                                                                                                       //
    phantomExec = phantomLaunch();                                                                                     //
                                                                                                                       //
    titleTest = function(url, callback) {                                                                              //
        var page, webpage;                                                                                             //
        webpage = require('webpage');                                                                                  //
        page = webpage.create();                                                                                       //
        return page.open(url, function(status) {                                                                       //
                                                                                                                       //
            var title;                                                                                                 //
            if (status === 'fail') {                                                                                   //
                return callback('load-failure');                                                                       //
            } else {                                                                                                   //
                title = page.evaluate(function() {                                                                     //
                    return document.title;                                                                             //
                });                                                                                                    //
                return callback(void 0, title);                                                                        //
            }                                                                                                          //
        });                                                                                                            //
    };                                                                                                                 //
    screenShot = function(url, callback) {                                                                             //
        var page = require('webpage').create();                                                                        //
        page.open(url, function() {                                                                                    //
            page.render('phantom.png');                                                                                //
            setTimeout(function() {                                                                                    //
                phantom.exit();                                                                                        //
                return callback(void 0, "done");                                                                       //
            }, 5000);                                                                                                  //
            //phantom.exit();                                                                                          //
                                                                                                                       //
        });                                                                                                            //
    };                                                                                                                 //
                                                                                                                       //
    screenShot2 = function(url, callback) {                                                                            //
        var page = require("webpage").create();                                                                        //
        var homePage = url;                                                                                            //
        page.settings.javascriptEnabled = true;                                                                        //
        page.settings.loadImages = true;                                                                               //
        page.open(homePage);                                                                                           //
        page.onLoadFinished = function(status) {                                                                       //
            var url = page.url;                                                                                        //
            console.log("Status:  " + status);                                                                         //
            console.log("Loaded:  " + url);                                                                            //
            page.render("google.png");                                                                                 //
            phantom.exit();                                                                                            //
        };                                                                                                             //
    };                                                                                                                 //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
    //result = phantomExec(screenShot2, 'http://google.com/');                                                         //
                                                                                                                       //
    console.log("Phantom test:" + result);                                                                             //
                                                                                                                       //
});*/                                                                                                                  //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"publications.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/publications.js                                                                                              //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
var getContactID = function getContactID(contact) {                                                                    // 1
    if (contact.status === BuzzyGlobal.gUSERSTATUS.PENDING && contact.userID === this.userId) {                        // 2
        return contact.userID;                                                                                         // 3
    } else {                                                                                                           // 4
        return contact.contactID;                                                                                      // 5
    }                                                                                                                  // 6
};                                                                                                                     // 8
                                                                                                                       //
var getUserContacts = function getUserContacts(resource, self) {                                                       // 10
    if (Meteor.settings.BUZZY_DEBUG) {                                                                                 // 11
        var perfStartTime = new Date().getTime();                                                                      // 12
        console.log("PERF usersForResource contactList START", perfStartTime);                                         // 13
    }                                                                                                                  // 14
    var contactList = _.without(resource.readers.concat(resource.editors, resource.owners), self.userId);              // 15
    if (Meteor.settings.BUZZY_DEBUG) {                                                                                 // 16
        var perfEndTime = new Date().getTime();                                                                        // 17
        console.log("PERF usersForResource contactList DUR", perfEndTime - perfStartTime);                             // 18
    }                                                                                                                  // 19
    return contactList;                                                                                                // 20
};                                                                                                                     // 21
                                                                                                                       //
Meteor.publish("microAppVotesAllForApp", function (parentResourceID) {                                                 // 23
    this.unblock();                                                                                                    // 24
    if (this.userId && parentResourceID) {                                                                             // 25
        var resource = Resources.findOne({ _id: parentResourceID });                                                   // 26
        if (Resources.canView(this.userId, resource)) {                                                                // 27
            //need to change this to check fieldLevel                                                                  // 27
            return MicroAppVotes.find({ parentResourceID: parentResourceID });                                         // 28
        }                                                                                                              // 29
    }                                                                                                                  // 31
});                                                                                                                    // 32
                                                                                                                       //
Meteor.publish("microAppActionRule", function (parentResourceID) {                                                     // 34
    this.unblock();                                                                                                    // 35
    if (this.userId && parentResourceID) {                                                                             // 36
        var resource = Resources.findOne({ _id: parentResourceID });                                                   // 37
        if (Resources.canEdit(this.userId, resource)) {                                                                // 38
            //need to change this to check fieldLevel                                                                  // 38
            return MicroAppActionRules.find({ parentResourceID: parentResourceID });                                   // 39
        }                                                                                                              // 40
    }                                                                                                                  // 42
});                                                                                                                    // 43
                                                                                                                       //
Meteor.publish("microAppVotes", function (microAppDataFieldObj) {                                                      // 45
    this.unblock();                                                                                                    // 46
    if (this.userId && microAppDataFieldObj) {                                                                         // 47
        var resource = Resources.findOne({ _id: microAppDataFieldObj.parentResourceID });                              // 48
        if (Resources.canView(this.userId, resource)) {                                                                // 49
            //need to change this to check fieldLevel                                                                  // 49
            console.log("FieldID:", microAppDataFieldObj.voteFieldID);                                                 // 50
            return MicroAppVotes.find({ voteFieldID: microAppDataFieldObj.voteFieldID });                              // 51
        }                                                                                                              // 52
    }                                                                                                                  // 54
});                                                                                                                    // 55
                                                                                                                       //
Meteor.publish("microAppFieldsX", function (resourceID) {                                                              // 57
    this.unblock();                                                                                                    // 58
    if (this.userId && resourceID) {                                                                                   // 59
        var resource = Resources.findOne({ _id: resourceID });                                                         // 60
        if (Resources.canView(this.userId, resource)) {                                                                // 61
            return MicroAppFields.find({ parentResourceID: resourceID });                                              // 62
        }                                                                                                              // 63
    }                                                                                                                  // 65
});                                                                                                                    // 65
Meteor.publish("microAppDataSingle", function (resourceID, appID) {                                                    // 66
    this.unblock();                                                                                                    // 67
    if (this.userId && resourceID) {                                                                                   // 68
        var resource = Resources.findOne({ _id: resourceID });                                                         // 69
        if (Resources.canView(this.userId, resource)) {                                                                // 70
            return MicroAppData.find({ _id: appID });                                                                  // 71
        }                                                                                                              // 72
    }                                                                                                                  // 74
});                                                                                                                    // 75
Meteor.publish("microAppChildren", function (resourceID, appID, fieldID) {                                             // 76
    this.unblock();                                                                                                    // 77
    if (this.userId && resourceID) {                                                                                   // 78
        var resource = Resources.findOne({ _id: resourceID });                                                         // 79
        if (Resources.canView(this.userId, resource)) {                                                                // 80
            return MicroAppChild.find({ parentAppItemID: appID, parentAppFieldID: fieldID });                          // 81
        }                                                                                                              // 82
    }                                                                                                                  // 84
});                                                                                                                    // 85
                                                                                                                       //
/*Meteor.publish("microAppDataX", function(resourceID, optMicroAppFilter) {                                            // 87
    this.unblock();                                                                                                    //
    if (this.userId && resourceID) {                                                                                   //
        var resource = Resources.findOne({_id:resourceID});                                                            //
        if (Resources.canView(this.userId,resource)){                                                                  //
            var currLimit = BuzzyGlobal.gMICROAPPDATA_LIMIT;                                                           //
            if (typeof optMicroAppFilter != "undefined"){                                                              //
                currLimit = optMicroAppFilter;                                                                         //
            }                                                                                                          //
            if (resource.type === BuzzyGlobal.gBASICTYPES.APPLICATION){                                                //
                                                                                                                       //
                var queryObj = {                                                                                       //
                    query: {parentResourceID: resource._id},                                                           //
                    projection: {sort: {sortVal: -1}, limit: currLimit}                                                //
                };                                                                                                     //
                                                                                                                       //
                if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR){
                    queryObj.query = {parentResourceID:  resource._id, userID:userID};                                 //
                }                                                                                                      //
                                                                                                                       //
                if (typeof optMicroAppFilter !== "undefined"  && optMicroAppFilter ) {                                 //
                    if (typeof optMicroAppFilter.field !== "undefined" && optMicroAppFilter.field ){                   //
                        switch( optMicroAppFilter.field){                                                              //
                            case "1":                                                                                  //
                                queryObj.projection = {sort: {sortVal: optMicroAppFilter.order}, limit: currLimit};    //
                                break;                                                                                 //
                            case "2":                                                                                  //
                                queryObj.projection = {sort: {sortVal2: optMicroAppFilter.order}, limit: currLimit};   //
                                break;                                                                                 //
                            case "3":                                                                                  //
                                queryObj.projection = {sort: {sortVal3: optMicroAppFilter.order}, limit: currLimit};   //
                                break;                                                                                 //
                                                                                                                       //
                        }                                                                                              //
                    }                                                                                                  //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                } else {                                                                                               //
                    if (typeof resource.content.sortOrder !== "undefined") {                                           //
                        var sortOrder = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING ? 1 : -1;     //
                        queryObj.projection.sort.sortVal = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING ? 1 : -1;
                    }                                                                                                  //
                }                                                                                                      //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                                                                                                                       //
                return MicroAppData.find(queryObj.query,queryObj.projection);                                          //
                                                                                                                       //
                                                                                                                       //
            } else {                                                                                                   //
                return;                                                                                                //
            }                                                                                                          //
        }                                                                                                              //
                                                                                                                       //
    }                                                                                                                  //
});*/                                                                                                                  //
Meteor.publish("myUser", function () {                                                                                 // 146
    this.unblock();                                                                                                    // 147
    if (this.userId) {                                                                                                 // 148
        return Users.find({ _id: this.userId }, {                                                                      // 149
            fields: {                                                                                                  // 152
                '_id': 1,                                                                                              // 154
                'subscriptionID': 1,                                                                                   // 155
                'profile': 1,                                                                                          // 156
                'username': 1,                                                                                         // 157
                'emails': 1,                                                                                           // 158
                'email': 1,                                                                                            // 159
                //'services':1                                                                                         // 160
                                                                                                                       //
                'services.google.picture': 1,                                                                          // 162
                'services.google.email': 1,                                                                            // 163
                'services.google.name': 1,                                                                             // 164
                'services.facebook.email': 1,                                                                          // 165
                'services.facebook.id': 1,                                                                             // 166
                'services.facebook.link': 1,                                                                           // 167
                'services.facebook.name': 1,                                                                           // 168
                'services.google.verified_email': 1,                                                                   // 169
                'services.password.verified_email': 1,                                                                 // 170
                'completedSetup': 1,                                                                                   // 171
                'invitingResourceID': 1,                                                                               // 172
                'services.google.accessToken': 1,                                                                      // 173
                'services.google.expiresAt': 1                                                                         // 174
            },                                                                                                         // 153
            sort: { "profile.name": 1 },                                                                               // 176
            limit: 1                                                                                                   // 177
        });                                                                                                            // 151
    } else {                                                                                                           // 180
        return null;                                                                                                   // 181
    }                                                                                                                  // 182
});                                                                                                                    // 184
                                                                                                                       //
Meteor.publishComposite('viewedComments', function (commentID) {                                                       // 186
    this.unblock();                                                                                                    // 187
    var comment = Comments.findOne({ _id: commentID });                                                                // 188
    var resource = Resources.findOne({ _id: comment.topLevelParentID });                                               // 189
    if (Resources.canEdit(this.userId, resource) || this.userId === comment.userID) {                                  // 190
        return {                                                                                                       // 191
            find: function () {                                                                                        // 192
                function find() {                                                                                      // 192
                    return CommentsViewed.find({ commentID: commentID });                                              // 193
                }                                                                                                      // 194
                                                                                                                       //
                return find;                                                                                           // 192
            }(),                                                                                                       // 192
            children: [{ find: function () {                                                                           // 195
                    function find(comment) {                                                                           // 196
                        return Users.find({ _id: comment.userID });                                                    // 197
                    }                                                                                                  // 198
                                                                                                                       //
                    return find;                                                                                       // 196
                }() }]                                                                                                 // 196
        };                                                                                                             // 191
    } else {                                                                                                           // 201
        return {};                                                                                                     // 202
    }                                                                                                                  // 203
});                                                                                                                    // 206
                                                                                                                       //
Meteor.publishComposite('singleUserContact', function (userID) {                                                       // 208
    this.unblock();                                                                                                    // 209
                                                                                                                       //
    return {                                                                                                           // 211
        find: function () {                                                                                            // 212
            function find() {                                                                                          // 212
                return UserContacts.find({ $or: [{ $and: [{ userID: this.userId }, { contactID: userID }] }, { $and: [{ contactID: this.userId }, { status: BuzzyGlobal.gUSERSTATUS.PENDING }] }] }, { limit: 1 });
            }                                                                                                          // 217
                                                                                                                       //
            return find;                                                                                               // 212
        }(),                                                                                                           // 212
        children: [{ find: function () {                                                                               // 218
                function find(contact) {                                                                               // 219
                                                                                                                       //
                    return Users.find({ _id: contact.contactID }, {                                                    // 221
                        fields: {                                                                                      // 224
                            '_id': 1,                                                                                  // 226
                            'profile': 1,                                                                              // 227
                            'username': 1,                                                                             // 228
                            'emails': 1,                                                                               // 229
                            'email': 1,                                                                                // 230
                            'stripeInfo.stripe_user_id': 1,                                                            // 231
                            'stripeInfo.stripe_publishable_key': 1,                                                    // 232
                            'stripeInfo.hasFeeBuffer': 1,                                                              // 233
                            'stripeInfo.applyFeeFixed': 1,                                                             // 234
                            'stripeInfo.applyFeeVariable': 1,                                                          // 235
                            'stripeInfo.feeFixed': 1,                                                                  // 236
                            'stripeInfo.feePercent': 1,                                                                // 237
                            'stripeInfo.currency': 1,                                                                  // 238
                            'services.google.picture': 1,                                                              // 239
                            'services.google.email': 1,                                                                // 240
                            'services.google.name': 1,                                                                 // 241
                            'services.facebook.email': 1,                                                              // 242
                            'services.facebook.id': 1,                                                                 // 243
                            'services.facebook.link': 1,                                                               // 244
                            'services.facebook.name': 1,                                                               // 245
                            'services.google.verified_email': 1,                                                       // 246
                            'services.password.verified_email': 1                                                      // 247
                                                                                                                       //
                        },                                                                                             // 225
                        sort: { "profile.name": 1 },                                                                   // 250
                        limit: 1                                                                                       // 251
                    });                                                                                                // 223
                }                                                                                                      // 255
                                                                                                                       //
                return find;                                                                                           // 219
            }() }]                                                                                                     // 219
    };                                                                                                                 // 211
});                                                                                                                    // 259
                                                                                                                       //
Meteor.publish('users', function () {                                                                                  // 261
    this.unblock();                                                                                                    // 262
    var self = this;                                                                                                   // 263
    var userContacts = UserContacts.find({ $or: [                                                                      // 264
        //{userID:self.userId},                                                                                        // 266
        { $and: [{ contactID: this.userId }, { status: BuzzyGlobal.gUSERSTATUS.PENDING }] }] }).map(function (item) {  // 267
        if (item.userID === self.userId) {                                                                             // 270
            return item.contactID;                                                                                     // 271
        } else {                                                                                                       // 272
            return item.userID;                                                                                        // 273
        }                                                                                                              // 274
    });                                                                                                                // 276
                                                                                                                       //
    //console.log("publish users:",userContacts , self.userId);                                                        // 279
                                                                                                                       //
    if (userContacts.length > 0) {                                                                                     // 281
                                                                                                                       //
        return Users.find({ $or: [                                                                                     // 283
            //{_id:self.userId},                                                                                       // 285
            { _id: { $in: userContacts } }] }, {                                                                       // 286
            fields: {                                                                                                  // 290
                '_id': 1,                                                                                              // 292
                'profile': 1,                                                                                          // 293
                'subscriptionID': 1,                                                                                   // 294
                'username': 1,                                                                                         // 295
                'emails': 1,                                                                                           // 296
                'email': 1,                                                                                            // 297
                //'services':1                                                                                         // 298
                'services.google.picture': 1,                                                                          // 299
                'services.google.email': 1,                                                                            // 300
                'services.google.name': 1,                                                                             // 301
                'services.facebook.email': 1,                                                                          // 302
                'stripeCustomerInfo': 1,                                                                               // 303
                'stripeInfo.stripe_user_id': 1,                                                                        // 304
                'stripeInfo.hasFeeBuffer': 1,                                                                          // 305
                'stripeInfo.applyFeeFixed': 1,                                                                         // 306
                'stripeInfo.applyFeeVariable': 1,                                                                      // 307
                'stripeInfo.feeFixed': 1,                                                                              // 308
                'stripeInfo.feePercent': 1,                                                                            // 309
                'stripeInfo.currency': 1,                                                                              // 310
                'services.facebook.id': 1,                                                                             // 311
                'services.facebook.link': 1,                                                                           // 312
                'services.facebook.name': 1,                                                                           // 313
                'services.google.verified_email': 1,                                                                   // 314
                'services.password.verified_email': 1                                                                  // 315
                                                                                                                       //
            },                                                                                                         // 291
            sort: { "profile.name": 1 },                                                                               // 319
            limit: BuzzyGlobal.gUSER_CONTACTS_LIMIT                                                                    // 320
                                                                                                                       //
        });                                                                                                            // 289
    } else {                                                                                                           // 324
        return;                                                                                                        // 325
    }                                                                                                                  // 326
});                                                                                                                    // 329
                                                                                                                       //
Meteor.publishComposite('usersForResource', function (resourceID) {                                                    // 332
    this.unblock();                                                                                                    // 333
    if (Meteor.settings.BUZZY_DEBUG) {                                                                                 // 334
        var perfStartTime = new Date().getTime();                                                                      // 335
        console.log("PERF usersForResource Resources.find START", perfStartTime);                                      // 336
    }                                                                                                                  // 337
                                                                                                                       //
    var self = this;                                                                                                   // 339
                                                                                                                       //
    return {                                                                                                           // 342
        find: function () {                                                                                            // 343
            function find() {                                                                                          // 343
                                                                                                                       //
                return Resources.find({ _id: resourceID }, { limit: 1 });                                              // 345
            }                                                                                                          // 346
                                                                                                                       //
            return find;                                                                                               // 343
        }(),                                                                                                           // 343
        children: [{                                                                                                   // 347
            find: function () {                                                                                        // 349
                function find(resource) {                                                                              // 349
                    var userContacts = getUserContacts(resource, self);                                                // 350
                                                                                                                       //
                    if (userContacts.length > 0) {                                                                     // 354
                        if (Meteor.settings.BUZZY_DEBUG) {                                                             // 355
                            var perfStartTime = new Date().getTime();                                                  // 356
                            console.log("PERF usersForResource Users.find START", perfStartTime);                      // 357
                        }                                                                                              // 358
                        var userCursor = Users.find({ _id: { $in: userContacts } }, {                                  // 359
                            fields: {                                                                                  // 362
                                '_id': 1,                                                                              // 363
                                'profile': 1,                                                                          // 364
                                'subscriptionID': 1,                                                                   // 365
                                'username': 1,                                                                         // 366
                                'emails': 1,                                                                           // 367
                                'email': 1,                                                                            // 368
                                //'services':1                                                                         // 369
                                'services.google.picture': 1,                                                          // 370
                                'services.google.email': 1,                                                            // 371
                                'services.google.name': 1,                                                             // 372
                                'services.facebook.email': 1,                                                          // 373
                                'stripeCustomerInfo': 1,                                                               // 374
                                'stripeInfo.stripe_user_id': 1,                                                        // 375
                                'stripeInfo.hasFeeBuffer': 1,                                                          // 376
                                'stripeInfo.applyFeeFixed': 1,                                                         // 377
                                'stripeInfo.applyFeeVariable': 1,                                                      // 378
                                'stripeInfo.feeFixed': 1,                                                              // 379
                                'stripeInfo.feePercent': 1,                                                            // 380
                                'stripeInfo.currency': 1,                                                              // 381
                                'services.facebook.id': 1,                                                             // 382
                                'services.facebook.link': 1,                                                           // 383
                                'services.facebook.name': 1,                                                           // 384
                                'services.google.verified_email': 1,                                                   // 385
                                'services.password.verified_email': 1                                                  // 386
                                                                                                                       //
                            }                                                                                          // 362
                        });                                                                                            // 361
                        if (Meteor.settings.BUZZY_DEBUG) {                                                             // 391
                            var perfEndTime = new Date().getTime();                                                    // 392
                            console.log("PERF usersForResource Users.find DUR", perfEndTime - perfStartTime);          // 393
                        }                                                                                              // 394
                        return userCursor;                                                                             // 395
                    } else {                                                                                           // 396
                        return null;                                                                                   // 397
                    }                                                                                                  // 398
                }                                                                                                      // 402
                                                                                                                       //
                return find;                                                                                           // 349
            }()                                                                                                        // 349
                                                                                                                       //
        }, {                                                                                                           // 348
            find: function () {                                                                                        // 406
                function find(resource) {                                                                              // 406
                                                                                                                       //
                    var userContacts = getUserContacts(resource, self);                                                // 408
                    if (userContacts.length > 0) {                                                                     // 409
                        if (Meteor.settings.BUZZY_DEBUG) {                                                             // 410
                            var perfStartTime = new Date().getTime();                                                  // 411
                            console.log("PERF usersForResource UserContacts.find START", perfStartTime);               // 412
                        }                                                                                              // 413
                        var userContactsCursor = UserContacts.find({ contactID: { $in: userContacts } });              // 414
                        if (Meteor.settings.BUZZY_DEBUG) {                                                             // 415
                            var perfEndTime = new Date().getTime();                                                    // 416
                            console.log("PERF usersForResource UserContacts.find  DUR", perfEndTime - perfStartTime);  // 417
                        }                                                                                              // 418
                        return userContactsCursor;                                                                     // 419
                    } else {                                                                                           // 420
                        return null;                                                                                   // 421
                    }                                                                                                  // 422
                }                                                                                                      // 424
                                                                                                                       //
                return find;                                                                                           // 406
            }()                                                                                                        // 406
                                                                                                                       //
        }]                                                                                                             // 405
                                                                                                                       //
    };                                                                                                                 // 342
});                                                                                                                    // 431
                                                                                                                       //
Meteor.publishComposite('searchContacts', function (searchText, excludeContacts) {                                     // 434
    this.unblock();                                                                                                    // 435
    var self = this;                                                                                                   // 436
    var filter = new RegExp(searchText, 'i');                                                                          // 437
                                                                                                                       //
    if (typeof excludeContacts !== "undefined") {                                                                      // 439
        return {                                                                                                       // 440
            find: function () {                                                                                        // 441
                function find() {                                                                                      // 441
                    return UserContacts.find({ $and: [{ userID: this.userId }, { $or: [{ name: filter }, { email: filter }] }, { contactID: { $nin: excludeContacts } }] }, { sort: { name: 1 }, limit: 20 });
                }                                                                                                      // 449
                                                                                                                       //
                return find;                                                                                           // 441
            }(),                                                                                                       // 441
            children: [{                                                                                               // 450
                find: function () {                                                                                    // 452
                    function find(contact) {                                                                           // 452
                                                                                                                       //
                        return Users.find({ _id: contact.contactID }, {                                                // 454
                            fields: {                                                                                  // 457
                                '_id': 1,                                                                              // 458
                                'profile': 1,                                                                          // 459
                                'subscriptionID': 1,                                                                   // 460
                                'username': 1,                                                                         // 461
                                'emails': 1,                                                                           // 462
                                'email': 1,                                                                            // 463
                                //'services':1                                                                         // 464
                                'services.google.picture': 1,                                                          // 465
                                'services.google.email': 1,                                                            // 466
                                'services.google.name': 1,                                                             // 467
                                'services.facebook.email': 1,                                                          // 468
                                'services.facebook.id': 1,                                                             // 469
                                'services.facebook.link': 1,                                                           // 470
                                'services.facebook.name': 1,                                                           // 471
                                'services.google.verified_email': 1,                                                   // 472
                                'services.password.verified_email': 1                                                  // 473
                                                                                                                       //
                            },                                                                                         // 457
                            limit: 1                                                                                   // 476
                        });                                                                                            // 456
                    }                                                                                                  // 479
                                                                                                                       //
                    return find;                                                                                       // 452
                }()                                                                                                    // 452
            }]                                                                                                         // 451
        };                                                                                                             // 440
    } else {                                                                                                           // 487
        return {                                                                                                       // 488
            find: function () {                                                                                        // 489
                function find() {                                                                                      // 489
                    return UserContacts.find({ $and: [{ userID: this.userId }, { $or: [{ name: filter }, { email: filter }] }] }, { sort: { name: 1 }, limit: 20 });
                }                                                                                                      // 496
                                                                                                                       //
                return find;                                                                                           // 489
            }(),                                                                                                       // 489
            children: [{                                                                                               // 497
                find: function () {                                                                                    // 499
                    function find(contact) {                                                                           // 499
                                                                                                                       //
                        return Users.find({ _id: contact.contactID }, {                                                // 501
                            fields: {                                                                                  // 504
                                '_id': 1,                                                                              // 505
                                'profile': 1,                                                                          // 506
                                'subscriptionID': 1,                                                                   // 507
                                'username': 1,                                                                         // 508
                                'emails': 1,                                                                           // 509
                                'email': 1,                                                                            // 510
                                //'services':1                                                                         // 511
                                'services.google.picture': 1,                                                          // 512
                                'services.google.email': 1,                                                            // 513
                                'services.google.name': 1,                                                             // 514
                                'services.facebook.email': 1,                                                          // 515
                                'services.facebook.id': 1,                                                             // 516
                                'services.facebook.link': 1,                                                           // 517
                                'services.facebook.name': 1,                                                           // 518
                                'services.google.verified_email': 1,                                                   // 519
                                'services.password.verified_email': 1                                                  // 520
                                                                                                                       //
                            },                                                                                         // 504
                            limit: 1                                                                                   // 524
                        });                                                                                            // 503
                    }                                                                                                  // 526
                                                                                                                       //
                    return find;                                                                                       // 499
                }()                                                                                                    // 499
            }]                                                                                                         // 498
        };                                                                                                             // 488
    }                                                                                                                  // 530
});                                                                                                                    // 535
                                                                                                                       //
Meteor.publish('usersList', function (listIDs) {                                                                       // 537
    this.unblock();                                                                                                    // 538
    var self = this;                                                                                                   // 539
    if (self.userId) {                                                                                                 // 540
        return Users.find({ _id: { $in: listIDs } }, {                                                                 // 541
            fields: {                                                                                                  // 544
                '_id': 1,                                                                                              // 545
                'profile': 1,                                                                                          // 546
                'subscriptionID': 1,                                                                                   // 547
                'username': 1,                                                                                         // 548
                'emails': 1,                                                                                           // 549
                'email': 1,                                                                                            // 550
                //'services':1                                                                                         // 551
                'services.google.picture': 1,                                                                          // 552
                'services.google.email': 1,                                                                            // 553
                'services.google.name': 1,                                                                             // 554
                'services.facebook.email': 1,                                                                          // 555
                'services.facebook.id': 1,                                                                             // 556
                'services.facebook.link': 1,                                                                           // 557
                'services.facebook.name': 1,                                                                           // 558
                'services.google.verified_email': 1,                                                                   // 559
                'services.password.verified_email': 1                                                                  // 560
                                                                                                                       //
            }                                                                                                          // 544
        });                                                                                                            // 543
    }                                                                                                                  // 565
});                                                                                                                    // 568
                                                                                                                       //
Meteor.publish('searchBuzzWithParticipants', function (participants, currentResourceID) {                              // 571
    this.unblock();                                                                                                    // 572
                                                                                                                       //
    return Resources.find({ $and: [{ _id: { $ne: currentResourceID } }, { type: BuzzyGlobal.gBASICTYPES.BUZZ }, { $or: [{ status: BuzzyGlobal.gRESOURCE_STATUS.DRAFT }, { status: BuzzyGlobal.gRESOURCE_STATUS.PUBLISHED }] }, { $or: [{ readers: { $all: participants } }, { editors: { $all: participants } }, { owners: { $all: participants } }] }] }, { sort: { name: 1 }, limit: 20 });
});                                                                                                                    // 582
                                                                                                                       //
Meteor.publishComposite('myUserContacts', function (query) {                                                           // 584
    this.unblock();                                                                                                    // 585
                                                                                                                       //
    var self = this;                                                                                                   // 587
    var searchQuery = {};                                                                                              // 588
    if (query) {                                                                                                       // 589
        var searchExpression = new RegExp(query, "i");                                                                 // 590
        return {                                                                                                       // 591
            find: function () {                                                                                        // 592
                function find() {                                                                                      // 592
                    return UserContacts.find({                                                                         // 593
                        $or: [{ userID: self.userId, name: searchExpression }, { userID: self.userId, email: searchExpression }, { $and: [{ contactID: self.userId }, { status: BuzzyGlobal.gUSERSTATUS.PENDING }, { name: searchExpression }] }, { $and: [{ contactID: self.userId }, { status: BuzzyGlobal.gUSERSTATUS.PENDING }, { email: searchExpression }] }]
                    }, { limit: 20 });                                                                                 // 594
                }                                                                                                      // 602
                                                                                                                       //
                return find;                                                                                           // 592
            }(),                                                                                                       // 592
            children: [{                                                                                               // 603
                find: function () {                                                                                    // 605
                    function find(contact) {                                                                           // 605
                        var contactID = getContactID(contact);                                                         // 606
                        return Users.find({ _id: contactID }, {                                                        // 607
                            fields: {                                                                                  // 610
                                '_id': 1,                                                                              // 611
                                'profile': 1,                                                                          // 612
                                'subscriptionID': 1,                                                                   // 613
                                'username': 1,                                                                         // 614
                                'emails': 1,                                                                           // 615
                                'email': 1,                                                                            // 616
                                //'services':1                                                                         // 617
                                'services.google.picture': 1,                                                          // 618
                                'services.google.email': 1,                                                            // 619
                                'services.google.name': 1,                                                             // 620
                                'services.facebook.email': 1,                                                          // 621
                                'services.facebook.id': 1,                                                             // 622
                                'services.facebook.link': 1,                                                           // 623
                                'services.facebook.name': 1,                                                           // 624
                                'services.google.verified_email': 1,                                                   // 625
                                'services.password.verified_email': 1                                                  // 626
                                                                                                                       //
                            },                                                                                         // 610
                            limit: 1                                                                                   // 630
                        });                                                                                            // 609
                    }                                                                                                  // 632
                                                                                                                       //
                    return find;                                                                                       // 605
                }()                                                                                                    // 605
            }]                                                                                                         // 604
        };                                                                                                             // 591
    } else {                                                                                                           // 637
        return {                                                                                                       // 638
            find: function () {                                                                                        // 639
                function find() {                                                                                      // 639
                    return UserContacts.find({                                                                         // 640
                        $or: [{ userID: self.userId }, { $and: [{ contactID: self.userId }, { status: BuzzyGlobal.gUSERSTATUS.PENDING }] }]
                    }, { limit: 20 });                                                                                 // 641
                }                                                                                                      // 647
                                                                                                                       //
                return find;                                                                                           // 639
            }(),                                                                                                       // 639
            children: [{                                                                                               // 648
                find: function () {                                                                                    // 650
                    function find(contact) {                                                                           // 650
                        var contactID = getContactID(contact);                                                         // 651
                        return Users.find({ _id: contactID }, {                                                        // 652
                            fields: {                                                                                  // 655
                                '_id': 1,                                                                              // 656
                                'profile': 1,                                                                          // 657
                                'subscriptionID': 1,                                                                   // 658
                                'username': 1,                                                                         // 659
                                'emails': 1,                                                                           // 660
                                'email': 1,                                                                            // 661
                                //'services':1                                                                         // 662
                                'services.google.picture': 1,                                                          // 663
                                'services.google.email': 1,                                                            // 664
                                'services.google.name': 1,                                                             // 665
                                'services.facebook.email': 1,                                                          // 666
                                'services.facebook.id': 1,                                                             // 667
                                'services.facebook.link': 1,                                                           // 668
                                'services.facebook.name': 1,                                                           // 669
                                'services.google.verified_email': 1,                                                   // 670
                                'services.password.verified_email': 1                                                  // 671
                                                                                                                       //
                            },                                                                                         // 655
                            limit: 1                                                                                   // 675
                        });                                                                                            // 654
                    }                                                                                                  // 677
                                                                                                                       //
                    return find;                                                                                       // 650
                }()                                                                                                    // 650
            }]                                                                                                         // 649
        };                                                                                                             // 638
    }                                                                                                                  // 681
});                                                                                                                    // 688
                                                                                                                       //
Meteor.publishComposite('resourcesFavoriteAndRecent', function () {                                                    // 704
    this.unblock();                                                                                                    // 705
    var searchUserExpression = new RegExp(this.userId);                                                                // 706
                                                                                                                       //
    if (this.userId) {                                                                                                 // 708
        return {                                                                                                       // 709
            find: function () {                                                                                        // 710
                function find() {                                                                                      // 710
                                                                                                                       //
                    return Users.find({ _id: this.userId });                                                           // 712
                }                                                                                                      // 713
                                                                                                                       //
                return find;                                                                                           // 710
            }(),                                                                                                       // 710
            children: [{                                                                                               // 714
                find: function () {                                                                                    // 715
                    function find(user) {                                                                              // 715
                        if (typeof user.profile === "undefined" || typeof user.profile.favoriteBuzz === "undefined") {
                            return;                                                                                    // 717
                        }                                                                                              // 718
                        return Resources.find({ $or: [{ $and: [{ _id: { $in: user.profile.favoriteBuzz } }, { path: null }, { type: "buzz" }, { isStarterTemplate: false }, { $or: [{ userID: this.userId }, { editors: searchUserExpression }, { owners: searchUserExpression }] }, { $or: [{ status: 'draft' }, { status: 'published' }] }] }, { $and: [{ _id: { $in: user.profile.favoriteBuzz } }, { path: null }, { type: "buzz" }, { isStarterTemplate: false }, { readers: searchUserExpression }, { status: 'published' }] }] }, { limit: BuzzyGlobal.gMAX_HISTORY });
                    }                                                                                                  // 743
                                                                                                                       //
                    return find;                                                                                       // 715
                }()                                                                                                    // 715
            }, { find: function () {                                                                                   // 714
                    function find(user) {                                                                              // 745
                        if (typeof user.profile === "undefined" || typeof user.profile.recentBuzz === "undefined") {   // 746
                            return;                                                                                    // 747
                        }                                                                                              // 748
                        return Resources.find({ $or: [{ $and: [{ _id: { $in: user.profile.recentBuzz } }, { path: null }, { type: "buzz" }, { isStarterTemplate: false }, { $or: [{ userID: this.userId }, { editors: searchUserExpression }, { owners: searchUserExpression }] }, { $or: [{ status: 'draft' }, { status: 'published' }] }] }, { $and: [{ _id: { $in: user.profile.recentBuzz } }, { path: null }, { type: "buzz" }, { isStarterTemplate: false }, { readers: searchUserExpression }, { status: 'published' }] }] }, { limit: BuzzyGlobal.gMAX_HISTORY });
                    }                                                                                                  // 773
                                                                                                                       //
                    return find;                                                                                       // 745
                }()                                                                                                    // 745
            }]                                                                                                         // 745
                                                                                                                       //
        };                                                                                                             // 709
    }                                                                                                                  // 778
});                                                                                                                    // 781
                                                                                                                       //
Meteor.publish('resourcesAndImages', function (sortOptions, searchQuery, resourceListType, showTemplates) {            // 783
    this.unblock();                                                                                                    // 784
    var self = this;                                                                                                   // 785
    if (showTemplates) {                                                                                               // 786
        var query = templateQuery(this.userId, resourceListType, searchQuery);                                         // 787
    } else {                                                                                                           // 788
        var query = resourceQuery(this.userId, resourceListType, searchQuery);                                         // 789
    }                                                                                                                  // 790
    var searchExpression = new RegExp(searchQuery);                                                                    // 791
    //console.log("publish resourcesAndImages", this.userId, "sortoptions:",sortOptions, "q:", searchQuery, "listType:", resourceListType,"showT:",showTemplates);
    return Resources.find(query, sortOptions);                                                                         // 793
});                                                                                                                    // 795
                                                                                                                       //
Meteor.publish('userTagsResources', function (resourceID) {                                                            // 799
    // return UserTagsResources.find({$and:[{resourceID:resourceID},{userID:this.userId}]});                           // 800
    return UserTagsResources.find({ $and: [{ userID: this.userId }] });                                                // 801
});                                                                                                                    // 802
                                                                                                                       //
Meteor.publish('singleResource', function (id) {                                                                       // 806
    this.unblock();                                                                                                    // 807
    return id && Resources.find(id);                                                                                   // 808
});                                                                                                                    // 809
                                                                                                                       //
/// will need to fix this to only publish resources for the specific user, so will need to check permissions, just leaving as is for now/testing/initial dev
Meteor.publish('templateResources', function () {                                                                      // 815
    this.unblock();                                                                                                    // 816
    return Resources.find({                                                                                            // 817
        $and: [{ userID: this.userId }, { status: "published" }, { isStarterTemplate: true }]                          // 819
    });                                                                                                                // 818
});                                                                                                                    // 827
                                                                                                                       //
Meteor.publish('resourcesForAddition', function () {                                                                   // 829
    this.unblock();                                                                                                    // 830
    return Resources.find({                                                                                            // 831
        $or: [{                                                                                                        // 833
            $and: [{ status: "published" }, { privacy: "public" }, {                                                   // 835
                $or: [{ isStarterTemplate: true }, { isBasic: true }]                                                  // 840
            }]                                                                                                         // 839
        }]                                                                                                             // 834
    });                                                                                                                // 832
});                                                                                                                    // 854
                                                                                                                       //
Meteor.publishComposite('resourceComments', function (resourceID, commentLimit, optCommentID, optMicroAppFilter) {     // 858
    this.unblock();                                                                                                    // 859
    var self = this;                                                                                                   // 860
                                                                                                                       //
    var userID = this.userId;                                                                                          // 862
    var userSearchCommentsExpression = new RegExp(userID);                                                             // 863
    var comment = null;                                                                                                // 864
    if (typeof optCommentID !== "undefined" && optCommentID) {                                                         // 865
        comment = Comments.findOne({ _id: optCommentID });                                                             // 866
    }                                                                                                                  // 867
    if (!resourceID) {                                                                                                 // 868
        BuzzyGlobal.throwError("Invalid Params to resourceComments");                                                  // 869
    }                                                                                                                  // 870
                                                                                                                       //
    return {                                                                                                           // 872
        find: function () {                                                                                            // 873
            function find() {                                                                                          // 873
                                                                                                                       //
                var searchExpression = new RegExp("^," + resourceID + ",");                                            // 875
                var userSearchExpression = new RegExp(userID);                                                         // 876
                                                                                                                       //
                var resource = Resources.findOne({ _id: resourceID });                                                 // 878
                                                                                                                       //
                if (!resource) {                                                                                       // 880
                    return;                                                                                            // 881
                }                                                                                                      // 882
                                                                                                                       //
                if (resource.status === BuzzyGlobal.gRESOURCE_STATUS.ARCHIVED || resource.status === BuzzyGlobal.gRESOURCE_STATUS.DELETED) {
                    return;                                                                                            // 885
                }                                                                                                      // 886
                                                                                                                       //
                if (resource.status === BuzzyGlobal.gRESOURCE_STATUS.PUBLISHED && (resource.privacy === BuzzyGlobal.gPRIVACY.PUBLIC || resource.privacy === BuzzyGlobal.gPRIVACY.UNLISTED)) {
                    if (Meteor.settings.BUZZY_DEBUG) {                                                                 // 890
                        var perfStartTime = new Date().getTime();                                                      // 891
                        console.log("PERF resourceComments Resources.find START", perfStartTime);                      // 892
                    }                                                                                                  // 893
                    var resourcesList = Resources.find({ $and: [{ status: 'published' }, { $or: [{ _id: resourceID }, { path: searchExpression }] }] });
                    if (Meteor.settings.BUZZY_DEBUG) {                                                                 // 904
                        var perfEndTime = new Date().getTime();                                                        // 905
                        console.log("PERF usersForResource UserContacts.find  DUR", perfEndTime - perfStartTime);      // 906
                    }                                                                                                  // 907
                    return resourcesList;                                                                              // 908
                } else {                                                                                               // 910
                    if (userID && userID !== "undefined") {                                                            // 911
                                                                                                                       //
                        var userSearchExpression = new RegExp(userID);                                                 // 913
                        var resourcesCursor = Resources.find({ $or: [{ $and: [{ $or: [{ _id: resourceID }, { path: searchExpression }] }, { $or: [{ userID: userID }, { editors: userSearchExpression }, { owners: userSearchExpression }] }, { $or: [{ status: 'draft' }, { status: 'published' }] }] }, { $and: [{ $or: [{ _id: resourceID }, { path: searchExpression }] }, { readers: userSearchExpression }, { status: 'published' }] }] });
                        return resourcesCursor;                                                                        // 940
                    } else {                                                                                           // 943
                                                                                                                       //
                        return;                                                                                        // 945
                    }                                                                                                  // 947
                }                                                                                                      // 949
            }                                                                                                          // 950
                                                                                                                       //
            return find;                                                                                               // 873
        }(),                                                                                                           // 873
        children: [{                                                                                                   // 951
            find: function () {                                                                                        // 953
                function find(resource) {                                                                              // 953
                    var commentCursor;                                                                                 // 954
                    var coreQuery = {};                                                                                // 955
                                                                                                                       //
                    if (Resources.isAuthorOwner(this.userId, resource)) {                                              // 957
                        coreQuery = { $or: [{                                                                          // 958
                                $and: [{ resourceParentID: resource._id }, { $or: [{ toUsers: null }, { toUsers: { $exists: false } }] }]
                            }, {                                                                                       // 960
                                $and: [{ resourceParentID: resource._id }, { toUsers: userSearchCommentsExpression }]  // 964
                            }] };                                                                                      // 963
                    } else {                                                                                           // 967
                                                                                                                       //
                        coreQuery = { $or: [{                                                                          // 969
                                $and: [{ resourceParentID: resource._id }, { $or: [{ toUsers: null }, { toUsers: { $exists: false } }] }, { $or: [{ status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }, { status: BuzzyGlobal.gCOMMENTSTATUS.DELETED }, { $and: [{ status: BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL }, { userID: userID }] }] }]
                            }, {                                                                                       // 971
                                $and: [{ resourceParentID: resource._id }, { toUsers: userSearchCommentsExpression }]  // 987
                            }] };                                                                                      // 986
                    }                                                                                                  // 991
                                                                                                                       //
                    if (comment) {                                                                                     // 993
                        if (resource.showComments === BuzzyGlobal.gCOMMENTSHOW.INLINE || resource.showComments === BuzzyGlobal.gCOMMENTSHOW.MODAL) {
                                                                                                                       //
                            var limit = typeof commentLimit.commentDownLimit !== "undefined" && commentLimit.commentDownLimit ? commentLimit.commentDownLimit : BuzzyGlobal.gCOMMENT_LIMIT;
                            return Comments.find({ $and: [coreQuery, { submitted: { $gte: comment.submitted } }] }, { sort: { submitted: 1 }, limit: limit });
                        } else {                                                                                       // 1001
                                                                                                                       //
                            return;                                                                                    // 1003
                        }                                                                                              // 1005
                    } else {                                                                                           // 1007
                        if (resource.showComments === BuzzyGlobal.gCOMMENTSHOW.INLINE || resource.showComments === BuzzyGlobal.gCOMMENTSHOW.MODAL) {
                                                                                                                       //
                            if (commentLimit.resourceID === resource._id) {                                            // 1010
                                return Comments.find(coreQuery, { sort: { submitted: -1 }, limit: commentLimit.limit });
                            } else {                                                                                   // 1012
                                //return Comments.find({resourceParentID:resource._id}, {sort:{submitted:-1},limit:BuzzyGlobal.gCOMMENT_LIMIT});
                                                                                                                       //
                                return Comments.find(coreQuery, { sort: { submitted: -1 }, limit: BuzzyGlobal.gCOMMENT_LIMIT });
                            }                                                                                          // 1018
                        } else {                                                                                       // 1019
                                                                                                                       //
                            return;                                                                                    // 1021
                        }                                                                                              // 1023
                    }                                                                                                  // 1024
                }                                                                                                      // 1028
                                                                                                                       //
                return find;                                                                                           // 953
            }()                                                                                                        // 953
        }, {                                                                                                           // 952
            find: function () {                                                                                        // 1031
                function find(resource) {                                                                              // 1031
                    var commentCursor;                                                                                 // 1032
                    var coreQuery = {};                                                                                // 1033
                                                                                                                       //
                    if (Resources.isAuthorOwner(this.userId, resource)) {                                              // 1035
                        coreQuery = { $or: [{                                                                          // 1036
                                $and: [{ resourceParentID: resource._id }, { $or: [{ toUsers: null }, { toUsers: { $exists: false } }] }]
                            }, {                                                                                       // 1038
                                $and: [{ resourceParentID: resource._id }, { toUsers: userSearchCommentsExpression }]  // 1042
                            }] };                                                                                      // 1041
                    } else {                                                                                           // 1045
                                                                                                                       //
                        coreQuery = { $or: [{                                                                          // 1047
                                $and: [{ resourceParentID: resource._id }, { $or: [{ toUsers: null }, { toUsers: { $exists: false } }] }, { $or: [{ status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }, { status: BuzzyGlobal.gCOMMENTSTATUS.DELETED }, { $and: [{ status: BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL }, { userID: userID }] }] }]
                            }, {                                                                                       // 1049
                                $and: [{ resourceParentID: resource._id }, { toUsers: userSearchCommentsExpression }]  // 1065
                            }] };                                                                                      // 1064
                    }                                                                                                  // 1069
                                                                                                                       //
                    if (comment) {                                                                                     // 1071
                        if (resource.showComments === BuzzyGlobal.gCOMMENTSHOW.INLINE || resource.showComments === BuzzyGlobal.gCOMMENTSHOW.MODAL) {
                                                                                                                       //
                            var limit = typeof commentLimit.commentUpLimit !== "undefined" && commentLimit.commentUpLimit ? commentLimit.commentUpLimit : BuzzyGlobal.gCOMMENT_LIMIT;
                            return Comments.find({ $and: [coreQuery, { submitted: { $lte: comment.submitted } }] }, { sort: { submitted: -1 }, limit: limit });
                        } else {                                                                                       // 1081
                                                                                                                       //
                            return;                                                                                    // 1083
                        }                                                                                              // 1085
                    } else {                                                                                           // 1087
                        return;                                                                                        // 1088
                    }                                                                                                  // 1089
                }                                                                                                      // 1093
                                                                                                                       //
                return find;                                                                                           // 1031
            }()                                                                                                        // 1031
        }, {                                                                                                           // 1030
            find: function () {                                                                                        // 1096
                function find(resource) {                                                                              // 1096
                    if (!Resources.isAuthorOwner(userID, resource)) {                                                  // 1097
                        return;                                                                                        // 1098
                    }                                                                                                  // 1099
                    if (resource.showComments === BuzzyGlobal.gCOMMENTSHOW.INLINE || resource.showComments === BuzzyGlobal.gCOMMENTSHOW.MODAL) {
                        var userSearchCommentsExpression = new RegExp(userID);                                         // 1101
                        return Comments.find({ $or: [{ $and: [{ resourceParentID: resource._id }, { toUsers: { $exists: true, $ne: [] } }, { status: BuzzyGlobal.gCOMMENTSTATUS.FLAGGED }] }, {
                                $and: [{ resourceParentID: resource._id }, { status: BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL }, { toUsers: userSearchCommentsExpression }]
                            }] }, { sort: { submitted: -1 }, limit: BuzzyGlobal.gCOMMENT_LIMIT });                     // 1111
                    } else {                                                                                           // 1120
                        return;                                                                                        // 1121
                    }                                                                                                  // 1122
                }                                                                                                      // 1124
                                                                                                                       //
                return find;                                                                                           // 1096
            }()                                                                                                        // 1096
        }, {                                                                                                           // 1095
            find: function () {                                                                                        // 1127
                function find(resource) {                                                                              // 1127
                    if (resource.type === BuzzyGlobal.gBASICTYPES.RESTCALL) {                                          // 1128
                        return ExternalRestData.find({ parentResourceID: resource._id }, { fields: { _id: 1, result: 1, parentResourceID: 1 }, limit: 1 });
                    } else {                                                                                           // 1130
                        return;                                                                                        // 1131
                    }                                                                                                  // 1132
                }                                                                                                      // 1134
                                                                                                                       //
                return find;                                                                                           // 1127
            }()                                                                                                        // 1127
        }, {                                                                                                           // 1126
            find: function () {                                                                                        // 1137
                function find(resource) {                                                                              // 1137
                    if (resource.type === BuzzyGlobal.gBASICTYPES.APPLICATION) {                                       // 1138
                        return MicroAppFields.find({ parentResourceID: resource._id });                                // 1139
                    } else {                                                                                           // 1140
                        return;                                                                                        // 1141
                    }                                                                                                  // 1142
                }                                                                                                      // 1144
                                                                                                                       //
                return find;                                                                                           // 1137
            }()                                                                                                        // 1137
        }, {                                                                                                           // 1136
            find: function () {                                                                                        // 1148
                function find(resource) {                                                                              // 1148
                    if (resource.type === BuzzyGlobal.gBASICTYPES.APPLICATION) {                                       // 1149
                        return MicroAppVotes.find({ parentResourceID: resource._id, userID: this.userId });            // 1150
                    } else {                                                                                           // 1151
                        return;                                                                                        // 1152
                    }                                                                                                  // 1153
                }                                                                                                      // 1155
                                                                                                                       //
                return find;                                                                                           // 1148
            }()                                                                                                        // 1148
        }, {                                                                                                           // 1147
            find: function () {                                                                                        // 1158
                function find(resource) {                                                                              // 1158
                                                                                                                       //
                    if (resource.type === BuzzyGlobal.gBASICTYPES.APPLICATION) {                                       // 1160
                        var currLimit = BuzzyGlobal.gMICROAPPDATA_LIMIT;                                               // 1161
                                                                                                                       //
                        if (typeof resource.content.numberOfItems != "undefined" && resource.content.numberOfItems > 0) {
                            currLimit = resource.content.numberOfItems;                                                // 1164
                        }                                                                                              // 1165
                        var currSortOrder = resource.content.sortOrder && resource.content.sortOrder == "asc" ? 1 : -1;
                        var cursor;                                                                                    // 1167
                                                                                                                       //
                        var queryObj = {                                                                               // 1169
                            query: { parentResourceID: resource._id },                                                 // 1170
                            projection: { sort: { sortVal: currSortOrder }, limit: currLimit }                         // 1171
                        };                                                                                             // 1169
                                                                                                                       //
                        if (!Resources.canEdit(userID, resource) && resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR) {
                            queryObj.query = { parentResourceID: resource._id, userID: userID };                       // 1175
                        } else if (!Resources.canEdit(userID, resource) && resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATORS_VIEWERS) {
                            var searchUserExpression = new RegExp(this.userId);                                        // 1177
                            queryObj.query = {                                                                         // 1178
                                $or: [{                                                                                // 1179
                                    $and: [{ parentResourceID: resource._id }, { viewers: searchUserExpression }]      // 1181
                                }, {                                                                                   // 1180
                                    parentResourceID: resource._id,                                                    // 1188
                                    userID: userID                                                                     // 1189
                                }]                                                                                     // 1187
                                                                                                                       //
                            };                                                                                         // 1178
                        }                                                                                              // 1195
                                                                                                                       //
                        if (typeof optMicroAppFilter !== "undefined" && optMicroAppFilter) {                           // 1197
                            var indexOfFilter = optMicroAppFilter.findIndex(function (item) {                          // 1198
                                return item.resourceID === resource._id;                                               // 1199
                            });                                                                                        // 1200
                                                                                                                       //
                            if (indexOfFilter >= 0) {                                                                  // 1202
                                if (optMicroAppFilter[indexOfFilter].limit) {                                          // 1203
                                    currLimit = optMicroAppFilter[indexOfFilter].limit;                                // 1204
                                }                                                                                      // 1205
                                if (typeof optMicroAppFilter[indexOfFilter].field !== "undefined" && optMicroAppFilter[indexOfFilter].field) {
                                    switch (optMicroAppFilter[indexOfFilter].field) {                                  // 1207
                                        case "1":                                                                      // 1208
                                            queryObj.projection = { sort: { sortVal: optMicroAppFilter[indexOfFilter].order }, limit: currLimit };
                                            break;                                                                     // 1210
                                        case "2":                                                                      // 1211
                                            queryObj.projection = { sort: { sortVal2: optMicroAppFilter[indexOfFilter].order }, limit: currLimit };
                                            break;                                                                     // 1213
                                        case "3":                                                                      // 1214
                                            queryObj.projection = { sort: { sortVal3: optMicroAppFilter[indexOfFilter].order }, limit: currLimit };
                                            break;                                                                     // 1216
                                                                                                                       //
                                    }                                                                                  // 1207
                                }                                                                                      // 1219
                                                                                                                       //
                                if (typeof optMicroAppFilter[indexOfFilter].searchString !== "undefined" && optMicroAppFilter[indexOfFilter].searchString) {
                                    var searchRegEx = new RegExp(optMicroAppFilter[indexOfFilter].searchString, "i");  // 1222
                                    switch (optMicroAppFilter[indexOfFilter].searchField) {                            // 1223
                                        case "1":                                                                      // 1224
                                            queryObj.query.sortVal = searchRegEx;                                      // 1225
                                            break;                                                                     // 1226
                                        case "2":                                                                      // 1227
                                            queryObj.query.sortVal2 = searchRegEx;                                     // 1228
                                            break;                                                                     // 1229
                                        case "3":                                                                      // 1230
                                            queryObj.query.sortVal3 = searchRegEx;                                     // 1231
                                            break;                                                                     // 1232
                                                                                                                       //
                                    };                                                                                 // 1223
                                }                                                                                      // 1235
                            }                                                                                          // 1237
                        } else {                                                                                       // 1243
                            if (typeof resource.content.sortOrder !== "undefined") {                                   // 1244
                                var sortOrder = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING ? 1 : -1;
                                queryObj.projection.sort.sortVal = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING ? 1 : -1;
                            }                                                                                          // 1247
                        }                                                                                              // 1248
                                                                                                                       //
                        return MicroAppData.find(queryObj.query, queryObj.projection);                                 // 1253
                                                                                                                       //
                        /*if (typeof resource.content.sortOrder !== "undefined"){                                      // 1255
                            var sortOrder = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING?1:-1;     //
                            if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR){
                                                                                                                       //
                                if (Resources.canEdit(userID, resource)){                                              //
                                                                                                                       //
                                    return MicroAppData.find({parentResourceID:  resource._id},{sort:{sortVal:sortOrder},limit:currLimit});
                                 } else {                                                                              //
                                    return MicroAppData.find({parentResourceID:  resource._id, userID:userID},{sort:{sortVal:sortOrder},limit:currLimit});
                                 }                                                                                     //
                             } else {                                                                                  //
                                                                                                                       //
                                return MicroAppData.find({parentResourceID:  resource._id},{sort:{sortVal:sortOrder},limit:currLimit});
                             }                                                                                         //
                         } else {                                                                                      //
                            if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR){
                                if (Resources.canEdit(userID, resource)){                                              //
                                    return  MicroAppData.find({parentResourceID:  resource._id});                      //
                                                                                                                       //
                                } else {                                                                               //
                                    return MicroAppData.find({parentResourceID:  resource._id, userID:userID});        //
                                }                                                                                      //
                            } else {                                                                                   //
                                return MicroAppData.find({parentResourceID:  resource._id});                           //
                             }                                                                                         //
                          }*/                                                                                          //
                    } else {                                                                                           // 1291
                        return;                                                                                        // 1292
                    }                                                                                                  // 1293
                }                                                                                                      // 1294
                                                                                                                       //
                return find;                                                                                           // 1158
            }(),                                                                                                       // 1158
            children: [{                                                                                               // 1295
                find: function () {                                                                                    // 1297
                    function find(microAppItem) {                                                                      // 1297
                        return MicroAppChild.find({ parentAppItemID: microAppItem._id, type: BuzzyGlobal.gAPPFIELDTYPE.FILE_ATTACHMENTS });
                    }                                                                                                  // 1299
                                                                                                                       //
                    return find;                                                                                       // 1297
                }()                                                                                                    // 1297
            }]                                                                                                         // 1296
                                                                                                                       //
        }, {                                                                                                           // 1157
            find: function () {                                                                                        // 1304
                function find(resource) {                                                                              // 1304
                    if (resource.type === BuzzyGlobal.gBASICTYPES.EMBED_BUZZ) {                                        // 1305
                                                                                                                       //
                        var searchExpression = new RegExp("^," + resource.content.buzzID + ",");                       // 1307
                        var userSearchExpression = new RegExp(userID);                                                 // 1308
                                                                                                                       //
                        if (resource.status === BuzzyGlobal.gRESOURCE_STATUS.ARCHIVED || resource.status === BuzzyGlobal.gRESOURCE_STATUS.DELETED) {
                            return;                                                                                    // 1312
                        }                                                                                              // 1313
                                                                                                                       //
                        if (!Resources.canView(userID, resource)) {                                                    // 1315
                            return;                                                                                    // 1316
                        }                                                                                              // 1317
                        if (Meteor.settings.BUZZY_DEBUG) {                                                             // 1318
                            console.log("ABOUT to Embed:", new RegExp("^," + resource.content.buzzID + ","));          // 1319
                        }                                                                                              // 1320
                                                                                                                       //
                        return Resources.find({ $and: [{ $or: [{ _id: resource.content.buzzID }, { path: searchExpression }] }, { status: 'published' }] });
                    } else {                                                                                           // 1335
                        return;                                                                                        // 1336
                    }                                                                                                  // 1337
                }                                                                                                      // 1339
                                                                                                                       //
                return find;                                                                                           // 1304
            }(),                                                                                                       // 1304
            children: [{                                                                                               // 1340
                find: function () {                                                                                    // 1342
                    function find(resource) {                                                                          // 1342
                        if (resource.type === BuzzyGlobal.gBASICTYPES.APPLICATION) {                                   // 1343
                            return MicroAppFields.find({ parentResourceID: resource._id });                            // 1344
                        } else {                                                                                       // 1345
                            return;                                                                                    // 1346
                        }                                                                                              // 1347
                    }                                                                                                  // 1349
                                                                                                                       //
                    return find;                                                                                       // 1342
                }()                                                                                                    // 1342
            }, {                                                                                                       // 1341
                find: function () {                                                                                    // 1353
                    function find(resource) {                                                                          // 1353
                        if (resource.type === BuzzyGlobal.gBASICTYPES.APPLICATION) {                                   // 1354
                            return MicroAppVotes.find({ parentResourceID: resource._id, userID: this.userId });        // 1355
                        } else {                                                                                       // 1356
                            return;                                                                                    // 1357
                        }                                                                                              // 1358
                    }                                                                                                  // 1360
                                                                                                                       //
                    return find;                                                                                       // 1353
                }()                                                                                                    // 1353
            }, {                                                                                                       // 1352
                find: function () {                                                                                    // 1363
                    function find(resource) {                                                                          // 1363
                                                                                                                       //
                        if (resource.type === BuzzyGlobal.gBASICTYPES.APPLICATION) {                                   // 1365
                            var currLimit = BuzzyGlobal.gMICROAPPDATA_LIMIT;                                           // 1366
                                                                                                                       //
                            if (typeof resource.content.numberOfItems != "undefined" && resource.content.numberOfItems > 0) {
                                currLimit = resource.content.numberOfItems;                                            // 1369
                            }                                                                                          // 1370
                                                                                                                       //
                            var cursor;                                                                                // 1372
                                                                                                                       //
                            var queryObj = {                                                                           // 1374
                                query: { parentResourceID: resource._id },                                             // 1375
                                projection: { sort: { sortVal: -1 }, limit: currLimit }                                // 1376
                            };                                                                                         // 1374
                                                                                                                       //
                            if (!Resources.canEdit(userID, resource) && resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR) {
                                queryObj.query = { parentResourceID: resource._id, userID: userID };                   // 1380
                            } else if (!Resources.canEdit(userID, resource) && resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATORS_VIEWERS) {
                                var searchUserExpression = new RegExp(this.userId);                                    // 1382
                                queryObj.query = {                                                                     // 1383
                                    $or: [{                                                                            // 1384
                                        $and: [{ parentResourceID: resource._id }, { viewers: searchUserExpression }]  // 1386
                                    }, {                                                                               // 1385
                                        parentResourceID: resource._id,                                                // 1393
                                        userID: userID                                                                 // 1394
                                    }]                                                                                 // 1392
                                                                                                                       //
                                };                                                                                     // 1383
                            }                                                                                          // 1400
                                                                                                                       //
                            if (typeof optMicroAppFilter !== "undefined" && optMicroAppFilter) {                       // 1402
                                var indexOfFilter = optMicroAppFilter.findIndex(function (item) {                      // 1403
                                    return item.resourceID === resource._id;                                           // 1404
                                });                                                                                    // 1405
                                                                                                                       //
                                if (indexOfFilter >= 0) {                                                              // 1407
                                    if (optMicroAppFilter[indexOfFilter].limit) {                                      // 1408
                                        currLimit = optMicroAppFilter[indexOfFilter].limit;                            // 1409
                                    }                                                                                  // 1410
                                    if (typeof optMicroAppFilter[indexOfFilter].field !== "undefined" && optMicroAppFilter[indexOfFilter].field) {
                                        switch (optMicroAppFilter[indexOfFilter].field) {                              // 1412
                                            case "1":                                                                  // 1413
                                                queryObj.projection = { sort: { sortVal: optMicroAppFilter[indexOfFilter].order }, limit: currLimit };
                                                break;                                                                 // 1415
                                            case "2":                                                                  // 1416
                                                queryObj.projection = { sort: { sortVal2: optMicroAppFilter[indexOfFilter].order }, limit: currLimit };
                                                break;                                                                 // 1418
                                            case "3":                                                                  // 1419
                                                queryObj.projection = { sort: { sortVal3: optMicroAppFilter[indexOfFilter].order }, limit: currLimit };
                                                break;                                                                 // 1421
                                                                                                                       //
                                        }                                                                              // 1412
                                    }                                                                                  // 1424
                                                                                                                       //
                                    if (typeof optMicroAppFilter[indexOfFilter].searchString !== "undefined" && optMicroAppFilter[indexOfFilter].searchString) {
                                        var searchRegEx = new RegExp(optMicroAppFilter[indexOfFilter].searchString, "i");
                                        switch (optMicroAppFilter[indexOfFilter].searchField) {                        // 1428
                                            case "1":                                                                  // 1429
                                                queryObj.query.sortVal = searchRegEx;                                  // 1430
                                                break;                                                                 // 1431
                                            case "2":                                                                  // 1432
                                                queryObj.query.sortVal2 = searchRegEx;                                 // 1433
                                                break;                                                                 // 1434
                                            case "3":                                                                  // 1435
                                                queryObj.query.sortVal3 = searchRegEx;                                 // 1436
                                                break;                                                                 // 1437
                                                                                                                       //
                                        };                                                                             // 1428
                                    }                                                                                  // 1440
                                }                                                                                      // 1442
                            } else {                                                                                   // 1448
                                if (typeof resource.content.sortOrder !== "undefined") {                               // 1449
                                    var sortOrder = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING ? 1 : -1;
                                    queryObj.projection.sort.sortVal = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING ? 1 : -1;
                                }                                                                                      // 1452
                            }                                                                                          // 1453
                                                                                                                       //
                            return MicroAppData.find(queryObj.query, queryObj.projection);                             // 1458
                                                                                                                       //
                            /*if (typeof resource.content.sortOrder !== "undefined"){                                  // 1460
                             var sortOrder = resource.content.sortOrder === BuzzyGlobal.gSORT_ORDER.ASCENDING?1:-1;    //
                             if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR){
                              if (Resources.canEdit(userID, resource)){                                                //
                              return MicroAppData.find({parentResourceID:  resource._id},{sort:{sortVal:sortOrder},limit:currLimit});
                              } else {                                                                                 //
                             return MicroAppData.find({parentResourceID:  resource._id, userID:userID},{sort:{sortVal:sortOrder},limit:currLimit});
                              }                                                                                        //
                              } else {                                                                                 //
                              return MicroAppData.find({parentResourceID:  resource._id},{sort:{sortVal:sortOrder},limit:currLimit});
                              }                                                                                        //
                              } else {                                                                                 //
                             if (resource.content.whoCanView === BuzzyGlobal.gMICROAPP_PERMISSION_WHOCANVIEW.OWNER_AUTHOR_CREATOR){
                             if (Resources.canEdit(userID, resource)){                                                 //
                             return  MicroAppData.find({parentResourceID:  resource._id});                             //
                               } else {                                                                                //
                             return MicroAppData.find({parentResourceID:  resource._id, userID:userID});               //
                             }                                                                                         //
                             } else {                                                                                  //
                             return MicroAppData.find({parentResourceID:  resource._id});                              //
                              }                                                                                        //
                               }*/                                                                                     //
                        } else {                                                                                       // 1496
                            return;                                                                                    // 1497
                        }                                                                                              // 1498
                    }                                                                                                  // 1499
                                                                                                                       //
                    return find;                                                                                       // 1363
                }(),                                                                                                   // 1363
                children: [{                                                                                           // 1500
                    find: function () {                                                                                // 1502
                        function find(microAppItem) {                                                                  // 1502
                            return MicroAppChild.find({ parentAppItemID: microAppItem._id, type: BuzzyGlobal.gAPPFIELDTYPE.FILE_ATTACHMENTS });
                        }                                                                                              // 1504
                                                                                                                       //
                        return find;                                                                                   // 1502
                    }()                                                                                                // 1502
                }]                                                                                                     // 1501
                                                                                                                       //
            }]                                                                                                         // 1362
        }]                                                                                                             // 1303
    };                                                                                                                 // 872
});                                                                                                                    // 1513
                                                                                                                       //
Meteor.publish('resourceFollowers', function (resourceID) {                                                            // 1518
    this.unblock();                                                                                                    // 1519
                                                                                                                       //
    return ResourceFollowers.find({ resourceID: resourceID });                                                         // 1521
});                                                                                                                    // 1523
                                                                                                                       //
Meteor.publish('resourceFollowersByUser', function (userID) {                                                          // 1528
    this.unblock();                                                                                                    // 1529
    return ResourceFollowers.find({ userID: userID });                                                                 // 1530
});                                                                                                                    // 1531
                                                                                                                       //
Meteor.publishComposite('resourceFollowersUsers', function (resourceID) {                                              // 1535
    this.unblock();                                                                                                    // 1536
                                                                                                                       //
    return {                                                                                                           // 1539
        find: function () {                                                                                            // 1540
            function find() {                                                                                          // 1540
                return ResourceFollowers.find({ resourceID: resourceID });                                             // 1541
            }                                                                                                          // 1543
                                                                                                                       //
            return find;                                                                                               // 1540
        }(),                                                                                                           // 1540
        children: [{                                                                                                   // 1544
            find: function () {                                                                                        // 1546
                function find(follower) {                                                                              // 1546
                    return Users.find({ _id: follower.userID });                                                       // 1547
                }                                                                                                      // 1548
                                                                                                                       //
                return find;                                                                                           // 1546
            }()                                                                                                        // 1546
        }] };                                                                                                          // 1545
});                                                                                                                    // 1556
                                                                                                                       //
Meteor.publishComposite('notifications', function (searchTerm, notificationLimit) {                                    // 1558
    this.unblock();                                                                                                    // 1559
                                                                                                                       //
    var searchQueryExpression = new RegExp(searchTerm, "i");                                                           // 1562
    return {                                                                                                           // 1563
        find: function () {                                                                                            // 1564
            function find() {                                                                                          // 1564
                if (typeof searchTerm !== "undefined" && searchTerm) {                                                 // 1565
                                                                                                                       //
                    return Notifications.find({ $and: [{ forUserID: this.userId }, { $or: [{ "activity.actor.displayName": searchQueryExpression }, { "action.message": searchQueryExpression }, { "activity.object.content": searchQueryExpression }] }] }, { limit: notificationLimit, sort: { submitted: -1 } });
                } else {                                                                                               // 1578
                    if (this.userId) {                                                                                 // 1579
                        return Notifications.find({ forUserID: this.userId }, { limit: notificationLimit, sort: { submitted: -1 } });
                    }                                                                                                  // 1581
                }                                                                                                      // 1584
            }                                                                                                          // 1586
                                                                                                                       //
            return find;                                                                                               // 1564
        }(),                                                                                                           // 1564
        children: [{                                                                                                   // 1587
            find: function () {                                                                                        // 1589
                function find(notifcation) {                                                                           // 1589
                    return Users.find({ _id: notifcation.byUserID });                                                  // 1590
                }                                                                                                      // 1591
                                                                                                                       //
                return find;                                                                                           // 1589
            }()                                                                                                        // 1589
        }] };                                                                                                          // 1588
});                                                                                                                    // 1599
                                                                                                                       //
Meteor.publish('externalData', function () {                                                                           // 1602
    this.unblock();                                                                                                    // 1603
    return ExternalData.find({ userID: this.userId }, { limit: 10, sort: { submitted: -1 } });                         // 1604
});                                                                                                                    // 1605
                                                                                                                       //
Meteor.publishComposite('myTeams', function () {                                                                       // 1607
    this.unblock();                                                                                                    // 1608
    var self = this;                                                                                                   // 1609
    var userID = self.userId;                                                                                          // 1610
    return {                                                                                                           // 1611
        find: function () {                                                                                            // 1612
            function find() {                                                                                          // 1612
                return TeamMembers.find({ userID: userID });                                                           // 1613
            }                                                                                                          // 1615
                                                                                                                       //
            return find;                                                                                               // 1612
        }(),                                                                                                           // 1612
        children: [{                                                                                                   // 1616
            find: function () {                                                                                        // 1618
                function find(membership) {                                                                            // 1618
                    return Teams.find({ _id: membership.teamID });                                                     // 1619
                }                                                                                                      // 1620
                                                                                                                       //
                return find;                                                                                           // 1618
            }()                                                                                                        // 1618
        }] };                                                                                                          // 1617
});                                                                                                                    // 1625
                                                                                                                       //
Meteor.publishComposite('teamInfo', function (teamID) {                                                                // 1627
    this.unblock();                                                                                                    // 1628
    var self = this;                                                                                                   // 1629
    var userID = self.userId;                                                                                          // 1630
    return {                                                                                                           // 1631
        find: function () {                                                                                            // 1632
            function find() {                                                                                          // 1632
                return Teams.find({ _id: teamID });                                                                    // 1633
            }                                                                                                          // 1634
                                                                                                                       //
            return find;                                                                                               // 1632
        }(),                                                                                                           // 1632
        children: [{                                                                                                   // 1635
            find: function () {                                                                                        // 1637
                function find(team) {                                                                                  // 1637
                    return TeamMembers.find({ teamID: teamID });                                                       // 1638
                }                                                                                                      // 1639
                                                                                                                       //
                return find;                                                                                           // 1637
            }(),                                                                                                       // 1637
            children: [{                                                                                               // 1640
                find: function () {                                                                                    // 1642
                    function find(member) {                                                                            // 1642
                        return Users.find({ _id: member.userID });                                                     // 1643
                    }                                                                                                  // 1644
                                                                                                                       //
                    return find;                                                                                       // 1642
                }()                                                                                                    // 1642
            }]                                                                                                         // 1641
        }] };                                                                                                          // 1636
});                                                                                                                    // 1652
                                                                                                                       //
Meteor.publish('getCounterMicroAppData', function (counterName, resourceID) {                                          // 1654
    this.unblock();                                                                                                    // 1655
    var pollingInterval = 10 * 1000; //10 seconds                                                                      // 1656
    if (!resourceID || !counterName) {                                                                                 // 1657
        BuzzyGlobal.throwError("Invalid Params for Counter");                                                          // 1658
    }                                                                                                                  // 1659
    var resource = Resources.findOne({ _id: resourceID });                                                             // 1660
    if (!resource) {                                                                                                   // 1661
        BuzzyGlobal.throwError("Can't find resource!");                                                                // 1662
    }                                                                                                                  // 1663
    var cursor = {};                                                                                                   // 1664
    var userID = this.userId;                                                                                          // 1665
    if (userID) {                                                                                                      // 1666
        cursor = MicroAppData.find({ parentResourceID: resourceID });                                                  // 1667
        return new Counter(counterName, cursor, pollingInterval);                                                      // 1668
    }                                                                                                                  // 1670
});                                                                                                                    // 1673
                                                                                                                       //
Meteor.publish('getCounter', function (counterName, resourceID) {                                                      // 1675
    this.unblock();                                                                                                    // 1676
    var pollingInterval = 10 * 1000; //10 seconds                                                                      // 1677
    if (!resourceID || !counterName) {                                                                                 // 1678
        BuzzyGlobal.throwError("Invalid Params for Counter");                                                          // 1679
    }                                                                                                                  // 1680
    var resource = Resources.findOne({ _id: resourceID });                                                             // 1681
    if (!resource) {                                                                                                   // 1682
        BuzzyGlobal.throwError("Can't find resource!");                                                                // 1683
    }                                                                                                                  // 1684
    var cursor = {};                                                                                                   // 1685
    var userID = this.userId;                                                                                          // 1686
    if (userID) {                                                                                                      // 1687
        var userSearchCommentsExpression = new RegExp(userID);                                                         // 1688
        if (Resources.isAuthorOwner(this.userId, resource)) {                                                          // 1689
                                                                                                                       //
            cursor = Comments.find({ $or: [{                                                                           // 1692
                    $and: [{ resourceParentID: resourceID }, { $or: [{ toUsers: null }, { toUsers: { $exists: false } }] }, { $or: [{ status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }, { status: BuzzyGlobal.gCOMMENTSTATUS.DELETED }, { $and: [{ status: BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL }, { userID: userID }] }] }]
                }, {                                                                                                   // 1696
                    $and: [{ resourceParentID: resourceID }, { toUsers: null }, { status: BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL }]
                }, {                                                                                                   // 1711
                    $and: [{ resourceParentID: resourceID }, { status: BuzzyGlobal.gCOMMENTSTATUS.FLAGGED }]           // 1719
                }, {                                                                                                   // 1718
                    $and: [{ resourceParentID: resourceID }, { toUsers: userSearchCommentsExpression }]                // 1725
                }] });                                                                                                 // 1724
        } else {                                                                                                       // 1733
                                                                                                                       //
            cursor = Comments.find({ $or: [{                                                                           // 1735
                    $and: [{ resourceParentID: resourceID }, { $or: [{ toUsers: null }, { toUsers: { $exists: false } }] }, { $or: [{ status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }, { status: BuzzyGlobal.gCOMMENTSTATUS.DELETED }, { $and: [{ status: BuzzyGlobal.gCOMMENTSTATUS.WAITING_APPROVAL }, { userID: userID }] }] }]
                }, {                                                                                                   // 1739
                    $and: [{ resourceParentID: resourceID }, { status: BuzzyGlobal.gCOMMENTSTATUS.FLAGGED }]           // 1756
                }, {                                                                                                   // 1755
                    $and: [{ resourceParentID: resourceID }, { toUsers: userSearchCommentsExpression }]                // 1762
                }] });                                                                                                 // 1761
        }                                                                                                              // 1769
    } else {                                                                                                           // 1772
        cursor = Comments.find({ $and: [{ $or: [{                                                                      // 1773
                    $and: [{ resourceParentID: resourceID }, { $or: [{ toUsers: null }, { toUsers: { $exists: false } }] }, { $or: [{ status: BuzzyGlobal.gCOMMENTSTATUS.DELETED }, { status: BuzzyGlobal.gCOMMENTSTATUS.LIVE }] }]
                }] }] });                                                                                              // 1778
    }                                                                                                                  // 1797
                                                                                                                       //
    return new Counter(counterName, cursor, pollingInterval);                                                          // 1802
});                                                                                                                    // 1803
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"push.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/push.js                                                                                                      //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 19/12/2014.                                                                              //
 */                                                                                                                    //
                                                                                                                       //
Meteor.startup(function () {                                                                                           // 6
                                                                                                                       //
    Push.debug = true;                                                                                                 // 8
                                                                                                                       //
    /*Push.Configure({                                                                                                 // 10
        "apn": {                                                                                                       //
            "passphrase": "awoke1-excel",                                                                              //
            "keyData": Assets.getText('Prod_BuzzyBuzzKey.pem'),                                                        //
            "certData": Assets.getText('Prod_BuzzyBuzzCert.pem')                                                       //
        },                                                                                                             //
        "gcm": {                                                                                                       //
            "apiKey": "AIzaSyCAluGdU2kXfNpJy7bO48h-ulu8smg5bN0"                                                        //
        },                                                                                                             //
        "production": true,                                                                                            //
        "badge": true,                                                                                                 //
        "sound": true,                                                                                                 //
        "alert": true,                                                                                                 //
        "vibrate": true                                                                                                //
    });*/                                                                                                              //
                                                                                                                       //
    Push.Configure({                                                                                                   // 27
        apn: {                                                                                                         // 28
            certData: Assets.getText('buzzypush_prod_cert.pem'),                                                       // 29
            keyData: Assets.getText('buzzypush_prod_key.pem'),                                                         // 30
            passphrase: 'amonkey-surfer',                                                                              // 31
            production: true                                                                                           // 32
        },                                                                                                             // 28
        gcm: {                                                                                                         // 35
            apiKey: 'AIzaSyCAluGdU2kXfNpJy7bO48h-ulu8smg5bN0'                                                          // 36
        },                                                                                                             // 35
        production: true,                                                                                              // 38
        'sound': true,                                                                                                 // 39
        'badge': true,                                                                                                 // 40
        'alert': true,                                                                                                 // 41
        'vibrate': true                                                                                                // 42
    });                                                                                                                // 27
});                                                                                                                    // 49
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

},"updateComments.js":function(){

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//                                                                                                                     //
// server/updateComments.js                                                                                            //
//                                                                                                                     //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
                                                                                                                       //
/**                                                                                                                    // 1
 * Created by adamginsburg on 2/12/2014.                                                                               //
 */                                                                                                                    //
                                                                                                                       //
/*Meteor.startup(function () {                                                                                         // 5
    console.log("BEFORE: comments found with null: " +  Comments.find({topLevelParentID:null}).count());               //
    Comments.find({topLevelParentID:null}).forEach(function(item){                                                     //
        console.log("temp parent:"  + item.resourceParentID);                                                          //
        var currResource = Resources.findOne({_id:item.resourceParentID});                                             //
        if (currResource){                                                                                             //
            console.log("path:" + currResource.path);                                                                  //
            if (currResource.path != null){                                                                            //
                console.log("split:" + currResource.path.split(",")[1]);                                               //
                Comments.update({_id:item._id},{$set:{topLevelParentID:currResource.path.split(",")[1]}});             //
            } else {                                                                                                   //
                Comments.update({_id:item._id},{$set:{topLevelParentID:currResource._id}});                            //
                                                                                                                       //
            }                                                                                                          //
        }                                                                                                              //
    });                                                                                                                //
    console.log("AFTER: comments found with null: " +  Comments.find({topLevelParentID:null}).count());                //
})*/                                                                                                                   //
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}}},{"extensions":[".js",".json"]});
require("./lib/1_collections/beta_users.js");
require("./lib/1_collections/buzzy_log.js");
require("./lib/1_collections/errors.js");
require("./lib/1_collections/legacy_stubs.js");
require("./lib/1_collections/user_tags_resource.js");
require("./lib/1_global/1_config.js");
require("./lib/1_global/2_globals.js");
require("./lib/1_global/avatar.js");
require("./lib/1_global/counter.js");
require("./lib/1_global/push.js");
require("./lib/1_global/saml2.js");
require("./lib/3_methods/comments.js");
require("./lib/3_methods/notifications.js");
require("./lib/3_methods/resourceFollowers.js");
require("./lib/3_methods/resources.js");
require("./lib/3_methods/stripe.js");
require("./lib/3_methods/userTags.js");
require("./server/lib/ainjectinitial.js");
require("./server/lib/server_routes.js");
require("./server/lib/template-helpers.js");
require("./server/lib/templates.js");
require("./lib/router.js");
require("./server/collections/registered_users.js");
require("./server/collections/saml_providers.js");
require("./server/methods/admin.js");
require("./server/methods/comments.js");
require("./server/methods/filepicker.js");
require("./server/methods/froala.js");
require("./server/methods/giphy.js");
require("./server/methods/googledrive.js");
require("./server/methods/inbound_email.js");
require("./server/methods/micro_app_data.js");
require("./server/methods/registered_users.js");
require("./server/methods/resources.js");
require("./server/methods/stripe.js");
require("./server/methods/twitter.js");
require("./server/methods/userContacts.js");
require("./server/methods/video_upload.js");
require("./server/methods/vimeo_server.js");
require("./server/methods/watson.js");
require("./server/a_server_routines.js");
require("./server/config.js");
require("./server/fixtures.js");
require("./server/lookbackEmails.js");
require("./server/phantomjs.js");
require("./server/publications.js");
require("./server/push.js");
require("./server/updateComments.js");
//# sourceMappingURL=app.js.map
