{"version":3,"sources":["meteor://ðŸ’»app/packages/dispatch:deep-link/lib/server.js","meteor://ðŸ’»app/packages/dispatch:deep-link/lib/common.js"],"names":["btoa","str","Buffer","toString","atob","base64","intentPattern","browserIntentPattern","objectToQueryString","obj","_","map","val","key","join","objectToBase64","EJSON","stringify","objectFromBase64","parse","replace","isNested","some","isObject","createQueryString","data","encodeURI","parseQueryString","queryString","object","split","decodeURIComponent","eventState","EventState","DeepLink","name","appId","fallbackUrl","url","Meteor","isClient","isIOS","test","navigator","userAgent","isAndroid","createLink","path","intentLink","uri","arguments","browserLink","androidLink","iosLink","link","iosBanner","content","el","$","setAttribute","append","open","where","window","Error","emit","emitState","on","once","off"],"mappings":"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","file":"/packages/dispatch_deep-link.js","sourcesContent":["btoa = (str) => new Buffer(str).toString('base64');\n\natob = (base64) => new Buffer(base64, 'base64').toString();\n","/* jshint maxlen: 130 */\n\n/**\n * Cordova intent pattern\n *\n * eg.:\n * \"intentname://path?arguments\"\n *\n * @type {RegExp}\n */\nintentPattern = /([a-zA-Z0-9]+):(?:\\/\\/)?([a-zA-Z0-9\\/]+)?(?:\\?(?:data:ejson;(base64),)?(.*))?/;\n\n/**\n * Browser intent pattern\n *\n * eg.:\n * \"http://foo.com/intentname://path?arguments\"\n *\n * @type {RegExp}\n */\nbrowserIntentPattern = /(?:.*):\\/\\/(?:[a-zA-Z0-9:\\.])+\\/((?:[a-zA-Z0-9]+):(?:\\/\\/)?(?:.*))/;\n\n/**\n * Converts an object into a querystring\n * @param  {Object} obj) Source\n * @return {String}      Query string\n */\nobjectToQueryString = (obj) => _.map(obj, (val, key) => `${key}=${val}`).join('&');\n\n/**\n * Converts object into an EJSON base64 string\n * @param  {Object} obj Source\n * @return {String}     EJSON bae64 string\n */\nobjectToBase64 = (obj) => 'data:ejson;base64,' + btoa(EJSON.stringify(obj));\n\n/**\n * Converts EJSON base64 string into object\n * @param  {String} str String to parse\n * @return {Object}     Parsed object\n */\nobjectFromBase64 = (str) => EJSON.parse(atob(str.replace(/^data:ejson;base64,/, '')));\n\n/**\n * Check if object as nested objects\n * @param  {Object} obj) Source\n * @return {Boolean}     true=nested objects, false=flat object\n */\nisNested = (obj) => _.some(obj, (val) => _.isObject(val));\n\n/**\n * Creates the appropiate querystring depending on the data type\n * if its a nested object it will be a base64 version if it's a\n * \"flat\" object it will convert 1:1 with a querystring\n * @param  {String|Object} data Source\n * @return {String}        Formatted data\n */\ncreateQueryString = (data='') => {\n  if (data !== ''+data) {\n    data = (isNested(data)) ? objectToBase64(data) : objectToQueryString(data);\n  }\n\n  return encodeURI(data);\n};\n\n/**\n * Parse a query string into a key/value object\n * @param  {String} queryString String to parse\n * @return {Object}             Key/value object\n */\nparseQueryString = function(queryString) {\n  return _.object(_.map(queryString\n            .split('&'), function(val) {\n              return _.map(val.split('='), (val) => decodeURIComponent(val));\n          }));\n};\n\nvar eventState = new EventState();\n\n/**\n * The DeepLink class\n * @param {String} name Url scheme\n * @param {Object} options Options\n * @param {String} options.appId The app id\n * @param {String} options.url Browser url for browser intents eg. \"http://foo.com/\"\n * @param {String} options.fallbackUrl Fallback url in case intent fails\n */\nDeepLink = class DeepLink {\n  constructor(name, { appId, fallbackUrl, url } = {}) {\n    this.name = name;\n    this.appId = appId;\n    this.url = (url) ? url.replace(/\\/$/,'') + '/' : ''; // Add traling slash\n    this.fallbackUrl = (fallbackUrl) ? encodeURI(fallbackUrl):'';\n    // Helpers\n    if (Meteor.isClient) {\n      this.isIOS = /iPhone|iPod|iPad/i.test(navigator.userAgent);\n      this.isAndroid = !this.isIOS && /android/i.test(navigator.userAgent);\n    }\n  }\n\n  createLink(path='', data='') {\n    data = createQueryString(data);\n    return (data === '')? path: `${path}?${data}`;\n  }\n\n  intentLink() {\n    var uri = this.createLink(...arguments);\n    return `${this.name}://${uri}`;\n  }\n\n  /**\n   * Create browser link for a browser intent\n   * @param  {String} path Path\n   * @param  {Object} data Data\n   * @return {String}      Link\n   */\n  browserLink(path='', data='') {\n    return this.url + this.intentLink(path, data);\n  }\n\n  androidLink(path='', data='') {\n    var uri = this.createLink(path, data);\n    if (this.appId) {\n      if (this.fallbackUrl) {\n        return `intent://${uri}#Intent;scheme=${this.name};package=${this.appId};S.browser_fallback_url=${this.fallbackUrl};end`;\n      } else {\n        return `intent://${uri}#Intent;scheme=${this.name};package=${this.appId};end`;\n      }\n    }\n    return this.intentLink(...arguments);\n  }\n\n  iosLink() {\n    return this.intentLink(...arguments);\n  }\n\n  /**\n   * Create a link depending on settings and OS\n   * @param  {String} path   Optional path\n   * @param  {String|Object} data Optional data\n   * @return {String}        Link to app\n   */\n  link(path='', data='') {\n    if (this.isIOS) {\n      return this.iosLink(path, data);\n    } else if (this.isAndroid) {\n      return this.androidLink(path, data);\n    }\n    return this.intentLink(...arguments);\n  }\n\n  /**\n   * Set the ios banner in the header\n   * This is the meta tag that ios supports, this helper\n   * makes it easier to pass on data.\n   * (It will create the meta tag if not found)\n   *\n   * @param  {String} path Optional path\n   * @param  {String} data Optional data\n   *\n   * @where  client\n   */\n  iosBanner(path='', data='') {\n    if (this.appId && Meteor.isClient) {\n\n      var link = this.intentLink(path, data);\n      var content = `app-id=${this.appId}, app-argument=${link}`;\n\n      var el = $('meta[name=apple-itunes-app]')[0];\n\n      if (el) {\n        el.setAttribute('content', content);\n      } else {\n        $('head').append(`<meta name=\"apple-itunes-app\" content=\"${content}\"/>`);\n      }\n\n    }\n\n\n  }\n\n  /**\n   * Open the app\n   * @param  {String} path  Optional path\n   * @param  {String} data  Optional data\n   * @param  {String} where Optional destination (_system)\n   *\n   * @where  client\n   */\n  open(path='', data='', where='_system') {\n    if (Meteor.isClient) {\n      window.open(this.link(path, data), where);\n    } else {\n      throw new Error('DeepLink.open is not implemented on the server');\n    }\n  }\n\n  static emit() { return eventState.emit(...arguments); }\n  static emitState() { return eventState.emitState(...arguments); }\n  static on() { return eventState.on(...arguments); }\n  static once() { return eventState.once(...arguments); }\n  static off() { return eventState.off(...arguments); }\n};\n\n"]}